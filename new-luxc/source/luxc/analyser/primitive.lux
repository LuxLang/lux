(;module:
  lux
  (lux (control monad)
       [meta #+ Monad<Meta>]
       (meta (type ["TC" check])))
  (luxc ["&" base]
        (lang ["la" analysis #+ Analysis])))

## [Analysers]
(do-template [<name> <type> <tag>]
  [(def: #export (<name> value)
     (-> <type> (Meta Analysis))
     (do Monad<Meta>
       [expected meta;expected-type
        _ (&;with-type-env
            (TC;check expected <type>))]
       (wrap (<tag> value))))]

  [analyse-bool Bool #la;Bool]
  [analyse-nat  Nat  #la;Nat]
  [analyse-int  Int  #la;Int]
  [analyse-deg  Deg  #la;Deg]
  [analyse-frac Frac #la;Frac]
  [analyse-text Text #la;Text]
  )

(def: #export analyse-unit
  (Meta Analysis)
  (do Monad<Meta>
    [expected meta;expected-type
     _ (&;with-type-env
         (TC;check expected Unit))]
    (wrap #la;Unit)))
