(.module:
  [lux (#- i64)
   [control
    monad]
   [data
    [text
     format]]
   [compiler
    [default
     [phase ("operation/." Monad<Operation>)]]]]
  [luxc
   [lang
    [host
     ["." jvm (#+ Inst Operation)
      ["_" inst]
      ["$t" type]]]]])

(def: #export (bit value)
  (-> Bit (Operation Inst))
  (operation/wrap (_.GETSTATIC "java.lang.Boolean"
                               (if value "TRUE" "FALSE")
                               ($t.class "java.lang.Boolean" (list)))))

(do-template [<name> <type> <load> <wrap>]
  [(def: #export (<name> value)
     (-> <type> (Operation Inst))
     (operation/wrap (|>> (<load> value) <wrap>)))]

  [i64  Int  _.long   (_.wrap #jvm.Long)]
  [f64  Frac _.double (_.wrap #jvm.Double)]
  [text Text _.string (<|)]
  )
