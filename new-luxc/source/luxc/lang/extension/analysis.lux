(.module:
  lux
  (lux (data [text]
             (coll [list "list/" Functor<List>]
                   (dictionary ["dict" unordered #+ Dict]))))
  [//]
  [/common]
  [/host])

(def: realize
  (-> /common.Bundle (Dict Text //.Analysis))
  (|>> dict.entries
       (list/map (function (_ [name proc]) [name (proc name)]))
       (dict.from-list text.Hash<Text>)))

(def: #export defaults
  (Dict Text //.Analysis)
  (realize (dict.merge /common.procedures
                       /host.procedures)))
