(;module:
  lux
  (lux (control [monad #+ do])
       [meta])
  [../base]
  (.. [analyser]
      [synthesizer]
      (generator [";G" expression]
                 [eval])))

(def: #export (eval type exprC)
  ../base;Eval
  (do meta;Monad<Meta>
    [exprA (../base;with-expected-type type
             (analyser;analyser eval exprC))
     #let [exprS (synthesizer;synthesize exprA)]
     exprI (expressionG;generate exprS)]
    (eval;eval exprI)))
