(.module:
  lux
  (lux [io]
       (control pipe)
       ["r" math/random "r/" Monad<Random>]
       (data ["e" error])
       [macro]
       (macro [code]))
  (luxc ["&" lang]
        (lang (analysis [".A" expression])
              [eval]))
  (test/luxc common))

(def: #export analyse
  &.Analyser
  (expressionA.analyser eval.eval))

(do-template [<name> <on-success> <on-failure>]
  [(def: #export (<name> analysis)
     (All [a] (-> (Meta a) Bool))
     (|> analysis
         (macro.run (io.run init-jvm))
         (case> (#e.Success _)
                <on-success>

                (#e.Error error)
                <on-failure>)))]

  [check-success true false]
  [check-failure false true]
  )
