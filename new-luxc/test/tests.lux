(;module:
  lux
  (lux (control monad)
       [io]
       (concurrency [promise])
       [cli #+ program:]
       [test])
  (test (luxc ["_;P" parser]
              (analyser ["_;A" primitive]
                        ["_;A" structure]
                        ["_;A" reference]
                        ["_;A" case]
                        ["_;A" function]
                        ["_;A" type]
                        (procedure ["_;A" common]
                                   ["_;A" host]))
              (synthesizer ["_;S" primitive]
                           ["_;S" structure]
                           (case ["_;S" special])
                           ["_;S" function]
                           ["_;S" procedure]
                           ["_;S" loop])
              (generator ["_;G" primitive]
                         ["_;G" structure]
                         ["_;G" case]
                         ["_;G" function]
                         ["_;G" reference]
                         (procedure ["_;G" common]
                                    ["_;G" host]))
              ))
  )

(program: args
  (test;run))
