(.module:
  lux
  (lux (control monad)
       [io]
       (concurrency [promise])
       [cli #+ program:]
       [test])
  (test (luxc (lang ## (analysis ["_.A" primitive]
                    ##           ["_.A" structure]
                    ##           ["_.A" reference]
                    ##           ["_.A" case]
                    ##           ["_.A" function]
                    ##           ["_.A" type]
                    ##           (procedure ["_.A" common]
                    ##                      ["_.A" host]))
                    ## (synthesis ["_.S" primitive]
                    ##            ["_.S" structure]
                    ##            (case ["_.S" special])
                    ##            ["_.S" function]
                    ##            ["_.S" procedure]
                    ##            ["_.S" loop])
                    (translation ## ["_.T" primitive]
                                 ## ["_.T" structure]
                                 ## ["_.T" function]
                                 ## ["_.T" reference]
                                 ## ["_.T" case]
                                 ["_.T" common]
                                 ## ["_.T" jvm]
                                 ## ["_.T" js]
                                 ## ["_.T" lua]
                                 ## ["_.T" ruby]
                                 ## ["_.T" python]
                                 ## ["_.T" r]
                                 ## ["_.T" scheme]
                                 ## ["_.T" common-lisp]
                                 ## ["_.T" php]
                                 ))
              )))

(program: args
  (test.run))
