(.module:
  [lux #*]
  ["." //
   ["." analysis]
   ["." synthesis]
   ["." translation]
   ["." extension]])

(type: #export (Component state phase)
  {#state state
   #phase phase})

(type: #export (State anchor expression statement)
  {#analysis (Component analysis.State+
                        analysis.Phase)
   #synthesis (Component synthesis.State+
                         synthesis.Phase)
   #translation (Component (translation.State+ anchor expression statement)
                           (translation.Phase anchor expression statement))})

(do-template [<special> <general>]
  [(type: #export (<special> anchor expression statement)
     (<general> (..State anchor expression statement) Code Any))]

  [State+    extension.State]
  [Operation extension.Operation]
  [Phase     extension.Phase]
  [Handler   extension.Handler]
  [Bundle    extension.Bundle]
  )

(do-template [<name> <component> <operation>]
  [(def: #export (<name> operation)
     (All [anchor expression statement output]
       (-> (<operation> output)
           (Operation anchor expression statement output)))
     (extension.lift
      (//.sub [(get@ [<component> #..state])
               (set@ [<component> #..state])]
              operation)))]

  [lift-analysis    #..analysis    analysis.Operation]
  [lift-synthesis   #..synthesis   synthesis.Operation]
  [lift-translation #..translation (translation.Operation anchor expression statement)]
  )
