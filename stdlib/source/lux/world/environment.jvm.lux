(.module:
  [lux #*
   [data
    ["." text]
    [format
     [context (#+ Context)]]
    [collection
     ["." dictionary]]]
   [io (#- run)]
   [host (#+ import:)]])

(import: java/lang/String)

(import: (java/util/Map$Entry k v)
  (getKey [] k)
  (getValue [] v))

(import: (java/util/Iterator a)
  (hasNext [] boolean)
  (next [] a))

(import: (java/util/Set a)
  (iterator [] (Iterator a)))

(import: (java/util/Map k v)
  (entrySet [] (Set (Map$Entry k v))))

(import: java/lang/System
  (#static getenv [] (Map String String)))

(def: (consume-iterator f iterator)
  (All [a b] (-> (-> a b) (Iterator a) (List b)))
  (if (Iterator::hasNext [] iterator)
    (#.Cons (f (Iterator::next [] iterator))
            (consume-iterator f iterator))
    #.Nil))

(def: (entry-to-kv entry)
  (All [k v] (-> (Map$Entry k v) [k v]))
  [(Map$Entry::getKey [] entry)
   (Map$Entry::getValue [] entry)])

(def: #export read
  (IO Context)
  (io (|> (System::getenv [])
          (Map::entrySet [])
          (Set::iterator [])
          (consume-iterator entry-to-kv)
          (dictionary.from-list text.Hash<Text>))))
