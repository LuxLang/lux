(;module:
  lux
  (lux (data [text]
             (format [context #+ Context])
             (coll [list "L/" Functor<List>]
                   ["d" dict]))
       [io #- run]
       [host #+ jvm-import]))

(jvm-import java.lang.String)

(jvm-import (java.util.Map$Entry k v)
  (getKey [] k)
  (getValue [] v))

(jvm-import (java.util.Iterator a)
  (hasNext [] boolean)
  (next [] a))

(jvm-import (java.util.Set a)
  (iterator [] (Iterator a)))

(jvm-import (java.util.Map k v)
  (entrySet [] (Set (Map$Entry k v))))

(jvm-import java.lang.System
  (#static getenv [] (java.util.Map String String)))

(def: (consume-iterator f iterator)
  (All [a b] (-> (-> a b) (Iterator a) (List b)))
  (if (Iterator.hasNext [] iterator)
    (#;Cons (f (Iterator.next [] iterator))
            (consume-iterator f iterator))
    #;Nil))

(def: (entry-to-kv entry)
  (All [k v] (-> (Map$Entry k v) [k v]))
  [(Map$Entry.getKey [] entry)
   (Map$Entry.getValue [] entry)])

(def: #export read
  (IO Context)
  (io (|> (System.getenv [])
          (Map.entrySet [])
          (Set.iterator [])
          (consume-iterator entry-to-kv)
          (d;from-list text;Hash<Text>))))
