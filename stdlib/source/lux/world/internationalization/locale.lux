(.module:
  [lux #*
   [data
    [text
     format
     ["." encoding (#+ Char-Set)]]]
   [type
    abstract]
   ["." macro]]
  [//
   ["." language (#+ Language)]
   ["." territory (#+ Territory)]])

(abstract: #export Locale
  {}

  Text

  (def: territory-separator "_")
  (def: char-set-separator ".")

  (def: #export (locale language territory char-set)
    (-> Language (Maybe Territory) (Maybe Char-Set) Locale)
    (:abstraction (format (language.language language)
                          (case territory
                            (#.Some territory)
                            (format ..territory-separator (territory.long-code territory))
                            
                            #.None
                            "")
                          (case char-set
                            (#.Some char-set)
                            (format ..char-set-separator (encoding.name char-set))
                            
                            #.None
                            ""))))

  (def: #export code
    (-> Locale Text)
    (|>> :representation))
  )
