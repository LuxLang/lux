##  Copyright (c) Eduardo Julian. All rights reserved.
##  This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
##  If a copy of the MPL was not distributed with this file,
##  You can obtain one at http://mozilla.org/MPL/2.0/.

(;module:
  lux
  (lux (control monad)
       (data (struct [list "List/" Monad<List>])
             text/format)
       [compiler]
       (macro ["s" syntax #+ syntax: Syntax])))

(def: omit^
  (Syntax Bool)
  (s;tag? ["" "omit"]))

(do-template [<macro> <func>]
  [(syntax: #export (<macro> [? omit^] token)
     {#;doc (doc "Performs a macro-expansion and logs the resulting ASTs."
                 "You can either use the resulting ASTs, or omit them."
                 "By omitting them, this macro produces nothing (just like the lux;comment macro)."
                 (<macro> (def: (foo bar baz)
                            (-> Int Int Int)
                            (i.+ bar baz))))}
     (do @
       [output (<func> token)
        #let [_ (List/map (. log! %ast)
                          output)]]
       (if ?
         (wrap (list))
         (wrap output))))]

  [expand      compiler;macro-expand]
  [expand-all  compiler;macro-expand-all]
  [expand-once compiler;macro-expand-once]
  )
