(.module:
  [lux #*
   [abstract
    [functor (#+ Functor)]
    comonad]])

(type: #export (Env e a)
  {#env e
   #value a})

(structure: #export functor (All [e] (Functor (Env e)))
  (def: (map f fa)
    (update@ #value f fa)))

(structure: #export comonad (All [e] (CoMonad (Env e)))
  (def: &functor ..functor)

  (def: unwrap (get@ #value))

  (def: (split wa)
    (set@ #value wa wa)))

(def: #export (local change env)
  (All [e a] (-> (-> e e) (Env e a) (Env e a)))
  (update@ #env change env))
