(;module:
  lux
  (lux (control ["F" functor]
                comonad)))

(type: #export (Env e a)
  {#env e
   #value a})

(struct: #export Functor<Env> (All [e] (F;Functor (Env e)))
  (def: (map f fa)
    (update@ #value f fa)))

(struct: #export CoMonad<Env> (All [e] (CoMonad (Env e)))
  (def: functor Functor<Env>)

  (def: unwrap (get@ #value))

  (def: (split wa)
    (set@ #value wa wa)))

(def: #export (local change env)
  (All [e a] (-> (-> e e) (Env e a) (Env e a)))
  (update@ #env change env))
