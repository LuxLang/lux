##  Copyright (c) Eduardo Julian. All rights reserved.
##  This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
##  If a copy of the MPL was not distributed with this file,
##  You can obtain one at http://mozilla.org/MPL/2.0/.

(;module:
  lux
  (lux (control monoid
                eq
                codec)
       (codata function)))

## [Structures]
(struct: #export _ (Eq Bool)
  (def: (= x y)
    (if x
      y
      (not y))))

(do-template [<name> <unit> <op>]
  [(struct: #export <name> (Monoid Bool)
     (def: unit <unit>)
     (def: (append x y)
       (<op> x y)))]

  [ Or@Monoid<Bool> false or]
  [And@Monoid<Bool> true and]
  )

(struct: #export _ (Codec Text Bool)
  (def: (encode x)
    (if x
      "true"
      "false"))

  (def: (decode input)
    (case input
      "true"  (#;Right true)
      "false" (#;Right false)
      _       (#;Left "Wrong syntax for Bool."))))

## [Values]
(def: #export complement
  {#;doc "Generates the complement of a predicate.
          That is a predicate that returns the oposite of the original predicate."}
  (All [a] (-> (-> a Bool) (-> a Bool)))
  (. not))
