(.module:
  [lux (#- All Cursor)
   [data
    ["." color (#+ Color)]
    ["." number]
    ["." text
     format]
    [collection
     ["." list ("list/." Functor<List> Monoid<List>)]]]
   [type
    abstract]
   ["." macro
    ["." code]
    ["s" syntax (#+ syntax:)]]
   [world
    [net (#+ URL)]]]
  [//
   [value (#+ All
              Length Thickness Time
              Location Area
              Slice
              Alignment Direction
              Animation Animation-Fill
              Column-Fill Column-Span
              Iteration Count
              Play
              Timing Visibility Attachment
              Blend Span Image
              Angle Repeat Border
              Collapse Break Caption
              Clear
              Content
              Cursor
              Shadow Clip)]])

(syntax: (text-identifier {identifier s.text})
  (wrap (list (code.local-identifier identifier))))

(abstract: #export (Property brand)
  {}

  Text

  (def: #export name
    (-> (Property Any) Text)
    (|>> :representation))

  (do-template [<brand> <alias>+ <property>+]
    [(`` (do-template [<alias> <property>]
           [(def: #export <alias>
              (Property <brand>)
              (:abstraction <property>))]

           (~~ (macro.multi <alias>+))))

     (with-expansions [<rows> (macro.multi <property>+)]
       (do-template [<property>]
         [(`` (def: #export (~~ (text-identifier <property>))
                (Property <brand>)
                (:abstraction <property>)))]
         
         <rows>))]

    [All
     []
     [["all"]]]

    [Length
     []
     [["border-image-outset"]
      ["border-image-width"]
      ["bottom"]
      ["column-gap"]
      ["column-width"]]]

    [Time
     []
     [["animation-delay"]
      ["animation-duration"]]]

    [Slice
     []
     [["border-image-slice"]]]

    [Color
     [[text-color "color"]]
     [["background-color"]
      ["border-color"]
      ["border-bottom-color"]
      ["border-left-color"]
      ["border-right-color"]
      ["border-top-color"]
      ["caret-color"]
      ["column-rule-color"]]]

    [Alignment
     []
     [["align-content"]
      ["align-items"]
      ["align-self"]]]

    [Direction
     []
     [["animation-direction"]]]

    [Animation
     []
     [["animation-name"]]]
    
    [Animation-Fill
     []
     [["animation-fill-mode"]]]

    [Column-Fill
     []
     [["column-fill"]]]

    [Column-Span
     []
     [["column-span"]]]

    [Iteration
     []
     [["animation-iteration-count"]]]

    [Count
     []
     [["column-count"]]]

    [Play
     []
     [["animation-play-state"]]]

    [Timing
     []
     [["animation-timing-function"]]]

    [Visibility
     []
     [["backface-visibility"]]]

    [Attachment
     []
     [["background-attachment"]]]

    [Blend
     []
     [["background-blend-mode"]]]

    [Image
     []
     [["background-image"]
      ["border-image-source"]]]

    [Span
     []
     [["background-clip"]
      ["background-origin"]
      ["box-sizing"]]]

    [Location
     []
     [["background-position"]]]

    [Repeat
     []
     [["background-repeat"]
      ["border-image-repeat"]]]

    [Area
     []
     [["background-size"]
      ["border-radius"]
      ["border-bottom-left-radius"]
      ["border-bottom-right-radius"]
      ["border-top-left-radius"]
      ["border-top-right-radius"]
      ["border-spacing"]]]

    [Border
     []
     [["border-style"]
      ["border-bottom-style"]
      ["border-left-style"]
      ["border-right-style"]
      ["border-top-style"]
      ["column-rule-style"]]]

    [Thickness
     []
     [["border-width"]
      ["border-bottom-width"]
      ["border-left-width"]
      ["border-right-width"]
      ["border-top-width"]
      ["column-rule-width"]]]

    [Collapse
     []
     [["border-collapse"]]]

    [Break
     []
     [["box-decoration-break"]]]

    [Caption
     []
     [["caption-side"]]]

    [Clear
     []
     [["clear"]]]

    [Shadow
     []
     [["box-shadow"]]]
    
    [Clip
     []
     [["clip"]]]

    [Content
     []
     [["counter-reset"]
      ["counter-increment"]]]

    [Cursor
     []
     [["cursor"]]]
    )
  )
