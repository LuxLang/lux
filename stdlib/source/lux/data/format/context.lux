(.module:
  lux
  (lux (control ["p" parser]
                ["ex" exception #+ exception:]
                [monad #+ do])
       (data ["E" error]
             (coll (dictionary ["dict" unordered #+ Dict])))))

(exception: #export (Unknown-Property {property Text})
  property)

(type: #export Context
  (Dict Text Text))

(type: #export (Property a)
  (p.Parser Context a))

(def: #export (property name)
  (-> Text (Property Text))
  (function (_ context)
    (case (dict.get name context)
      (#.Some value)
      (ex.return [context value])
      
      #.None
      (ex.throw Unknown-Property name))))

(def: #export (run context property)
  (All [a] (-> Context (Property a) (E.Error a)))
  (case (property context)
    (#E.Success [_ output])
    (#E.Success output)

    (#E.Error error)
    (#E.Error error)))
