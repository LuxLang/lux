(;module:
  lux
  (lux (control ord)))

## Signatures
(sig: #export (Interval a)
  {#;doc "A representation of top and bottom boundaries for an ordered type."}
  (: (Ord a)
     ord)

  (: a
     top)

  (: a
     bottom))

(def: #export (within? Interval<a> elem)
  (All [a] (-> (Interval a) a Bool))
  (let [(^open) Interval<a>]
    (if (>= bottom top)
      ## Inside order
      (and (>= bottom elem)
           (<= top elem))
      ## Outside order
      (and (<= bottom elem)
           (>= top elem))
      )))
