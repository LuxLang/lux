(;module: lux)

(sig: #export (Functor f)
  (: (All [a b]
       (-> (-> a b) (f a) (f b)))
     map))

(type: #export (Fix f)
  (f (Fix f)))

(struct: #export (compF Functor<F> Functor<G>)
  {#;doc "Functor composition."}
  (All [F G] (-> (Functor F) (Functor G) (Functor (All [a] (F (G a))))))
  (def: (map f fga)
    (:: Functor<F> map (:: Functor<G> map f) fga)))
