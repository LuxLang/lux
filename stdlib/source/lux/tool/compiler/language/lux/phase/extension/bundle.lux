(.module:
  [lux #*
   [abstract
    [monad (#+ do)]]
   [data
    ["." text
     ["%" format (#+ format)]]
    [collection
     ["." list ("#\." functor)]
     ["." dictionary (#+ Dictionary)]]]]
  [// (#+ Handler Bundle)])

(def: #export empty
  Bundle
  (dictionary.new text.hash))

(def: #export (install name anonymous)
  (All [s i o]
    (-> Text (Handler s i o)
        (-> (Bundle s i o) (Bundle s i o))))
  (dictionary.put name anonymous))

(def: #export (prefix prefix)
  (All [s i o]
    (-> Text (-> (Bundle s i o) (Bundle s i o))))
  (|>> dictionary.entries
       (list\map (function (_ [key val]) [(format prefix " " key) val]))
       (dictionary.from-list text.hash)))
