(.module:
  [lux (#- i64)
   [abstract
    [monad (#+ do)]]
   [target
    [jvm
     ["_" bytecode (#+ Bytecode)]
     ["." type]]]
   [macro
    ["." template]]]
  ["." // #_
   ["#." runtime]])

(def: $Boolean (type.class "java.lang.Boolean" (list)))
(def: $Long (type.class "java.lang.Long" (list)))
(def: $Double (type.class "java.lang.Double" (list)))

(def: #export (bit value)
  (-> Bit (Bytecode Any))
  (_.getstatic $Boolean (if value "TRUE" "FALSE") $Boolean))

(template [<name> <inputT> <ldc> <class> <inputD>]
  [(def: #export (<name> value)
     (-> <inputT> (Bytecode Any))
     (do _.monad
       [_ (`` (|> value (~~ (template.splice <ldc>))))]
       (_.invokestatic <class> "valueOf" (type.method [(list <inputD>) <class> (list)]))))]

  [i64 (I64 Any) [.int _.long] $Long   type.long]
  [f64 Frac      [_.double]    $Double type.double]
  )

(def: #export text _.string)
