(.module:
  [lux (#- Type type)
   [data
    [collection
     ["." list]]]
   [target
    [jvm
     ["." method (#+ Method)]
     ["_" bytecode (#+ Label Bytecode)]
     [constant
      [pool (#+ Resource)]]
     ["." type (#+ Type)
      ["." category]]]]]
  ["." //
   ["//#" /// #_
    ["#." type]
    [//////
     [arity (#+ Arity)]]]])

(def: #export name "impl")

(def: #export (type arity)
  (-> Arity (Type category.Method))
  (type.method [(list.repeat arity ////type.value)
                ////type.value
                (list)]))

(def: #export (method' name arity @begin body)
  (-> Text Arity Label (Bytecode Any) (Resource Method))
  (method.method //.modifier name
                 (..type arity)
                 (list)
                 (#.Some ($_ _.compose
                             (_.set-label @begin)
                             body
                             _.areturn
                             ))))

(def: #export method
  (-> Arity Label (Bytecode Any) (Resource Method))
  (method' ..name))
