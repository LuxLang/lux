(.module:
  [lux (#- type)
   [control
    [state (#+ State)]]
   [data
    [collection
     ["." list]]]
   [target
    [jvm
     ["." method (#+ Method)]
     ["_" instruction (#+ Label Instruction)]
     [constant
      [pool (#+ Pool)]]
     [type
      ["." category]
      ["." descriptor (#+ Descriptor)]]]]]
  ["." //
   ["//#" /// #_
    ["#." value]
    [////
     [arity (#+ Arity)]]]])

(def: #export name "impl")

(def: #export (type arity)
  (-> Arity (Descriptor category.Method))
  (descriptor.method [(list.repeat arity ////value.type)
                      ////value.type]))

(def: #export (method arity @begin body)
  (-> Arity Label (Instruction Any) (State Pool Method))
  (method.method //.modifier ..name
                 (..type arity)
                 (list)
                 ($_ _.compose
                     (_.set-label @begin)
                     body
                     _.areturn
                     )))
