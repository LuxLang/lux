(.module:
  [lux (#- Type)
   [data
    [collection
     ["." list ("#@." functor)]
     ["." row]]]
   [target
    [jvm
     ["_" bytecode (#+ Bytecode)]
     ["." field (#+ Field)]
     [constant
      [pool (#+ Resource)]]
     [type (#+ Type)
      [category (#+ Value Class)]]]]]
  ["." //
   ["///#" //// #_
    ["#." reference]
    [////
     [reference (#+ Register)]
     [analysis (#+ Environment)]]]])

(def: #export (closure environment)
  (-> Environment (List (Type Value)))
  (list.repeat (list.size environment) //.type))

(def: #export (get class register)
  (-> (Type Class) Register (Bytecode Any))
  (//.get class (/////reference.foreign-name register)))

(def: #export (put class register value)
  (-> (Type Class) Register (Bytecode Any) (Bytecode Any))
  (//.put /////reference.foreign-name class register value))

(def: #export variables
  (-> Environment (List (Resource Field)))
  (|>> list.size (//.variables /////reference.foreign-name)))
