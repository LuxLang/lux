(.module:
  [lux (#- type)
   [abstract
    ["." monad]]
   [control
    [state (#+ State)]]
   [data
    [collection
     ["." list]]]
   [target
    [jvm
     [modifier (#+ Modifier)]
     ["." method (#+ Method)]
     ["_" instruction]
     [constant
      [pool (#+ Pool)]]
     [encoding
      [name (#+ External)]]
     [type
      ["." category]
      ["." descriptor (#+ Descriptor)]]]]]
  ["." //
   ["#." new]
   ["/#" // #_
    ["#." arity]
    ["#." field
     ["#/." partial]]
    ["/#" // #_
     ["#." value]
     ["#." reference]
     [////
      [analysis (#+ Environment)]
      [reference (#+ Register)]
      ["." arity (#+ Arity)]]]]])

(def: #export name "reset")

(def: #export type
  (-> External (Descriptor category.Method))
  (|>> descriptor.class [(list)] descriptor.method))

(def: #export (method class environment arity)
  (-> External Environment Arity (State Pool Method))
  (method.method //.modifier ..name
                 (..type class)
                 (list)
                 ($_ _.compose
                     (if (arity.multiary? arity)
                       ($_ _.compose
                           (_.new class)
                           _.dup
                           (monad.map _.monad (function (_ source)
                                                ($_ _.compose
                                                    ////reference.this
                                                    (_.getfield class (////reference.foreign-name source) ////value.type)))
                                      (list.indices (list.size environment)))
                           (///field/partial.new arity)
                           (_.invokespecial class "<init>" (//new.type environment arity)))
                       ////reference.this)
                     _.areturn)))
