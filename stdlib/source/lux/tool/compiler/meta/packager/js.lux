(.module:
  [lux #*
   [control
    [pipe (#+ case>)]
    ["." function]]
   [data
    [binary (#+ Binary)]
    ["." product]
    ["." text
     ["." encoding]]
    [collection
     ["." row]
     ["." list ("#@." monad fold)]]]
   [target
    ["_" js]]
   [tool
    [compiler
     [phase
      [generation (#+ Output)]]]]])

(def: #export (package outputs)
  (-> (Output _.Statement) Binary)
  (|> outputs
      row.to-list
      (list@map (|>> product.right
                     row.to-list
                     (list@map product.right)))
      list@join
      (case> (#.Cons head tail)
             (|> (list@fold (function.flip _.then) head tail)
                 (: _.Statement)
                 _.code
                 encoding.to-utf8)
             
             #.Nil
             (encoding.to-utf8 ""))))
