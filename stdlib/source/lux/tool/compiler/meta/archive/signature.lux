(.module:
  [lux #*
   [abstract
    ["." equivalence (#+ Equivalence)]]
   [control
    ["<>" parser
     ["<b>" binary (#+ Parser)]]]
   [data
    ["." name]
    ["." text
     ["%" format (#+ format)]]
    [format
     ["." binary (#+ Writer)]]]]
  [////
   [version (#+ Version)]])

(type: #export Signature
  {#name Name
   #version Version})

(def: #export equivalence
  (Equivalence Signature)
  (equivalence.product name.equivalence text.equivalence))

(def: #export (description signature)
  (-> Signature Text)
  (format (%.name (get@ #name signature)) " " (get@ #version signature)))

(def: #export writer
  (Writer Signature)
  (binary.and (binary.and binary.text binary.text)
              binary.text))

(def: #export parser
  (Parser Signature)
  (<>.and (<>.and <b>.text <b>.text)
          <b>.text))
