(.module:
  {#.doc "Commons syntax writers."}
  lux
  (lux (data (coll [list "list/" Functor<List>])
             [product])
       (macro [code]))
  [//])

(def: #export (export exported?)
  (-> Bool (List Code))
  (if exported?
    (list (' #export))
    (list)))

(def: #export (declaration declaration)
  (-> //.Declaration Code)
  (` ((~ (code.local-symbol (get@ #//.declaration-name declaration)))
      (~+ (list/map code.local-symbol
                    (get@ #//.declaration-args declaration))))))

(def: #export (annotations anns)
  (-> //.Annotations Code)
  (|> anns (list/map (product.both code.tag id)) code.record))

(def: #export (type-variables vars)
  (-> (List Text) (List Code))
  (list/map code.local-symbol vars))
