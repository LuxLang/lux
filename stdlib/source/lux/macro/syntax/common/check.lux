(.module:
  [lux #*
   ["." meta]
   [abstract
    [monad (#+ do)]]
   [control
    ["." exception (#+ exception:)]
    ["<>" parser
     ["<.>" code (#+ Parser)]]]
   [macro
    ["." code]]])

(def: extension
  "lux check")

(type: #export Check
  {#type Code
   #value Code})

(def: #export (write (^slots [#type #value]))
  (-> Check Code)
  (` ((~ (code.text ..extension))
      (~ type)
      (~ value))))

(def: #export parser
  (Parser Check)
  (<| <code>.form
      (<>.after (<code>.text! ..extension))
      (<>.and <code>.any
              <code>.any)))
