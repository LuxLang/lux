(.module:
  [lux #*
   [macro
    ["." template]]
   [type
    abstract]])

(abstract: #export Void' Any)
(abstract: #export (Value' kind) Any)
(abstract: #export (Return' kind) Any)
(abstract: #export Method Any)

(type: #export Return (<| Return' Any))
(type: #export Value (<| Return' Value' Any))
(type: #export Void (<| Return' Void'))

(abstract: #export (Object' brand) Any)
(type: #export Object (<| Return' Value' Object' Any))

(abstract: #export (Parameter' brand) Any)
(type: #export Parameter (<| Return' Value' Object' Parameter' Any))

(template [<parents> <child>]
  [(with_expansions [<raw> (template.identifier [<child> "'"])]
     (abstract: #export <raw> Any)
     (type: #export <child>
       (`` (<| Return' Value' (~~ (template.splice <parents>)) <raw>))))]

  [[] Primitive]
  [[Object' Parameter'] Var]
  [[Object' Parameter'] Class]
  [[Object'] Array]
  )

(abstract: #export Declaration Any)
