(.module:
  [lux #*
   [abstract
    ["." equivalence (#+ Equivalence)]]
   [data
    [format
     ["." binary (#+ Format)]]]
   [type
    abstract]]
  ["." // #_
   ["#." encoding (#+ U2)]])

(abstract: #export (Index kind)
  {}

  U2

  (def: #export index
    (All [kind] (-> U2 (Index kind)))
    (|>> :abstraction))

  (def: #export number
    (-> (Index Any) U2)
    (|>> :representation))

  (def: #export equivalence
    (All [kind] (Equivalence (Index kind)))
    (:: equivalence.contravariant map-1
        ..number
        //encoding.equivalence))

  (def: #export format
    (All [kind] (Format (Index kind)))
    (binary.adapt ..index
                  ..number
                  //encoding.u2-format))
  )
