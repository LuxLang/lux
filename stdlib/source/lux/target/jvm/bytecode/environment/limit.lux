(.module:
  [lux #*
   [abstract
    ["." equivalence (#+ Equivalence)]]
   [data
    [number
     ["n" nat]]
    ["." format #_
     ["#" binary (#+ Writer) ("#@." monoid)]]]]
  ["." / #_
   ["#." stack (#+ Stack)]
   ["#." registry (#+ Registry)]])

(type: #export Limit
  {#stack Stack
   #registry Registry})

(def: #export start
  Limit
  {#stack /stack.empty
   #registry /registry.empty})

(def: #export length
  ($_ n.+
      ## u2 max_stack;
      /stack.length
      ## u2 max_locals;
      /registry.length))

(def: #export equivalence
  (Equivalence Limit)
  ($_ equivalence.product
      /stack.equivalence
      /registry.equivalence
      ))

(def: #export (writer limit)
  (Writer Limit)
  ($_ format@compose
      (/stack.writer (get@ #stack limit))
      (/registry.writer (get@ #registry limit))
      ))
