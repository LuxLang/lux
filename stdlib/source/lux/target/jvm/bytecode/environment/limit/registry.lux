(.module:
  [lux #*
   [abstract
    ["." equivalence (#+ Equivalence)]]
   [data
    ["." maybe]
    [format
     [binary (#+ Writer)]]]
   [type
    abstract]]
  ["." ///// #_
   [encoding
    ["#." unsigned (#+ U1 U2)]]])

(type: #export Register U1)

(abstract: #export Registry
  {}
  
  U2

  (def: #export empty
    Registry
    (|> 0 /////unsigned.u2 maybe.assume :abstraction))

  (def: #export equivalence
    (Equivalence Registry)
    (:: equivalence.contravariant map-1
        (|>> :representation)
        /////unsigned.equivalence))

  (def: #export writer
    (Writer Registry)
    (|>> :representation /////unsigned.writer/2))

  (def: #export (has register)
    (-> Register (-> Registry Registry))
    (|>> :representation
         (/////unsigned.max/2 (/////unsigned.lift/2 register))
         :abstraction))
  )

(def: #export length
  /////unsigned.bytes/2)
