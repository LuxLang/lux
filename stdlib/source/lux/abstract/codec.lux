(.module:
  [lux #*
   [data
    ["." error (#+ Error)]]]
  [//
   [monad (#+ do)]
   ["." functor]])

(signature: #export (Codec m a)
  {#.doc "A way to move back-and-forth between a type and an alternative representation for it."}
  (: (-> a m)
     encode)
  (: (-> m (Error a))
     decode))

(structure: #export (compose cb-codec ba-codec)
  {#.doc "Codec composition."}
  (All [a b c]
    (-> (Codec c b) (Codec b a)
        (Codec c a)))
  (def: encode
    (|>> (:: ba-codec encode)
         (:: cb-codec encode)))

  (def: (decode cy)
    (do error.monad
      [by (:: cb-codec decode cy)]
      (:: ba-codec decode by))))
