(.module:
  [lux #*
   ["_" test (#+ Test)]
   [abstract
    [monad (#+ do)]
    [hash (#+ Hash)]
    {[0 #spec]
     [/
      ["$." equivalence]]}]
   [control
    [concurrency
     [promise (#+ Promise)]]]
   [data
    ["." text ("#\." equivalence)]]
   [math
    ["." random (#+ Random)]]
   [world
    ["." file]
    [net
     ["." uri]]]]
  ["." / #_
   ["#." type]
   ["#." extension]
   ["#." value]
   ["#." versioning]
   ["#." time_stamp
    ["#/." date]
    ["#/." time]]]
  {#program
   ["." /]})

(def: #export random
  (Random /.Artifact)
  ($_ random.and
      (random.ascii/alpha 1)
      (random.ascii/alpha 1)
      (random.ascii/alpha 1)))

(def: #export test
  Test
  (<| (_.covering /._)
      (_.for [/.Group /.Name /.Version
              /.Artifact]
             ($_ _.and
                 (_.for [/.equivalence]
                        ($equivalence.spec /.equivalence ..random))
                 
                 /type.test
                 /extension.test
                 /value.test
                 /versioning.test
                 /time_stamp.test
                 /time_stamp/date.test
                 /time_stamp/time.test
                 ))))
