(.module:
  [library
   [lux #*
    ["_" test (#+ Test)]
    [abstract
     [monad (#+ do)]
     [hash (#+ Hash)]
     [\\spec
      ["$." equivalence]]]
    [control
     [concurrency
      [promise (#+ Promise)]]]
    [data
     ["." text ("#\." equivalence)]]
    [math
     ["." random (#+ Random)]]
    [world
     ["." file]
     [net
      ["." uri]]]]]
  ["." / #_
   ["#." extension]
   ["#." snapshot]
   ["#." time]
   ["#." type]
   ["#." versioning]]
  [\\program
   ["." /]])

(def: #export random
  (Random /.Artifact)
  ($_ random.and
      (random.ascii/alpha 1)
      (random.ascii/alpha 1)
      (random.ascii/alpha 1)))

(def: #export test
  Test
  (<| (_.covering /._)
      (_.for [/.Group /.Name /.Version
              /.Artifact]
             ($_ _.and
                 (_.for [/.equivalence]
                        ($equivalence.spec /.equivalence ..random))
                 
                 /extension.test
                 /snapshot.test
                 /time.test
                 /type.test
                 /versioning.test
                 ))))
