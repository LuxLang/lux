(.module:
  [lux #*
   ["_" test (#+ Test)]
   [abstract
    [monad (#+ do)]
    [hash (#+ Hash)]
    {[0 #spec]
     [/
      ["$." equivalence]]}]
   [math
    ["." random (#+ Random)]]]
  {#program
   ["." /]})

(def: #export random
  (Random /.Artifact)
  ($_ random.and
      (random.ascii/alpha 1)
      (random.ascii/alpha 1)
      (random.ascii/alpha 1)))

(def: #export test
  Test
  (<| (_.covering /._)
      (_.with-cover [/.Group /.Name /.Version
                     /.Artifact]
        ($_ _.and
            (_.with-cover [/.equivalence]
              ($equivalence.spec /.equivalence ..random))
            ))))
