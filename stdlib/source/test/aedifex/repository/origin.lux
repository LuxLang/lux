(.require
 [library
  [lux (.except)
   [abstract
    ["[0]" equivalence
     ["[1]T" \\test]]]
   [math
    ["[0]" random (.only Random)]]
   [test
    ["_" property (.only Test)]]]]
 [\\program
  ["[0]" /]])

(def .public random
  (Random /.Origin)
  (all random.or
       (random.alphabetic 10)
       (random.alphabetic 10)
       ))

(def .public test
  Test
  (<| (_.covering /._)
      (_.for [/.Origin]
             (all _.and
                  (_.for [/.equivalence]
                         (equivalenceT.spec /.equivalence ..random))
                  ))))
