... This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
... If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.

(.using
 [library
  [lux (.except)
   [abstract
    [monad (.only do)]]
   [control
    ["[0]" try (.use "[1]#[0]" functor)]
    [concurrency
     ["[0]" future]]]
   [data
    ["[0]" binary]
    [text
     [encoding
      ["[0]" utf8]]]]
   [math
    ["[0]" random]]
   [world
    ["[0]" file]
    ["[0]" environment
     ["program" /]
     ["[1]" \\projection]]]
   [test
    ["[0]" unit]
    ["_" property (.only Test)]]]]
 [\\program
  ["[0]" /]])

(the .public test
  Test
  (<| (_.covering /._)
      (do [! random.monad]
        [/ (random.upper_cased 1)
         home (random.lower_cased 10)
         working_directory (random.lower_cased 10)
         .let [fs (file.mock /)
               program (program.future (program.mock environment.empty home working_directory))
               repo (/.repository program fs)]

         uri (random.lower_cased 10)
         expected (by ! each (by utf8.format injection)
                      (random.lower_cased 10))]
        (all _.and
             (in (do future.monad
                   [before_upload (by repo download uri)
                    _ (by repo upload uri expected)
                    actual (by repo download uri)]
                   (unit.coverage [/.repository]
                     (and (when before_upload
                            {try.#Success _} false
                            {try.#Failure _} true)
                          (|> actual
                              (try#each (binary.= expected))
                              (try.else false))))))
             ))))
