(.module:
  [library
   [lux "*"
    ["_" test {"+" Test}]
    [abstract
     [monad {"+" do}]
     [\\specification
      ["$[0]" equivalence]
      ["$[0]" order]
      ["$[0]" hash]]]
    [math
     ["[0]" random {"+" Random}]]]]
  [//
   ["@[0]" artifact]]
  [\\program
   ["[0]" /]])

(def: .public random
  (Random /.Dependency)
  ($_ random.and
      @artifact.random
      (random.ascii/alpha 1)))

(def: .public test
  Test
  (<| (_.covering /._)
      (_.for [/.Dependency]
             ($_ _.and
                 (_.for [/.equivalence]
                        ($equivalence.spec /.equivalence ..random))
                 (_.for [/.order]
                        ($order.spec /.order ..random))
                 (_.for [/.hash]
                        ($hash.spec /.hash ..random))
                 ))))
