(.using
 [library
  [lux (.full)
   ["_" test (.only Test)]
   [abstract
    [monad (.only do)]
    [\\specification
     ["$[0]" equivalence]
     ["$[0]" order]
     ["$[0]" hash]]]
   [math
    ["[0]" random (.only Random)]]]]
 [//
  ["@[0]" artifact]]
 [\\program
  ["[0]" /]])

(def: .public random
  (Random /.Dependency)
  (all random.and
       @artifact.random
       (random.alphabetic 1)))

(def: .public test
  Test
  (<| (_.covering /._)
      (_.for [/.Dependency]
             (all _.and
                  (_.for [/.equivalence]
                         ($equivalence.spec /.equivalence ..random))
                  (_.for [/.order]
                         ($order.spec /.order ..random))
                  (_.for [/.hash]
                         ($hash.spec /.hash ..random))
                  ))))
