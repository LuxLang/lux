(.module:
  [lux #*
   ["_" test (#+ Test)]
   [abstract
    [monad (#+ do)]
    {[0 #spec]
     [/
      ["$." equivalence]]}]
   [math
    ["." random (#+ Random)]]]
  [//
   ["@." artifact]]
  {#program
   ["." /]})

(def: #export random
  (Random /.Dependency)
  ($_ random.and
      @artifact.random
      (random.ascii/alpha 1)))

(def: #export test
  Test
  (<| (_.covering /._)
      (_.for [/.Dependency]
             ($_ _.and
                 (_.for [/.equivalence]
                        ($equivalence.spec /.equivalence ..random))
                 ))))
