(.module:
  [lux #*
   ["_" test (#+ Test)]
   [abstract
    [monad (#+ do)]
    {[0 #spec]
     [/
      ["$." equivalence]]}]
   [control
    ["." try ("#\." functor)]
    [parser
     ["<.>" xml]]]
   [math
    ["." random]]]
  {#program
   ["." /]})

(def: #export test
  Test
  (<| (_.covering /._)
      (_.for [/.Build]
             ($_ _.and
                 (_.for [/.equivalence]
                        ($equivalence.spec /.equivalence random.nat))
                 
                 (do random.monad
                   [expected random.nat]
                   (_.cover [/.format /.parser]
                            (|> expected
                                /.format
                                (<xml>.run /.parser)
                                (try\map (\ /.equivalence = expected))
                                (try.default false))))
                 ))))
