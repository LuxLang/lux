(.require
 [library
  [lux (.except)
   ["_" test (.only Test)]
   [abstract
    [monad (.only do)]]
   [data
    ["[0]" text (.use "[1]#[0]" equivalence)]
    [collection
     ["[0]" set]
     ["[0]" list]]]
   [math
    ["[0]" random (.only Random)]
    [number
     ["n" nat]]]]]
 [\\program
  ["[0]" / (.only)
   ["/[1]" //
    ["[1]" type]]]])

(def .public test
  Test
  (<| (_.covering /._)
      (_.for [/.Extension]
             (all _.and
                  (_.coverage [/.lux_library /.jvm_library /.pom
                               /.sha-1 /.md5]
                    (let [options (list /.lux_library /.jvm_library /.pom /.sha-1 /.md5)
                          uniques (set.of_list text.hash options)]
                      (n.= (list.size options)
                           (set.size uniques))))
                  (_.coverage [/.extension /.type]
                    (`` (and (,, (with_template [<type> <extension>]
                                   [(and (text#= <extension>
                                                 (/.extension <type>))
                                         (text#= <type>
                                                 (/.type (/.extension <type>))))]

                                   [//.lux_library /.lux_library]
                                   [//.jvm_library /.jvm_library]
                                   [//.pom /.pom]
                                   )))))
                  ))))
