(.module:
  [lux #*
   ["_" test (#+ Test)]
   [abstract
    [monad (#+ do)]]
   [data
    ["." text]
    [number
     ["n" nat]]
    [collection
     ["." set]
     ["." list]]]
   [math
    ["." random (#+ Random) ("#\." monad)]]]
  {#program
   ["." /]})

(def: #export random
  (Random /.Type)
  ($_ random.either
      ($_ random.either
          (random\wrap /.lux-library)
          (random\wrap /.jvm-library))
      ($_ random.either
          (random\wrap /.pom)
          (random\wrap /.md5)
          (random\wrap /.sha-1))
      ))

(def: #export test
  Test
  (<| (_.covering /._)
      (_.for [/.Type]
             ($_ _.and
                 (_.cover [/.lux-library /.jvm-library
                           /.pom /.md5 /.sha-1]
                          (let [options (list /.lux-library /.jvm-library
                                              /.pom /.md5 /.sha-1)
                                uniques (set.from-list text.hash options)]
                            (n.= (list.size options)
                                 (set.size uniques))))
                 ))))
