(.require
 [library
  [lux (.except)
   [abstract
    [monad (.only do)]]
   [math
    ["[0]" random (.only Random)]]
   [test
    ["_" property (.only Test)]]]]
 [\\library
  ["[0]" /]]
 ["[0]" /
  ["[1][0]" mime]
  ["[1][0]" http
   ["[1]/[0]" client]
   ["[1]/[0]" cookie]
   ["[1]/[0]" header]
   ["[1]/[0]" status]
   ["[1]/[0]" version]
   ["[1]/[0]" response]]
  ["[1][0]" uri
   ["[1]/[0]" encoding]
   ["[1]/[0]" scheme]
   ["[1]/[0]" port]
   ["[1]/[0]" path]
   ["[1]/[0]" query]]])

(def .public test
  Test
  (<| (_.covering /._)
      (do [! random.monad]
        [])
      (all _.and
           (_.coverage [/.Host]
             true)
           (_.coverage [/.URL]
             true)
           (_.coverage [/.Address]
             true)

           /mime.test
           
           /http/client.test
           /http/cookie.test
           /http/header.test
           /http/status.test
           /http/version.test
           /http/response.test

           /uri/encoding.test
           /uri/scheme.test
           /uri/port.test
           /uri/path.test
           /uri/query.test
           )))
