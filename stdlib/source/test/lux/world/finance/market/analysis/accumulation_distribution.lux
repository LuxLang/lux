(.require
 [library
  [lux (.except)
   [abstract
    [monad (.only do)]]
   [math
    ["[0]" random (.only Random)]
    [number
     ["f" frac]]]
   [test
    ["_" property (.only Test)]]]]
 [\\library
  ["[0]" / (.only)
   [////
    [money
     ["[0]" currency]]]]]
 [////
  [trade
   ["[0]T" session]]])

(def .public test
  Test
  (<| (_.covering /._)
      (do [! random.monad]
        [session (sessionT.random currency.usd 1000,00)])
      (all _.and
           (_.coverage [/.oscillation]
             (let [it (/.oscillation session)]
               (and (f.<= +1.0 it)
                    (f.>= -1.0 it))))
           )))
