(.require
 [library
  [lux (.except)
   [abstract
    [monad (.only do)]]
   [math
    ["[0]" random (.only Random)]]
   [test
    ["_" property (.only Test)]]]]
 [\\library
  ["[0]" / (.only)
   [////
    ["[0]" money (.only)
     ["[0]" currency]]
    [trade
     ["[0]" session (.only)
      ["[1]T" \\test]]]]]])

(def .public test
  Test
  (<| (_.covering /._)
      (do [! random.monad]
        [session (sessionT.random currency.usd 1000,00)])
      (all _.and
           (_.coverage [/.typical_price]
             (let [it (/.typical_price session)]
               (and (money.<= (the session.#high session)
                              it)
                    (money.>= (the session.#low session)
                              it))))
           (_.coverage [/.Central_Pivot_Range /.central_pivot_range
                        /.#pivot_point /.#top_central /.#bottom_central]
             (let [it (/.central_pivot_range session)]
               (and (money.= (/.typical_price session)
                             (the /.#pivot_point it))
                    (money.< (the /.#top_central it)
                             (the /.#pivot_point it))
                    (money.> (the /.#bottom_central it)
                             (the /.#pivot_point it)))))
           )))
