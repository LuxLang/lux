... This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
... If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.

(.require
 [library
  [lux (.except)
   [abstract
    [monad (.only do)]
    ["[0]" monoid
     ["[1]T" \\test]]]
   [data
    ["[0]" bit (.use "[1]#[0]" equivalence)]
    ["[0]" text (.use "[1]#[0]" equivalence)]]
   [math
    ["[0]" random (.only Random) (.use "[1]#[0]" functor)]
    [number
     ["n" nat]
     ["f" frac]]]
   [test
    ["_" property (.only Test)]]]]
 [\\library
  ["[0]" / (.only)
   [///
    ["[0]" money (.only)
     ["[0]" currency]]]]])

(the .public random
  (Random /.Rate)
  (do [! random.monad]
    [.let [max 100]
     it (of ! each (n.% (++ max)) random.nat)
     gain? random.bit
     .let [it (f./ (n.frac max)
                   (n.frac it))]]
    (in (if gain?
          (f.+ it /.break_even)
          (f.- it /.break_even)))))

(the .public test
  Test
  (<| (_.covering /._)
      (do [! random.monad]
        [left ..random
         right ..random

         money (of ! each (|>> (n.% 1,000) ++) random.nat)])
      (_.for [/.Rate])
      (all _.and
           (_.for [/.monoid /.break_even /.compound]
                  (monoidT.spec (f.approximately? +0.000000000000001)
                                /.monoid
                                ..random))
           
           (_.coverage [/.format]
             (bit#= (f.= left right)
                    (text#= (/.format left) (/.format right))))
           (_.coverage [/.loss? /.gain? /.break_even?]
             (or (and (/.loss? left)
                      (not (/.gain? left))
                      (not (/.break_even? left)))
                 (and (not (/.loss? left))
                      (/.gain? left)
                      (not (/.break_even? left)))
                 (and (not (/.loss? left))
                      (not (/.gain? left))
                      (/.break_even? left))))
           (_.coverage [/.rate]
             (and (/.loss? (/.rate (money.money currency.usd money)
                                   (money.money currency.usd (-- money))))
                  (/.gain? (/.rate (money.money currency.usd money)
                                   (money.money currency.usd (++ money))))
                  (/.break_even? (/.rate (money.money currency.usd money)
                                         (money.money currency.usd money)))))
           )))
