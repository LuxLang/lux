... This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
... If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.

(.using
 [library
  [lux (.except)
   [abstract
    ["[0]" monad]]
   [control
    ["[0]" maybe]]
   [error
    ["[0]" try (.use "[1]:[0]" functor)]]
   [data
    ["[0]" text (.only)
     ["%" \\injection]]
    [collection
     ["[0]" list]
     ["[0]" set]]]
   [math
    ["[0]" random (.only Random)]
    [number
     [/64
      ["n" natural]]]]
   [test
    ["_" property (.only Test)]]]]
 [\\library
  ["[0]" /]])

(the .public test
  Test
  (<| (_.covering /._)
      (let [choices (set.as_list /.reserved)
            variety (list.size choices)])
      (monad.let [! random.monad]
        [safe (random.lower_cased 1)

         left (random.lower_cased 1)
         middle (random.lower_cased 1)
         right (random.lower_cased 1)
         left_choice (by ! each (n.% variety) random.natural)
         right_choice (by ! each (n.% variety) random.natural)
         .let [left_choice (maybe.trusted (list.item left_choice choices))
               right_choice (maybe.trusted (list.item right_choice choices))
               unsafe (text left
                            (text.of_character left_choice) middle
                            (text.of_character right_choice) right)]])
      (_.for [/.URI_Encoded])
      (all _.and
           (_.coverage [/.reserved]
             (not (set.empty? /.reserved)))
           (_.coverage [/.as_text]
             (and (text.= safe (/.as_text safe))
                  (not (text.= unsafe (/.as_text unsafe)))))
           (_.coverage [/.of_text]
             (|> unsafe
                 /.as_text
                 /.of_text
                 (try:each (text.= unsafe))
                 (try.else false)))
           )))
