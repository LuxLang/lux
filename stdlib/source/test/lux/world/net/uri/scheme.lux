(.require
 [library
  [lux (.except)
   [abstract
    [monad (.only do)]
    [\\specification
     ["$[0]" equivalence]
     ["$[0]" hash]]]
   [data
    [collection
     ["[0]" list]
     ["[0]" set]]]
   [math
    ["[0]" random (.only Random) (.use "[1]#[0]" monad)]
    [number
     ["n" nat]]]
   [test
    ["_" property (.only Test)]]]]
 [\\library
  ["[0]" /]])

(def .public random
  (Random /.Scheme)
  (all random.either
       (random#in /.about)
       (random#in /.acap)
       (random#in /.user_account)
       (random#in /.anonymous_customer_reference)
       (random#in /.attachment)

       (random#in /.bitcoin)
       (random#in /.blob)

       (random#in /.calendar_access_protocol)

       (random#in /.data)
       (random#in /.dns)
       (random#in /.dntp)
       (random#in /.digital_object_identifier)
       (random#in /.drm)

       (random#in /.feed)
       (random#in /.file)
       (random#in /.finger)
       (random#in /.fish)
       (random#in /.fm)
       (random#in /.ftp)

       (random#in /.geo)
       (random#in /.git)
       
       (random#in /.http)
       (random#in /.https)
       
       (random#in /.imap)
       (random#in /.ipp)
       (random#in /.ipps)
       (random#in /.irc)
       (random#in /.irc6)
       (random#in /.ircs)
       
       (random#in /.jar)
       
       (random#in /.ldap)
       (random#in /.ldaps)
       
       (random#in /.magnet)
       (random#in /.mail_to)
       (random#in /.apache_maven)
       
       (random#in /.pop)
       
       (random#in /.sip)
       (random#in /.sips)
       (random#in /.sms)
       (random#in /.snmp)
       (random#in /.ssh)
       (random#in /.stun)
       (random#in /.stuns)
       
       (random#in /.telephone_number)
       (random#in /.turn)
       (random#in /.turns)
       
       (random#in /.xmpp)
       ))

(def .public test
  Test
  (<| (_.covering /._)
      (do [! random.monad]
        [expected ..random])
      (_.for [/.Scheme])
      (`` (all _.and
               (_.for [/.equivalence]
                      ($equivalence.spec /.equivalence ..random))
               (_.for [/.hash]
                      ($hash.spec /.hash ..random))

               (_.coverage [/.name /.scheme]
                 (|> expected
                     /.name
                     /.scheme
                     (at /.equivalence = expected)))
               (with_expansions [<schemes> (these /.about /.acap /.user_account /.anonymous_customer_reference /.attachment
                                                  /.bitcoin /.blob
                                                  /.calendar_access_protocol
                                                  /.data /.dns /.dntp /.digital_object_identifier /.drm
                                                  /.feed /.file /.finger /.fish /.fm /.ftp
                                                  /.geo /.git
                                                  /.http /.https
                                                  /.imap /.ipp /.ipps /.irc /.irc6 /.ircs
                                                  /.jar
                                                  /.ldap /.ldaps
                                                  /.magnet /.mail_to /.apache_maven
                                                  /.pop
                                                  /.sip /.sips /.sms /.snmp /.ssh /.stun /.stuns
                                                  /.telephone_number /.turn /.turns
                                                  /.xmpp)]
                 (_.coverage [<schemes>]
                   (let [options (list <schemes>)
                         uniques (set.of_list /.hash options)]
                     (n.= (list.size options)
                          (set.size uniques)))))
               (,, (with_template [<original> <alias>]
                     [(_.coverage [<alias>]
                        (at /.equivalence = <original> <alias>))]

                     [/.acap /.application_configuration_access_protocol]

                     [/.dns /.domain_name_system]
                     [/.dntp /.direct_network_transfer_protocol]

                     [/.ftp /.file_transfer_protocol]

                     [/.http /.hypertext_transfer_protocol]
                     [/.https /.secure_hypertext_transfer_protocol]

                     [/.imap /.internet_message_access_protocol]
                     [/.ipp /.internet_printing_protocol]
                     [/.ipps /.secure_internet_printing_protocol]
                     [/.irc /.internet_relay_chat]
                     [/.ircs /.secure_internet_relay_chat]

                     [/.ldap /.lightweight_directory_access_protocol]
                     [/.ldaps /.secure_lightweight_directory_access_protocol]

                     [/.pop /.post_office_protocol]

                     [/.sip /.session_initiation_protocol]
                     [/.sips /.secure_session_initiation_protocol]
                     [/.sms /.short_message_service]
                     [/.snmp /.simple_network_management_protocol]
                     [/.ssh /.secure_shell_protocol]

                     [/.stun /.session_traversal_utilities_for_nat]
                     [/.stuns /.secure_session_traversal_utilities_for_nat]

                     [/.turn /.traversal_using_relays_around_nat]
                     [/.turns /.secure_traversal_using_relays_around_nat]

                     [/.xmpp /.extensible_messaging_and_presence_protocol]))
               ))))
