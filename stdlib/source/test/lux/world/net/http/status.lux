... This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
... If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.

(.using
 [library
  [lux (.except all)
   [abstract
    ["[0]" monad]]
   [control
    ["[0]" maybe]]
   [data
    [collection
     ["[0]" list (.use "[1]#[0]" monad)]
     ["[0]" set (.only Set)]]]
   [math
    ["[0]" random (.only Random)]
    [number
     [/64
      ["n" natural]]]]
   [macro
    ["[0]" template]
    ["[0]" expansion]]
   [test
    ["_" property (.only Test)]]]]
 [\\library
  ["[0]" /]])

(expansion.let [<categories> (these [informational
                                     [/.continue
                                      /.switching_protocols
                                      /.processing
                                      /.early_hints]]
                                    [success
                                     [/.ok
                                      /.created
                                      /.accepted
                                      /.non_authoritative_information
                                      /.no_content
                                      /.reset_content
                                      /.partial_content
                                      /.multi_status
                                      /.already_reported
                                      /.im_used]]
                                    [redirection
                                     [/.multiple_choices
                                      /.moved_permanently
                                      /.found
                                      /.see_other
                                      /.not_modified
                                      /.use_proxy
                                      /.switch_proxy
                                      /.temporary_redirect
                                      /.permanent_redirect]]
                                    [client
                                     [/.bad_request
                                      /.unauthorized
                                      /.payment_required
                                      /.forbidden
                                      /.not_found
                                      /.method_not_allowed
                                      /.not_acceptable
                                      /.proxy_authentication_required
                                      /.request_timeout
                                      /.conflict
                                      /.gone
                                      /.length_required
                                      /.precondition_failed
                                      /.payload_too_large
                                      /.uri_too_long
                                      /.unsupported_media_type
                                      /.range_not_satisfiable
                                      /.expectation_failed
                                      /.im_a_teapot
                                      /.misdirected_request
                                      /.unprocessable_entity
                                      /.locked
                                      /.failed_dependency
                                      /.upgrade_required
                                      /.precondition_required
                                      /.too_many_requests
                                      /.request_header_fields_too_large
                                      /.unavailable_for_legal_reasons]]
                                    [server
                                     [/.internal_server_error
                                      /.not_implemented
                                      /.bad_gateway
                                      /.service_unavailable
                                      /.gateway_timeout
                                      /.http_version_not_supported
                                      /.variant_also_negotiates
                                      /.insufficient_storage
                                      /.loop_detected
                                      /.not_extended
                                      /.network_authentication_required]])]
  (these (the all
           (List /.Status)
           (list#conjoint (`` (list (,, (template.with [<category> <status+>]
                                          [((is (-> Any (List /.Status))
                                                (function (_ _)
                                                  (`` (list (,, (template.spliced <status+>))))))
                                            123)]
                                          
                                          [<categories>]))))))
         
         (the unique
           (Set /.Status)
           (set.of_list n.hash ..all))

         (the .public random
           (Random /.Status)
           (monad.let [! random.monad]
             [choice (by ! each (n.% (set.size ..unique))
                         random.natural)]
             (pure (maybe.trusted (list.item choice all)))))

         (the verdict
           (n.= (list.size ..all)
                (set.size ..unique)))

         (template.with [<category> <status+>]
           [(the <category>
              Test
              (_.coverage <status+>
                ..verdict))]
           
           [<categories>])

         (the .public test
           Test
           (<| (_.covering /._)
               (_.for [/.Status])
               (`` (.all _.and
                         (,, (template.with [<category> <status+>]
                               [<category>]
                               
                               [<categories>]))
                         )))))
  )
