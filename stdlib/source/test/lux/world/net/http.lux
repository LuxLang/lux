(.require
 [library
  [lux (.except)
   [abstract
    [monad (.only do)]]
   [math
    ["[0]" random (.only Random)]]
   [test
    ["_" property (.only Test)]]]]
 [\\library
  ["[0]" /]]
 ["[0]" /
  ["[1][0]" client]
  ["[1][0]" cookie]
  ["[1][0]" header]
  ["[1][0]" status]
  ["[1][0]" version]
  ["[1][0]" response]
  ["[1][0]" request]
  ["[1][0]" server]])

(def .public test
  Test
  (<| (_.covering /._)
      (do [! random.monad]
        [])
      (all _.and
           (_.coverage [/.Method
                        /.#Post /.#Get /.#Put /.#Patch /.#Delete /.#Head /.#Connect /.#Options /.#Trace]
             true)
           (_.coverage [/.Body]
             true)
           (_.coverage [/.Message
                        /.#headers /.#body]
             true)

           /client.test
           /cookie.test
           /header.test
           /status.test
           /version.test
           /response.test
           /request.test
           /server.test
           )))
