(.module:
  [lux #*
   ["_" test (#+ Test)]
   [abstract
    [monad (#+ do)]]
   [control
    [concurrency
     ["." promise]]]
   [data
    ["." text]
    [collection
     ["." dictionary]
     ["." list]]]
   [math
    ["." random]]]
  {1
   ["." /]})

(def: #export test
  Test
  (<| (_.covering /._)
      (_.with-cover [/.Environment /.Property])
      (do random.monad
        [_ (wrap [])]
        (wrap (do promise.monad
                [environment (promise.future /.read)]
                (_.cover' [/.read]
                          (and (not (dictionary.empty? environment))
                               (|> environment
                                   dictionary.keys
                                   (list.every? (|>> text.empty? not))))))))))
