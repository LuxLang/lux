... This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
... If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.

(.require
 [library
  [lux (.except)
   [abstract
    [monad (.only do)]]
   [data
    ["[0]" text (.only)
     ["%" \\injection]]
    [collection
     ["[0]" list]
     ["[0]" set]]]
   [math
    ["[0]" random (.only Random)]
    [number
     ["n" nat]]]
   [meta
    [macro
     ["[0]" expansion]]]
   [world
    [net (.only URL)]]
   [test
    ["_" property (.only Test)]]]]
 [\\library
  ["[0]" /]])

(the random_url
  (Random URL)
  (do random.monad
    [domain (random.lower_cased 5)]
    (in (%.message "http://www." domain ".com"))))

(expansion.let [<tags> (with_template [<name>]
                         [<name>]

                         [/.accelerometer]
                         [/.ambient_light_sensor]
                         [/.autoplay]
                         [/.battery]
                         [/.camera]
                         [/.display_capture]
                         [/.document_domain]
                         [/.encrypted_media]
                         [/.execution_while_not_rendered]
                         [/.execution_while_out_of_viewport]
                         [/.fullscreen]
                         [/.gamepad]
                         [/.geolocation]
                         [/.gyroscope]
                         [/.hid]
                         [/.identity_credentials_get]
                         [/.idle_detection]
                         [/.local_fonts]
                         [/.magnetometer]
                         [/.microphone]
                         [/.midi]
                         [/.payment]
                         [/.picture_in_picture]
                         [/.publickey_credentials_create]
                         [/.publickey_credentials_get]
                         [/.screen_wake_lock]
                         [/.serial]
                         [/.speaker_selection]
                         [/.storage_access]
                         [/.usb]
                         [/.web_share]
                         [/.xr_spatial_tracking]
                         )]
  (the .public test
    Test
    (<| (_.covering /._)
        (do [! random.monad]
          [origin ..random_url])
        (all _.and
             (<| (_.for [/.Directive])
                 (_.coverage [<tags>]
                   (let [all (is (List /.Directive)
                                 (list <tags>))
                         uniques (set.of_list text.hash all)]
                     (n.= (list.size all)
                          (set.size uniques)))))
             (<| (_.for [/.Allowance])
                 (_.coverage [/.self /.source /.origin]
                   (let [all (is (List /.Directive)
                                 (list /.self
                                       /.source
                                       (/.origin origin)))
                         uniques (set.of_list text.hash all)]
                     (n.= (list.size all)
                          (set.size uniques)))))
             ))))
