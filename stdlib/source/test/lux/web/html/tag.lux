... This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
... If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.

(.using
 [library
  [lux (.except)
   [abstract
    [monad (.only do)]]
   [data
    ["[0]" text]
    [collection
     ["[0]" list]
     ["[0]" set]]]
   [math
    ["[0]" random (.only Random)]
    [number
     ["n" natural]]]
   [macro
    ["[0]" template]
    ["[0]" expansion]]
   [test
    ["_" property (.only Test)]]]]
 [\\library
  ["[0]" /]])

(expansion.let [,bundles (these [[[/.link]
                                  [/.meta]
                                  [/.input]
                                  [/.embedded]
                                  [/.column]
                                  [/.parameter]

                                  [/.base]
                                  [/.style]
                                  [/.script]

                                  [/.line_break]
                                  [/.word_break]
                                  [/.separator]]]

                                [[[/.image]
                                  [/.svg]
                                  [/.area]
                                  [/.map]

                                  [/.canvas]
                                  [/.progress]
                                  [/.output]
                                  [/.source]
                                  [/.track]

                                  [/.audio]
                                  [/.video]

                                  [/.picture]
                                  [/.anchor]
                                  [/.label]]]

                                [[[/.details]
                                  [/.summary]
                                  [/.field_set]
                                  [/.legend]
                                  [/.figure]
                                  [/.figure_caption]

                                  [/.text_area]
                                  [/.iframe]

                                  [/.abbrebiation]
                                  [/.block_quote]
                                  [/.bold]
                                  [/.cite]
                                  [/.code]
                                  [/.definition]
                                  [/.deleted]
                                  [/.emphasized]]]

                                [[[/.h1]
                                  [/.h2]
                                  [/.h3]
                                  [/.h4]
                                  [/.h5]
                                  [/.h6]

                                  [/.inserted]
                                  [/.italic]
                                  [/.keyboard]
                                  [/.marked]
                                  [/.meter]
                                  [/.pre]
                                  [/.quote]
                                  [/.sample]
                                  [/.struck]
                                  [/.small]
                                  [/.sub]
                                  [/.super]
                                  [/.strong]
                                  [/.time]
                                  [/.underlined]
                                  [/.variable]]]

                                [[[/.ruby_annotation]
                                  [/.ruby_pronunciation]
                                  [/.ruby]

                                  [/.article]
                                  [/.aside]
                                  [/.dialog]
                                  [/.div]
                                  [/.footer]
                                  [/.header]
                                  [/.main]
                                  [/.navigation]
                                  [/.paragraph]
                                  [/.section]
                                  [/.span]]]
                                
                                [[[/.term]
                                  [/.description]
                                  [/.description_list]

                                  [/.button]
                                  [/.item]
                                  [/.ordered_list]
                                  [/.unordered_list]
                                  [/.option]
                                  [/.option_group]
                                  [/.data_list]
                                  [/.select]
                                  [/.address]
                                  [/.form]
                                  [/.data]
                                  [/.object]]]

                                [[[/.title]
                                  [/.no_script]
                                  [/.template]
                                  [/.table_header]
                                  [/.table_cell]
                                  [/.head]
                                  [/.body]

                                  [/.table_row]
                                  [/.table_head]
                                  [/.table_body]
                                  [/.table_foot]
                                  [/.columns_group]

                                  [/.table]
                                  [/.html]]]
                                )]
  (these (the all_options
           (List /.Name)
           (`` (`` (`` (list.together (list (,, (template.with [,options]
                                                  [(is (List /.Name)
                                                       (list (,, (expansion.let [,options' (template.spliced ,options)]
                                                                   (,, (template.with [,name]
                                                                         [,name]

                                                                         ,options'
                                                                         ))))))]
                                                  
                                                  ,bundles))))))))

         (the .public test
           Test
           (<| (_.covering /._)
               (do [! random.monad]
                 [])
               (_.for [/.Name])
               (`` (all _.and
                        (,, (template.with [,options]
                              [(`` (`` (_.coverage [(,, (expansion.let [,options' (template.spliced ,options)]
                                                          (,, (template.with [,name]
                                                                [,name]

                                                                ,options'
                                                                ))))]
                                         (let [uniques (set.of_list text.hash ..all_options)]
                                           (n.= (list.size ..all_options)
                                                (set.size uniques))))))]
                              
                              ,bundles))
                        ))))
         ))
