... This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
... If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.

(.using
 [library
  [lux (.except)
   [abstract
    [monad (.only do)]]
   [data
    ["[0]" text]
    [collection
     ["[0]" list (.use "[1]#[0]" monad)]
     ["[0]" set]]]
   [math
    ["[0]" random (.only Random)]
    [number
     ["n" natural]]]
   [macro
    ["[0]" template]
    ["[0]" expansion]]
   [test
    ["_" property (.only Test)]]]]
 [\\library
  ["[0]" /]])

(expansion.let [,bundles (these [[[/.off]
                                  [/.on]
                                  [/.name]
                                  [/.honorific_prefix]
                                  [/.given_name]
                                  [/.additional_name]
                                  [/.family_name]
                                  [/.honorific_suffix]
                                  [/.nickname]
                                  [/.email]
                                  [/.username]
                                  [/.new_password]
                                  [/.current_password]
                                  [/.one_time_code]
                                  [/.organization_title]
                                  [/.organization]
                                  [/.street_address]]]

                                [[[/.address_line_1]
                                  [/.address_line_2]
                                  [/.address_line_3]

                                  [/.address_level_1]
                                  [/.address_level_2]
                                  [/.address_level_3]
                                  [/.address_level_4]

                                  [/.country]
                                  [/.country_name]
                                  [/.postal_code]]]
                                
                                [[[/.credit_card_name]
                                  [/.credit_card_given_name]
                                  [/.credit_card_additional_name]
                                  [/.credit_card_family_name]
                                  [/.credit_card_number]
                                  [/.credit_card_exp]
                                  [/.credit_card_exp_month]
                                  [/.credit_card_exp_year]
                                  [/.credit_card_csc]
                                  [/.credit_card_type]
                                  [/.transaction_currency]
                                  [/.transaction_amount]
                                  [/.language]

                                  [/.birthday]
                                  [/.birthday_day]
                                  [/.birthday_month]
                                  [/.birthday_year]

                                  [/.sex]]]

                                [[[/.telephone]
                                  [/.telephone_country_code]
                                  [/.telephone_national]
                                  [/.telephone_area_code]
                                  [/.telephone_local]
                                  [/.telephone_extension]

                                  [/.url]
                                  [/.photo]

                                  [/.instant_messaging_protocol_endpoint]
                                  [/.web_authentication]]]
                                )]
  (these (the all_options
           (List /.Completion)
           (`` (`` (`` (list#conjoint (list (,, (template.with [,options]
                                                  [(is (List /.Completion)
                                                       (list (,, (expansion.let [,options' (template.spliced ,options)]
                                                                   (,, (template.with [,name]
                                                                         [,name]

                                                                         ,options'
                                                                         ))))))]
                                                  
                                                  ,bundles))))))))

         (the .public test
           Test
           (<| (_.covering /._)
               (do [! random.monad]
                 [])
               (_.for [/.Completion])
               (`` (all _.and
                        (,, (template.with [,options]
                              [(`` (`` (_.coverage [(,, (expansion.let [,options' (template.spliced ,options)]
                                                          (,, (template.with [,name]
                                                                [,name]

                                                                ,options'
                                                                ))))]
                                         (let [uniques (|> ..all_options
                                                           (set.of_list text.hash))]
                                           (n.= (list.size ..all_options)
                                                (set.size uniques))))))]
                              
                              ,bundles))
                        ))))))
