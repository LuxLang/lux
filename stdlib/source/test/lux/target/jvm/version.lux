... This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
... If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.

(.using
 [library
  [lux (.except)
   [abstract
    ["[0]" monad]]
   [data
    ["[0]" binary (.only)
     ["![1]" \\injection]]
    [collection
     ["[0]" list (.use "[1]#[0]" functor)]
     ["[0]" set]]]
   [math
    ["[0]" random (.only Random)]
    [number
     ["[0]" /16
      ["[1]" natural]]
     [/64
      ["n" natural]]]]
   [test
    ["_" property (.only Test)]]]]
 [\\library
  ["[0]" /]])

(the .public test
  Test
  (<| (_.covering /._)
      (monad.let [! random.monad]
        [])
      (_.for [/.Version])
      (all _.and
           (<| (_.for [/.Minor])
               (all _.and
                    (_.coverage [/.default_minor]
                      (when (/16.as /.default_minor)
                        0 true
                        _ false))
                    ))
           (<| (_.for [/.Major])
               (let [majors (list /.v1_1 /.v1_2 /.v1_3 /.v1_4
                                  /.v5_0 /.v6_0
                                  /.v7 /.v8 /.v9 /.v10 /.v11 /.v12)])
               (all _.and
                    (_.coverage [/.v1_1 /.v1_2 /.v1_3 /.v1_4
                                 /.v5_0 /.v6_0
                                 /.v7 /.v8 /.v9 /.v10 /.v11 /.v12]
                      (let [uniques (set.of_list /16.hash majors)]
                        (n.= (list.size majors)
                             (set.size uniques))))
                    (_.coverage [/.as_binary]
                      (let [uniques (|> majors
                                        (list#each (|>> /.as_binary
                                                        !binary.instance))
                                        (set.of_list binary.hash))]
                        (n.= (list.size majors)
                             (set.size uniques))))
                    ))
           )))
