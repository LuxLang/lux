(.module:
  [lux (#- function)
   ["_" test (#+ Test)]]
  ["." / #_
   ["#." concatenative]
   ["#." concurrency #_
    ["#/." actor]
    ["#/." atom]
    ["#/." frp]
    ["#/." thread]
    ["#/." promise]
    ["#/." semaphore]
    ["#/." stm]]
   ["#." continuation]
   ["#." exception]
   ["#." function
    ["#/." contract]
    ["#/." memo]
    ["#/." mixin]]
   ["#." io]
   ["#." parser
    ["#/." analysis]
    ["#/." binary]
    ["#/." cli]
    ["#/." code]
    ["#/." json]
    ["#/." synthesis]
    ["#/." text]
    ["#/." tree]
    ["#/." type]
    ["#/." xml]]
   ["#." pipe]
   ["#." reader]
   ["#." region]
   ["#." remember]
   [security
    ["#." policy]
    ["#." capability]]
   ["#." state]
   ["#." thread]
   ["#." try]
   ["#." writer]])

(def: concurrency
  Test
  ($_ _.and
      /concurrency/actor.test
      /concurrency/atom.test
      /concurrency/frp.test
      /concurrency/thread.test
      /concurrency/promise.test
      /concurrency/semaphore.test
      /concurrency/stm.test
      ))

(def: function
  Test
  ($_ _.and
      /function.test
      /function/contract.test
      /function/memo.test
      /function/mixin.test
      ))

(def: parser
  Test
  ($_ _.and
      /parser.test
      /parser/analysis.test
      /parser/binary.test
      /parser/cli.test
      /parser/code.test
      /parser/json.test
      /parser/synthesis.test
      /parser/text.test
      /parser/tree.test
      /parser/type.test
      /parser/xml.test
      ))

(def: security
  Test
  ($_ _.and
      /policy.test
      /capability.test
      ))

(def: #export test
  Test
  ($_ _.and
      /concatenative.test
      ..concurrency
      /continuation.test
      /exception.test
      ..function
      /io.test
      ..parser
      /pipe.test
      /reader.test
      /region.test
      /remember.test
      ..security
      /state.test
      /thread.test
      /try.test
      /writer.test
      ))
