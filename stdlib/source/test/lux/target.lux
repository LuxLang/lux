(.module:
  [lux #*
   ["_" test (#+ Test)]
   [data
    ["." text]
    [collection
     ["." list]
     ["." set (#+ Set)]]]
   [math
    [number
     ["n" nat]]]]
  {1
   ["." /]})

(with_expansions [<targets> (as_is /.old
                                   /.js
                                   /.jvm
                                   /.lua
                                   /.python
                                   /.ruby
                                   /.common_lisp
                                   /.php
                                   /.r
                                   /.scheme)]
  (def: all
    (List /.Target)
    (list <targets>))
  
  (def: unique
    (Set /.Target)
    (set.from_list text.hash ..all))

  (def: verdict
    (n.= (list.size ..all)
         (set.size ..unique)))

  (def: #export test
    Test
    (<| (_.covering /._)
        (_.for [/.Target])
        ($_ _.and
            (_.cover [<targets>]
                     ..verdict)
            )))
  )
