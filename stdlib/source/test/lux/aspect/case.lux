... This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
... If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.

(.using
 [library
  [lux (.except)
   [abstract
    [equality (.only Equality)]
    ["[0]" monad]]
   [math
    ["[0]" random (.only Random)]]
   [test
    ["_" property (.only Test)]]]]
 [\\library
  ["[0]" /]])

(the :Impossible
  (for_any (_ it)
    (/.Case it Any))
  (/.new (function (_ it)
           {.:Left it})
         (function (_ _)
           (undefined))))

(the .public (specification case
                            [equality_of_context random_context]
                            [equality_of_case random_case])
  (for_any (_ context case)
    (-> (/.Case context case)
        [(Equality context) (Random context)]
        [(Equality case) (Random case)]
        Test))
  (monad.let [! random.monad]
    [expected_context random_context
     expected_case random_case]
    (<| (_.for [/.Case /.new])
        (all _.and
             (_.coverage [/.if]
               (when (/.if case expected_context)
                 {.:Left actual_context}
                 (identical? expected_context actual_context)

                 {.:Right actual_case}
                 (by equality_of_context = expected_context (/.some case actual_case))))
             (_.coverage [/.some]
               (let [expected_context (/.some case expected_case)]
                 (when (/.if case expected_context)
                   {.:Right actual_case}
                   (by equality_of_case = expected_case actual_case)

                   {.:Left actual_context}
                   false)))
             ))))

(the .public test
  Test
  (<| (_.covering /._)
      (monad.let [! random.monad]
        [sample random.natural])
      (all _.and
           (_.coverage [/.when]
             (/.when sample
               {:Impossible _}
               false

               else
               true))
           )))
