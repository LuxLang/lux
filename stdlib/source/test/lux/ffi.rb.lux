(.require
 [library
  [lux (.except)
   [abstract
    [monad (.only do)]]
   [math
    ["[0]" random]]
   [test
    ["_" property (.only Test)]]]]
 [\\library
  ["[0]" /]]
 ["$[0]" /
  ["[1][0]" export]])

(/.import File
  "[1]::[0]"
  ("static" SEPARATOR /.String))

(def .public test
  Test
  (do [! random.monad]
    [boolean random.bit
     integer random.int
     float random.frac
     string (random.lower_cased 1)]
    (<| (_.covering /._)
        (`` (all _.and
                 (,, (with_template [<type> <sample>]
                       [(_.coverage [<type>]
                          (exec
                            (is <type> <sample>)
                            true))]

                       [/.Boolean boolean]
                       [/.Integer integer]
                       [/.Float float]
                       [/.String string]
                       ))
                 (_.for [/.Object]
                        (all _.and
                             (,, (with_template [<type>]
                                   [(_.coverage [<type>]
                                      (exec
                                        (|> []
                                            (as <type>)
                                            (is (Ex (_ a) (/.Object a))))
                                        true))]

                                   [/.Nil]
                                   [/.Function]
                                   ))))
                 (_.coverage [/.import]
                   (same? (..File::SEPARATOR)
                          (..File::SEPARATOR)))

                 $/export.test
                 )))))
