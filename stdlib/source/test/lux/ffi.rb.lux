(.using
 [library
  [lux "*"
   ["_" test {"+" Test}]
   [abstract
    [monad {"+" do}]]
   [math
    ["[0]" random]]]]
 [\\library
  ["[0]" /]]
 ["$[0]" / "_"
  ["[1][0]" export]])

(/.import: File
  ["[1]::[0]"
   ("static" SEPARATOR /.String)])

(def: .public test
  Test
  (do [! random.monad]
    [boolean random.bit
     integer random.int
     float random.frac
     string (random.ascii/lower 1)]
    (<| (_.covering /._)
        (`` ($_ _.and
                (~~ (template [<type> <sample>]
                      [(_.cover [<type>]
                                (exec
                                  (: <type> <sample>)
                                  true))]

                      [/.Boolean boolean]
                      [/.Integer integer]
                      [/.Float float]
                      [/.String string]
                      ))
                (_.for [/.Object]
                       ($_ _.and
                           (~~ (template [<type>]
                                 [(_.cover [<type>]
                                           (exec
                                             (|> []
                                                 (:as <type>)
                                                 (: (Ex (_ a) (/.Object a))))
                                             true))]

                                 [/.Nil]
                                 [/.Function]
                                 ))))
                (_.cover [/.import:]
                         (same? (..File::SEPARATOR)
                                (..File::SEPARATOR)))

                $/export.test
                )))))
