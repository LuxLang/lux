... This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
... If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.

(.using
 [library
  [lux (.except)
   [abstract
    ["[0]" monad (.only)
     ["[1]T" \\test]]
    ["[0]" functor
     ["[1]T" \\test (.only Injection Comparison)]]]
   [math
    ["[0]" random]
    [number
     [/64
      ["n" natural]]]]
   [macro
    ["[0]" expansion]]
   [test
    ["_" property (.only Test)]]]]
 [\\library
  ["[0]" /]])

(the injection
  (Injection /.Trampoline)
  (|>> /.return))

(the comparison
  (Comparison /.Trampoline)
  (function (_ == left right)
    (== (/.value left) (/.value right))))

(the .public test
  Test
  (<| (_.covering /._)
      (_.for [/.Trampoline])
      (monad.let [! random.monad]
        [expected random.natural
         left random.natural
         right random.natural])
      (all _.and
           (_.for [/.functor]
                  (functorT.spec ..injection ..comparison /.functor))
           (_.for [/.monad]
                  (monadT.spec ..injection ..comparison /.monad))
           
           (_.for [/.value]
                  (all _.and
                       (_.coverage [/.:Return /.return]
                         (|> (/.return expected)
                             /.value
                             (identical? expected)))
                       (_.coverage [/.:Jump /.jump]
                         (expansion.let [<expected> (n.+ left right)]
                           (|> (/.jump (/.return <expected>))
                               /.value
                               (n.= <expected>))))
                       ))
           )))
