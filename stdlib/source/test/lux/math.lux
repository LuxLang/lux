... This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
... If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.

(.require
 [library
  [lux (.except)
   [abstract
    [monad (.only do)]]
   [data
    ["[0]" bit (.use "[1]#[0]" equivalence)]]
   [math
    ["[0]" random (.only Random)]
    [number
     ["n" nat]
     ["i" int]
     ["r" rev]
     ["d" dec]
     ["[0]" frac (.only Frac)]
     ["[0]" complex (.only Complex)]]]
   [meta
    [macro
     ["[0]" template]]]
   [test
    ["_" property (.only Test)]]]]
 [\\library
  ["[0]" /]]
 ["[0]" /
  ["[1][0]" modulus]
  ["[1][0]" number]
  ["[1][0]" random]
  ["[1][0]" statistics]
  ["[1][0]" logic
   ["[1]/[0]" continuous]
   ["[1]/[0]" fuzzy]]
  ["[1][0]" arithmetic
   ["[1]/[0]" infix]
   ["[1]/[0]" modular]
   ["[1]/[0]" saturation]
   ["[1]/[0]" fixed_point]]
  ["[1][0]" geometry
   ["[1]/[0]" circle]
   ["[1]/[0]" hyperbola]]])

(the frac/0
  Frac
  [frac.#numerator 0 frac.#denominator 1])

(the complex/0
  Complex
  [complex.#real +0.0 complex.#imaginary +0.0])

(the .public test
  Test
  (<| (_.covering /._)
      (do random.monad
        [parameterN (random.only (|>> (n.= 0) not) random.nat)
         subjectN random.nat

         parameterI (random.only (|>> (i.= +0) not) random.int)
         subjectI random.int

         parameterR (random.only (|>> (r.= .0) not) random.rev)
         subjectR random.rev

         parameterF (random.only (|>> (d.= +0.0) not) random.safe_dec)
         subjectF random.safe_dec

         parameter/ (random.only (|>> (frac.= frac/0) not) random.frac)
         subject/ random.frac

         parameterC (random.only (|>> (complex.= complex/0) not) random.complex)
         subjectC random.complex])
      (`` (all _.and
               (,, (with_template [</> <scenarios>']
                     [(_.coverage [</>]
                        (with_expansions [<scenarios> (template.spliced <scenarios>')]
                          (`` (and (,, (with_template [<=> <//> <parameter> <subject>]
                                         [(<=> (<//> <parameter> <subject>)
                                               (</> <parameter> <subject>))]
                                         
                                         <scenarios>))))))]

                     [/.+ [[n.= n.+ parameterN subjectN]
                           [i.= i.+ parameterI subjectI]
                           [r.= r.+ parameterR subjectR]
                           [d.= d.+ parameterF subjectF]
                           [frac.= frac.+ parameter/ subject/]
                           [complex.= complex.+ parameterC subjectC]]]
                     [/.- [[n.= n.- parameterN subjectN]
                           [i.= i.- parameterI subjectI]
                           [r.= r.- parameterR subjectR]
                           [d.= d.- parameterF subjectF]
                           [frac.= frac.- parameter/ subject/]
                           [complex.= complex.- parameterC subjectC]]]
                     [/.* [[n.= n.* parameterN subjectN]
                           [i.= i.* parameterI subjectI]
                           [r.= r.* parameterR subjectR]
                           [d.= d.* parameterF subjectF]
                           [frac.= frac.* parameter/ subject/]
                           [complex.= complex.* parameterC subjectC]]]
                     [/./ [[n.= n./ parameterN subjectN]
                           [i.= i./ parameterI subjectI]
                           [r.= r./ parameterR subjectR]
                           [d.= d./ parameterF subjectF]
                           [frac.= frac./ parameter/ subject/]
                           [complex.= complex./ parameterC subjectC]]]
                     [/.% [[n.= n.% parameterN subjectN]
                           [i.= i.% parameterI subjectI]
                           [r.= r.% parameterR subjectR]
                           [d.= d.% parameterF subjectF]
                           [frac.= frac.% parameter/ subject/]
                           [complex.= complex.% parameterC subjectC]]]
                     ))
               (,, (with_template [</> <scenarios>']
                     [(_.coverage [</>]
                        (with_expansions [<scenarios> (template.spliced <scenarios>')]
                          (`` (and (,, (with_template [<//> <parameter> <subject>]
                                         [(bit#= (<//> <parameter> <subject>)
                                                 (</> <parameter> <subject>))]
                                         
                                         <scenarios>))))))]

                     [/.= [[n.= parameterN subjectN]
                           [i.= parameterI subjectI]
                           [r.= parameterR subjectR]
                           [d.= parameterF subjectF]
                           [frac.= parameter/ subject/]
                           [complex.= parameterC subjectC]]]
                     [/.< [[n.< parameterN subjectN]
                           [i.< parameterI subjectI]
                           [r.< parameterR subjectR]
                           [d.< parameterF subjectF]
                           [frac.< parameter/ subject/]]]
                     [/.<= [[n.<= parameterN subjectN]
                            [i.<= parameterI subjectI]
                            [r.<= parameterR subjectR]
                            [d.<= parameterF subjectF]
                            [frac.<= parameter/ subject/]]]
                     [/.> [[n.> parameterN subjectN]
                           [i.> parameterI subjectI]
                           [r.> parameterR subjectR]
                           [d.> parameterF subjectF]
                           [frac.> parameter/ subject/]]]
                     [/.>= [[n.>= parameterN subjectN]
                            [i.>= parameterI subjectI]
                            [r.>= parameterR subjectR]
                            [d.>= parameterF subjectF]
                            [frac.>= parameter/ subject/]]]
                     ))

               /modulus.test
               /number.test
               /random.test
               /statistics.test
               
               /logic/continuous.test
               /logic/fuzzy.test
               
               /arithmetic/infix.test
               /arithmetic/modular.test
               /arithmetic/saturation.test
               /arithmetic/fixed_point.test

               /geometry/circle.test
               /geometry/hyperbola.test
               ))))
