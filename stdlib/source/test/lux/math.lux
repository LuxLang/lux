... This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
... If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.

(.using
 [library
  [lux (.except)
   [abstract
    ["[0]" monad]]
   [logic
    ["[0]" bit]]
   [math
    ["[0]" random (.only Random)]
    [number
     [/64
      ["n" natural]
      ["i" integer]
      ["r" revolution]
      ["d" decimal]
      ["[0]" fraction (.only Fraction)]
      ["[0]" complex (.only Complex)]]]]
   [macro
    ["[0]" template]
    ["[0]" expansion]]
   [test
    ["_" property (.only Test)]]]]
 [\\library
  ["[0]" /]]
 ["[0]" /
  ["[1][0]" modulus]
  ["[1][0]" number]
  ["[1][0]" random]
  ["[1][0]" unit]
  ["[1][0]" arithmetic
   ["[1]/[0]" infix]
   ["[1]/[0]" modular]
   ["[1]/[0]" fixed_point]]
  ["[1][0]" geometry
   ["[1]/[0]" circle]
   ["[1]/[0]" hyperbola]]
  ["[1][0]" algebra
   ["[1]/[0]" variable]
   ["[1]/[0]" formula]
   ["[1]/[0]" equation]
   ["[1]/[0]" proof]]])

(the complex/0
  Complex
  [complex.#real d.zero
   complex.#imaginary d.zero])

(the .public test
  Test
  (<| (_.covering /._)
      (monad.let random.monad
        [parameterN (random.only (|>> (n.= n.zero) not) random.natural)
         subjectN random.natural

         parameterI (random.only (|>> (i.= i.zero) not) random.integer)
         subjectI random.integer

         parameterR (random.only (|>> (r.= r.zero) not) random.revolution)
         subjectR random.revolution

         parameterF (random.only (|>> (d.= d.zero) not) random.unit_decimal)
         subjectF random.unit_decimal

         parameter/ (random.only (|>> (fraction.= fraction.zero) not) random.fraction)
         subject/ random.fraction

         parameterC (random.only (|>> (complex.= complex/0) not) random.complex)
         subjectC random.complex])
      (`` (all _.and
               (,, (template.with [</> <scenarios>']
                     [(_.coverage [</>]
                        (`` (and (,, (template.with [<=> <//> <parameter> <subject>]
                                       [(<=> (<//> <parameter> <subject>)
                                             (</> <parameter> <subject>))]
                                       
                                       <scenarios>')))))]

                     [[/.+ [[n.= n.+ parameterN subjectN]
                            [i.= i.+ parameterI subjectI]
                            [r.= r.+ parameterR subjectR]
                            [d.= d.+ parameterF subjectF]
                            [fraction.= fraction.+ parameter/ subject/]
                            [complex.= complex.+ parameterC subjectC]]]
                      [/.- [[n.= n.- parameterN subjectN]
                            [i.= i.- parameterI subjectI]
                            [r.= r.- parameterR subjectR]
                            [d.= d.- parameterF subjectF]
                            ... TODO: Un-comment
                            ... [fraction.= fraction.- parameter/ subject/]
                            [complex.= complex.- parameterC subjectC]]]
                      [/.x [[n.= n.x parameterN subjectN]
                            [i.= i.x parameterI subjectI]
                            [r.= r.x parameterR subjectR]
                            [d.= d.x parameterF subjectF]
                            [fraction.= fraction.x parameter/ subject/]
                            [complex.= complex.x parameterC subjectC]]]
                      [/./ [[n.= n./ parameterN subjectN]
                            [i.= i./ parameterI subjectI]
                            [r.= r./ parameterR subjectR]
                            [d.= d./ parameterF subjectF]
                            [fraction.= fraction./ parameter/ subject/]
                            [complex.= complex./ parameterC subjectC]]]
                      [/.% [[n.= n.% parameterN subjectN]
                            [i.= i.% parameterI subjectI]
                            [r.= r.% parameterR subjectR]
                            [d.= d.% parameterF subjectF]
                            [fraction.= fraction.% parameter/ subject/]
                            [complex.= complex.% parameterC subjectC]]]]))
               (,, (template.with [</> <scenarios>']
                     [(_.coverage [</>]
                        (`` (and (,, (template.with [<//> <parameter> <subject>]
                                       [(bit.= (<//> <parameter> <subject>)
                                               (</> <parameter> <subject>))]
                                       
                                       <scenarios>')))))]

                     [[/.= [[n.= parameterN subjectN]
                            [i.= parameterI subjectI]
                            [r.= parameterR subjectR]
                            [d.= parameterF subjectF]
                            [fraction.= parameter/ subject/]
                            [complex.= parameterC subjectC]]]
                      [/.< [[n.< parameterN subjectN]
                            [i.< parameterI subjectI]
                            [r.< parameterR subjectR]
                            [d.< parameterF subjectF]
                            [fraction.< parameter/ subject/]]]
                      [/.<= [[n.<= parameterN subjectN]
                             [i.<= parameterI subjectI]
                             [r.<= parameterR subjectR]
                             [d.<= parameterF subjectF]
                             [fraction.<= parameter/ subject/]]]
                      [/.> [[n.> parameterN subjectN]
                            [i.> parameterI subjectI]
                            [r.> parameterR subjectR]
                            [d.> parameterF subjectF]
                            [fraction.> parameter/ subject/]]]
                      [/.>= [[n.>= parameterN subjectN]
                             [i.>= parameterI subjectI]
                             [r.>= parameterR subjectR]
                             [d.>= parameterF subjectF]
                             [fraction.>= parameter/ subject/]]]]))

               /modulus.test
               /number.test
               /random.test
               /unit.test
               
               /arithmetic/infix.test
               /arithmetic/modular.test
               /arithmetic/fixed_point.test

               /geometry/circle.test
               /geometry/hyperbola.test

               /algebra/variable.test
               /algebra/formula.test
               /algebra/equation.test
               /algebra/proof.test
               ))))
