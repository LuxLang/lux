(.module:
  [lux #*
   ["_" test (#+ Test)]
   [abstract
    [monad (#+ do)]]
   [control
    ["." try]
    [parser
     ["<.>" code]]]
   [data
    ["." bit ("#\." equivalence)]]
   [math
    ["." random]]]
  {1
   ["." /]})

(def: #export test
  Test
  (<| (_.covering /._)
      (do random.monad
        [expected random.bit]
        (_.cover [/.write /.parser]
                 (case (<code>.run /.parser
                                   (/.write expected))
                   (#try.Failure _)
                   false
                   
                   (#try.Success actual)
                   (bit\= expected actual))))))
