(.module:
  [library
   [lux #*
    ["_" test (#+ Test)]
    [abstract
     [monad (#+ do)]]
    [control
     ["." try]
     [parser
      ["<.>" code]]]
    [data
     ["." bit ("#\." equivalence)]]
    [math
     ["." random]]]]
  [\\library
   ["." /]])

(def: #export test
  Test
  (<| (_.covering /._)
      (do random.monad
        [expected random.bit]
        (_.cover [/.format /.parser]
                 (case (<code>.run /.parser
                                   (/.format expected))
                   (#try.Failure _)
                   false
                   
                   (#try.Success actual)
                   (bit\= expected actual))))))
