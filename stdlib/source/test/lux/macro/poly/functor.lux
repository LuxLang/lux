(.module:
  [lux #*
   data/text/format
   [control/monad (#+ do)]
   ["r" math/random (#+ Random)]
   ["_" test (#+ Test)]
   [control
    ["." state]]
   [data
    ["." identity]]
   [macro
    [poly (#+ derived:)]]]
  {1
   ["." /]})

(derived: maybe-functor (/.functor .Maybe))
(derived: list-functor (/.functor .List))
(derived: state-functor (/.functor state.State))
(derived: identity-functor (/.functor identity.Identity))

(def: #export test
  Test
  (<| (_.context (%name (name-of /._)))
      (_.test "Can derive functors automatically."
              #1)))
