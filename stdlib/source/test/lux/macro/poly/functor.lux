(.module:
  [library
   [lux #*
    ["%" data/text/format (#+ format)]
    [abstract
     [monad (#+ do)]
     [functor
      [\\poly
       ["." /]]]]
    ["r" math/random (#+ Random)]
    ["_" test (#+ Test)]
    [control
     ["." state]]
    [data
     ["." identity]]
    [macro
     [poly (#+ derived:)]]]])

(derived: maybe_functor (/.functor .Maybe))
(derived: list_functor (/.functor .List))
(derived: state_functor (/.functor state.State))
(derived: identity_functor (/.functor identity.Identity))

(def: .public test
  Test
  (<| (_.covering /._)
      (_.cover [/.functor]
               true)))
