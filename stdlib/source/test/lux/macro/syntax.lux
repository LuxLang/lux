(.using
 [library
  [lux "*"
   ["_" test {"+" Test}]
   [abstract
    [monad {"+" do}]]
   [control
    [parser
     ["<[0]>" code]]]
   [math
    ["[0]" random]
    [number
     ["n" nat]]]]]
 [\\library
  ["[0]" /]]
 ["[0]" / "_"
  ["[1][0]" check]
  ["[1][0]" declaration]
  ["[1][0]" definition]
  ["[1][0]" export]
  ["[1][0]" input]
  ["[1][0]" type "_"
   ["[1]/[0]" variable]]])

(/.syntax: (+/3 [a <code>.any
                 b <code>.any
                 c <code>.any])
  (in (list (` (all n.+ (~ a) (~ b) (~ c))))))

(def: .public test
  Test
  (<| (_.covering /._)
      (all _.and
           (do random.monad
             [x random.nat
              y random.nat
              z random.nat]
             (_.cover [/.syntax:]
                      (n.= (all n.+ x y z)
                           (+/3 x y z)))) 

           /check.test
           /declaration.test
           /definition.test
           /export.test
           /input.test
           /type/variable.test
           )))
