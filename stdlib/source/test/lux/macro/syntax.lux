(.module:
  [library
   [lux #*
    ["_" test (#+ Test)]
    [abstract
     [monad (#+ do)]]
    [math
     ["." random]
     [number
      ["n" nat]]]]]
  [\\library
   ["." /]]
  ["." / #_
   ["#." annotations]
   ["#." check]
   ["#." declaration]
   ["#." definition]
   ["#." export]
   ["#." input]
   ["#." type #_
    ["#/." variable]]])

(/.syntax: (+/3 a b c)
  (in (list (` ($_ n.+ (~ a) (~ b) (~ c))))))

(def: .public test
  Test
  (<| (_.covering /._)
      ($_ _.and
          (do random.monad
            [x random.nat
             y random.nat
             z random.nat]
            (_.cover [/.syntax:]
                     (n.= ($_ n.+ x y z)
                          (+/3 x y z)))) 

          /annotations.test
          /check.test
          /declaration.test
          /definition.test
          /export.test
          /input.test
          /type/variable.test
          )))
