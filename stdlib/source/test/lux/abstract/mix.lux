(.require
 [library
  [lux (.except)
   [abstract
    [monad (.only do)]]
   [data
    [collection
     ["[0]" list]]]
   [math
    ["[0]" random]
    [number
     ["n" nat]]]
   [test
    ["_" property (.only Test)]]]]
 [\\library
  ["[0]" / (.only Mix)]])

(def .public test
  Test
  (do random.monad
    [samples (random.list 10 random.nat)]
    (<| (_.covering /._)
        (all _.and
             (_.coverage [/.with_monoid]
               (n.= (of list.mix mix (of n.addition composite) (of n.addition identity) samples)
                    (/.with_monoid n.addition list.mix samples)))
             ))))
