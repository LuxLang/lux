(.module:
  [lux #*
   ["_" test (#+ Test)]
   [abstract/monad (#+ do)]
   [data
    [text
     ["%" format (#+ format)]]]
   [math
    ["r" random (#+ Random)]]]
  {1
   ["." / (#+ Order)]})

(def: #export (spec (^open ",@.") generator)
  (All [a] (-> (Order a) (Random a) Test))
  (do r.monad
    [parameter generator
     subject generator]
    (<| (_.context (%.name (name-of /.Order)))
        ($_ _.and
            (_.test "Values are either ordered, or they are equal. All options are mutually exclusive."
                    (cond (,@< parameter subject)
                          (not (or (,@< subject parameter)
                                   (,@= parameter subject)))

                          (,@< subject parameter)
                          (not (,@= parameter subject))

                          ## else
                          (,@= parameter subject)))))))
