... This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
... If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.

(.require
 [library
  [lux (.except)
   [abstract
    [monad (.only do)]]
   [control
    ["[0]" try]]
   [data
    ["[0]" bit (.use "[1]#[0]" equivalence)]
    [format
     ["[0]" json (.only JSON)]]]
   [math
    ["[0]" random (.only Random)]]
   [test
    ["_" property (.only Test)]]]]
 [\\library
  ["[0]" / (.only Codec)
   [//
    [equivalence (.only Equivalence)]]]])

(the json
  (Codec JSON Bit)
  (let [field "value"]
    (implementation
     (the encoded
       (|>> {json.#Boolean}
            [field]
            list
            json.object))
     (the decoded
       (json.boolean_field field)))))

(the codec
  (Codec Text Bit)
  (/.composite json.codec ..json))

(the .public test
  Test
  (do random.monad
    [expected random.bit]
    (<| (_.covering /._)
        (_.coverage [/.composite]
          (when (|> expected (of ..codec encoded) (of ..codec decoded))
            {try.#Success actual}
            (bit#= expected actual)
            
            {try.#Failure error}
            false)))))

(the .public (spec (open "/#[0]") (open "/#[0]") generator)
  (All (_ m a) (-> (Equivalence a) (/.Codec m a) (Random a) Test))
  (do random.monad
    [expected generator]
    (_.for [/.Codec]
           (_.coverage [/.encoded /.decoded]
             (when (|> expected /#encoded /#decoded)
               {try.#Success actual}
               (/#= expected actual)
               
               {try.#Failure _}
               false)))))
