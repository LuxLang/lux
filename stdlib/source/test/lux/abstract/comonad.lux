(.using
 [library
  [lux "*"
   [abstract
    [monad {"+" do}]]
   [data
    ["[0]" identity {"+" Identity}]]
   [math
    ["[0]" random]
    [number
     ["n" nat]]]
   ["_" test {"+" Test}]]]
 [\\library
  ["[0]" /]])

(def: .public test
  Test
  (do random.monad
    [sample random.nat]
    (<| (_.covering /._)
        ($_ _.and
            (_.cover [/.be]
                     (n.= (++ sample)
                          (is (Identity Nat)
                              (/.be identity.comonad
                                [value (out sample)]
                                (out (++ value))))))
            ))))
