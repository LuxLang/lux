(.module:
  [lux #*
   ["_" test (#+ Test)]
   ["%" data/text/format (#+ format)]
   ["r" math/random]
   [abstract/monad (#+ do)]
   [data
    [number
     ["n" nat]]]]
  [//
   [functor (#+ Injection Comparison)]]
  {1
   ["." / (#+ Fold)]})

(def: #export (spec injection comparison (^open "/@."))
  (All [f] (-> (Injection f) (Comparison f) (Fold f) Test))
  (_.context (%.name (name-of /.Fold))
             (do r.monad
               [subject r.nat
                parameter r.nat]
               (_.test "Can fold."
                       (n.= (/@fold n.+ parameter (injection subject))
                            (n.+ parameter subject))))))
