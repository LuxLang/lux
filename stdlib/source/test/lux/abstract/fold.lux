(.module:
  [lux #*
   ["_" test (#+ Test)]
   [abstract
    [monad (#+ do)]]
   [data
    [collection
     ["." list]]]
   [math
    ["." random]
    [number
     ["n" nat]]]]
  {1
   ["." / (#+ Fold)]})

(def: #export test
  Test
  (do random.monad
    [samples (random.list 10 random.nat)]
    (<| (_.covering /._)
        ($_ _.and
            (_.cover [/.with-monoid]
                     (n.= (\ list.fold fold (\ n.addition compose) (\ n.addition identity) samples)
                          (/.with-monoid n.addition list.fold samples)))
            ))))
