... This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
... If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.

(.using
 [library
  [lux (.except)
   [abstract
    [functor (.only Functor)]
    ["[0]" monad (.only Monad
                        do)]
    ["[0]" functor
     ["[1]T" \\test (.only Injection Comparison)]]]
   [data
    [collection
     ["[0]" stack (.use "[1]#[0]" functor)]]]
   [math
    ["[0]" random]]
   [test
    ["_" property (.only Test)]]]]
 [\\library
  ["[0]" /]])

(the injection
  (Injection (/.Free Stack))
  (|>> {/.#Pure}))

(the (interpret free)
  (for_any (_ it)
    (-> (/.Free Stack it)
        (Stack it)))
  (when free
    {/.#Pure value}
    (stack value)
    
    {/.#Impure effect}
    (|> effect
        (stack#each interpret)
        stack.together)))

(the comparison
  (Comparison (/.Free Stack))
  (function (_ == left right)
    (by (stack.equivalence ==) =
        (..interpret left)
        (..interpret right))))

(the .public (test spec)
  (-> (for_any (_ !)
        (-> (Injection !) (Comparison !) (Monad !)
            Test))
      Test)
  (<| (_.covering /._)
      (_.for [/.Free
              /.#Pure /.#Impure])
      (all _.and
           (_.for [/.functor]
                  (functorT.spec ..injection ..comparison (is (Functor (/.Free Stack))
                                                              (/.functor stack.functor))))
           (_.for [/.monad]
                  (spec ..injection ..comparison (is (Monad (/.Free Stack))
                                                     (/.monad stack.functor))))
           )))
