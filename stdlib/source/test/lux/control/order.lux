(.module:
  [lux #*
   ["_" test (#+ Test)]
   [control
    [monad (#+ do)]]
   [data
    [text
     format]]
   [math
    ["r" random (#+ Random)]]]
  {1
   ["." / (#+ Order)]})

(def: #export (spec (^open ",@.") generator)
  (All [a] (-> (Order a) (Random a) Test))
  (do r.monad
    [left generator
     right generator]
    (<| (_.context (%name (name-of /.Order)))
        ($_ _.and
            (_.test "Values are either ordered, or they are equal. All options are mutually exclusive."
                    (if (,@= left right)
                      (not (or (,@< left right)
                               (,@> left right)))
                      (if (,@< left right)
                        (not (,@> left right))
                        (,@> left right))))))))
