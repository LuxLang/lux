(.module:
  [lux #*
   ["_" test (#+ Test)]
   [abstract
    [monad (#+ do)]]
   [control
    ["." io]]
   [math
    ["." random]
    [number
     ["n" nat]]]]
  [\\
   ["." /]])

(def: #export test
  Test
  (<| (_.covering /._)
      ($_ _.and
          (do random.monad
            [expected random.nat
             #let [box (/.atom expected)]]
            (_.cover [/.Atom /.atom /.read]
                     (io.run
                      (do io.monad
                        [actual (/.read box)]
                        (wrap (is? expected actual))))))
          (do random.monad
            [target random.nat
             unknown (random.filter (|>> (is? target) not) random.nat)
             expected random.nat
             #let [box (/.atom target)]]
            (_.cover [/.compare_and_swap]
                     (io.run
                      (do io.monad
                        [swapped_unknown? (/.compare_and_swap unknown expected box)
                         swapped_target? (/.compare_and_swap target expected box)
                         actual (/.read box)]
                        (wrap (and (not swapped_unknown?)
                                   swapped_target?
                                   (is? expected actual)))))))
          (do random.monad
            [init random.nat
             shift random.nat
             #let [box (/.atom init)]]
            (_.cover [/.update]
                     (io.run
                      (do io.monad
                        [[pre post] (/.update (n.+ shift) box)]
                        (wrap (and (is? init pre)
                                   (n.= (n.+ shift init)
                                        post)))))))
          (do random.monad
            [pre random.nat
             post random.nat
             #let [box (/.atom pre)]]
            (_.cover [/.write]
                     (io.run
                      (do io.monad
                        [old (/.write post box)
                         new (/.read box)]
                        (wrap (and (is? pre old)
                                   (is? post new)))))))
          )))
