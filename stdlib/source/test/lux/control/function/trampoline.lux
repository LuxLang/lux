... This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
... If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.

(.require
 [library
  [lux (.except)
   [abstract
    ["[0]" monad (.only do)
     ["[1]T" \\test]]
    ["[0]" functor
     ["[1]T" \\test (.only Injection Comparison)]]]
   [math
    ["[0]" random]
    [number
     ["n" nat]]]
   [test
    ["_" property (.only Test)]]]]
 [\\library
  ["[0]" /]])

(def injection
  (Injection /.Trampoline)
  (|>> /.return))

(def comparison
  (Comparison /.Trampoline)
  (function (_ == left right)
    (== (/.value left) (/.value right))))

(def .public test
  Test
  (<| (_.covering /._)
      (_.for [/.Trampoline])
      (do [! random.monad]
        [expected random.nat
         left random.nat
         right random.nat])
      (all _.and
           (_.for [/.functor]
                  (functorT.spec ..injection ..comparison /.functor))
           (_.for [/.monad]
                  (monadT.spec ..injection ..comparison /.monad))
           
           (_.for [/.value]
                  (all _.and
                       (_.coverage [/.#Return /.return]
                         (|> (/.return expected)
                             /.value
                             (same? expected)))
                       (_.coverage [/.#Jump /.jump]
                         (with_expansions [<expected> (n.+ left right)]
                           (|> (/.jump (/.return <expected>))
                               /.value
                               (n.= <expected>))))
                       ))
           )))
