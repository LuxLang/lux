(.using
 [library
  [lux "*"
   ["_" test (.only Test)]
   [abstract
    [monad (.only do)]]
   [math
    ["[0]" random]
    [number
     ["i" int]]]]]
 [\\library
  ["[0]" /]])

(template: (!quadrance/2 m0 m1)
  [(i.+ (i.* m0 m0) (i.* m1 m1))])

(/.inline: .public (quadrance/2 m0 m1)
  (-> Int Int Int)
  (!quadrance/2 m0 m1))

(def: .public test
  Test
  (<| (_.covering /._)
      (do [! random.monad]
        [.let [measurement (# ! each (i.% +1000) random.int)]
         m0 measurement
         m1 measurement])
      (all _.and
           (_.coverage [/.inline:]
             (i.= (..!quadrance/2 m0 m1)
                  (..quadrance/2 m0 m1)))
           )))
