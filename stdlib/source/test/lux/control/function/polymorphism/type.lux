(.require
 [library
  [lux (.except)
   [abstract
    [monad (.only do)]]
   [data
    ["[0]" text (.use "[1]#[0]" equivalence)
     ["%" \\format]]]
   [math
    ["[0]" random]]
   [test
    ["_" property (.only Test)]]]]
 [\\library
  ["[0]" /]])

(/.def .public format
  [a]
  (-> a Text)

  (/.method format
    [Bit]
    %.bit)

  (/.method (format it)
    [Nat]
    (%.nat it))
  )

(def .public test
  Test
  (<| (_.covering /._)
      (do [! random.monad]
        [bit random.bit
         nat random.nat])
      (all _.and
           (_.coverage [/.def /.method]
             (and (text#= (%.bit bit)
                          (format bit))
                  (text#= (%.nat nat)
                          (format nat))))
           )))
