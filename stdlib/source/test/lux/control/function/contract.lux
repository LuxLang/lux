(.module:
  [library
   [lux #*
    ["_" test (#+ Test)]
    [abstract
     [monad (#+ do)]]
    [control
     ["." try]]
    [math
     ["." random]
     [number
      ["n" nat]]]]]
  [\\library
   ["." /]])

(def: .public test
  Test
  (<| (_.covering /._)
      (do {! random.monad}
        [expected random.nat])
      ($_ _.and
          (_.cover [/.pre]
                   (case (try (/.pre (n.even? expected)
                                     true))
                     (#try.Success output)
                     output
                     
                     (#try.Failure error)
                     (not (n.even? expected))))
          (_.cover [/.post]
                   (case (try (/.post n.odd?
                                      expected))
                     (#try.Success actual)
                     (same? expected actual)
                     
                     (#try.Failure error)
                     (not (n.odd? expected))))
          )))
