... This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
... If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.

(.require
 [library
  [lux (.except)
   [abstract
    [monad (.only do)]]
   [data
    ["[0]" bit]]
   [math
    ["[0]" random (.only Random)]
    [number
     ["n" nat]]]
   [test
    ["_" property (.only Test)]]]]
 [\\library
  ["[0]" /]])

(the test_let
  Test
  (do [! random.monad]
    [sample (of ! each (n.% 10) random.nat)
     .let [expected (n.even? sample)]]
    (<| (_.coverage [/.let])
        (/.let [(even? number)
                (-> Nat Bit)
                (when number
                  0 true
                  _ (odd? (-- number)))

                (odd? number)
                (-> Nat Bit)
                (when number
                  0 false
                  _ (even? (-- number)))]
          (and (bit.= expected (even? sample))
               (bit.= (not expected) (odd? sample)))))))

(/.the
  [(even? number)
   (-> Nat Bit)
   (when number
     0 true
     _ (odd? (-- number)))]

  [(odd? number)
   (-> Nat Bit)
   (when number
     0 false
     _ (even? (-- number)))])

(the test_def
  Test
  (do [! random.monad]
    [sample (of ! each (n.% 10) random.nat)
     .let [expected (n.even? sample)]]
    (<| (_.coverage [/.the])
        (and (bit.= expected (..even? sample))
             (bit.= (not expected) (..odd? sample))))))

(the .public test
  Test
  (<| (_.covering /._)
      (all _.and
           ..test_let
           ..test_def
           )))
