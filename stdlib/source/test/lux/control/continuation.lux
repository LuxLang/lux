... This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
... If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.

(.using
 [library
  [lux (.except)
   [abstract
    ["[0]" monad (.only do)
     ["[1]T" \\test]]
    ["[0]" functor
     ["[1]T" \\test (.only Injection Comparison)]]]
   [data
    [text
     ["%" \\injection]]]
   [math
    ["[0]" random]
    [number
     ["n" natural]]]
   [test
    ["_" property (.only Test)]]]]
 [\\library
  ["[0]" /]]
 ["[0]" /
  ["[1][0]" delimited]])

(the injection
  (for_any (_ o)
    (Injection (for_any (_ i)
                 (/.Cont i o))))
  (by /.monad in))

(the comparison
  (Comparison /.Cont)
  (function (_ == left right)
    (== (/.value left) (/.value right))))

(the .public test
  Test
  (<| (_.covering /._)
      (do random.monad
        [sample random.natural
         .let [(open "/#[0]") /.monad]
         elems (random.stack 3 random.natural)])
      (_.for [/.Cont])
      (all _.and
           (_.for [/.functor]
                  (functorT.spec ..injection ..comparison /.functor))
           (_.for [/.monad]
                  (monadT.spec ..injection ..comparison /.monad))

           (_.coverage [/.Context
                        /.empty]
             (|> (/#in sample)
                 (/.continued /.empty)
                 (same? sample)))
           (_.coverage [/.continued]
             (/.continued (same? sample)
                          (is (/.Cont Natural Bit)
                              (function (_ next)
                                (next sample)))))
           (_.coverage [/.value]
             (n.= sample (/.value (/#in sample))))
           (_.coverage [/.with_current /.call/cc]
             (and (n.= (n.* 2 sample)
                       (/.value (do [! /.monad]
                                  [value (/.with_current
                                           (function (_ k)
                                             (do !
                                               [temp (k sample)]
                                               ... If this code where to run,
                                               ... the output would be
                                               ... (n.* 4 sample)
                                               (k temp))))]
                                  (in (n.* 2 value)))))
                  (same? /.with_current /.call/cc)))
           (_.coverage [/.pending]
             (/.continued (same? sample)
                          (is (/.Cont Natural Bit)
                              (/.pending sample))))

           /delimited.test
           )))
