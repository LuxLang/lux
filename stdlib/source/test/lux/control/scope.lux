... This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
... If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.

(.require
 [library
  [lux (.except)
   [abstract
    ["[0]" monad (.only do)
     ["[1]T" \\test]]
    ["[0]" functor
     ["[1]T" \\test (.only Injection Comparison)]]
    ["[0]" apply
     ["[1]T" \\test]]]
   [math
    ["[0]" random]
    [number
     ["n" nat]]]
   [test
    ["_" property (.only Test)]]]]
 [\\library
  ["[0]" / (.only)
   [//
    ["[0]" io (.only IO)]]]]
 ["[0]" /
  ["[1][0]" dynamic]])

(the (injection value)
  (Injection (All (_ a r) (/.Scope r a)))
  (function (_ env)
    value))

(the comparison
  (Comparison (All (_ a r) (/.Scope r a)))
  (function (_ == left right)
    (== (/.value [] left) (/.value [] right))))

(the .public test
  Test
  (<| (_.covering /._)
      (_.for [/.Scope])
      (do random.monad
        [sample random.nat
         factor random.nat]
        (all _.and
             (_.for [/.functor]
                    (functorT.spec ..injection ..comparison /.functor))
             (_.for [/.apply]
                    (applyT.spec ..injection ..comparison /.apply))
             (_.for [/.monad]
                    (monadT.spec ..injection ..comparison /.monad))

             (_.coverage [/.value /.read]
               (n.= sample
                    (/.value sample /.read)))
             (_.coverage [/.local]
               (n.= (n.* factor sample)
                    (/.value sample (/.local (n.* factor) /.read))))
             (let [(open "io#[0]") io.monad]
               (_.coverage [/.with /.lifted]
                 (|> (is (/.Scope Any (IO Nat))
                         (do (/.with io.monad)
                           [a (/.lifted (io#in sample))
                            b (in factor)]
                           (in (n.* b a))))
                     (/.value [])
                     io.run!
                     (n.= (n.* factor sample)))))

             /dynamic.test
             ))))
