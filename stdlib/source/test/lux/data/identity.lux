(.require
 [library
  [lux (.except)
   ["_" test (.only Test)]
   [abstract
    [monad (.only do)]
    [\\specification
     ["$[0]" functor (.only Injection Comparison)]
     ["$[0]" apply]
     ["$[0]" monad]
     ["$[0]" comonad]]]]]
 [\\library
  ["[0]" / (.only Identity)]])

(def injection
  (Injection Identity)
  (|>>))

(def comparison
  (Comparison Identity)
  (function (_ ==)
    ==))

(def .public test
  Test
  (<| (_.covering /._)
      (_.for [/.Identity])
      (all _.and
           (_.for [/.functor]
                  ($functor.spec ..injection ..comparison /.functor))
           (_.for [/.apply]
                  ($apply.spec ..injection ..comparison /.apply))
           (_.for [/.monad]
                  ($monad.spec ..injection ..comparison /.monad))
           (_.for [/.comonad]
                  ($comonad.spec ..injection ..comparison /.comonad))
           )))
