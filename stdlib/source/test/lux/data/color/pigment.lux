(.require
 [library
  [lux (.except)
   [abstract
    [monad (.only do)]]
   [math
    ["[0]" random (.only Random)]
    [number
     ["r" rev]]]
   [test
    ["_" property (.only Test)]]]]
 [\\library
  ["[0]" /]])

(def .public test
  Test
  (<| (_.covering /._)
      (do [! random.monad]
        [alpha random.rev])
      (_.for [/.Alpha /.Pigment])
      (all _.and
           (_.coverage [/.transparent]
             (and (not (r.< /.transparent alpha))
                  (|> alpha
                      (r.+ /.transparent)
                      (r.= alpha))))
           (_.coverage [/.opaque]
             (not (r.> /.opaque alpha)))
           (_.coverage [/.translucent]
             (and (r.< /.opaque /.translucent)
                  (r.> /.transparent /.translucent)
                  (r.= /.transparent
                       (r.+ /.translucent /.translucent))))
           )))
