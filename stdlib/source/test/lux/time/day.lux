(.module:
  [lux #*
   ["_" test (#+ Test)]
   [abstract
    {[0 #spec]
     [/
      ["$." equivalence]
      ["$." order]
      ["$." enum]]}]
   [math
    ["." random (#+ Random) ("#\." monad)]]]
  {1
   ["." /]})

(def: #export random
  (Random /.Day)
  (random.either (random.either (random.either (random\wrap #/.Sunday)
                                               (random\wrap #/.Monday))
                                (random.either (random\wrap #/.Tuesday)
                                               (random\wrap #/.Wednesday)))
                 (random.either (random.either (random\wrap #/.Thursday)
                                               (random\wrap #/.Friday))
                                (random\wrap #/.Saturday))))

(def: #export test
  Test
  (<| (_.covering /._)
      (_.for [/.Day])
      ($_ _.and
          (_.for [/.equivalence]
                 ($equivalence.spec /.equivalence ..random))
          (_.for [/.order]
                 ($order.spec /.order ..random))
          (_.for [/.enum]
                 ($enum.spec /.enum ..random))
          )))
