(.require
 [library
  [lux (.except)
   [abstract
    [monad (.only do)]]
   [math
    ["[0]" random]]
   [test
    ["_" property (.only Test)]]]]
 ["[0]" /
  ["[1][0]" binary]
  ["[1][0]" bit]
  ["[1][0]" color
   ["[1]/[0]" rgb]
   ["[1]/[0]" cmyk]
   ["[1]/[0]" hsl]
   ["[1]/[0]" hsb]
   ["[1]/[0]" pigment]
   ["[1]/[0]" named]
   ["[1]/[0]" terminal]
   ["[1]/[0]" scheme]]
  ["[1][0]" identity]
  ["[1][0]" product]
  ["[1][0]" sum]
  ["[1][0]" text]
  ["[1][0]" format
   ["[1]/[0]" json]
   ["[1]/[0]" tar]
   ["[1]/[0]" xml]]
  ["[1][0]" collection]])

... TODO: Get rid of this ASAP
(def !bundle
  (template (_ body)
    [(is Test
         (do random.monad
           [_ (in [])]
           body))]))

(def format
  Test
  (all _.and
       /format/json.test
       /format/tar.test
       /format/xml.test
       ))

(def test/0
  Test
  (all _.and
       /binary.test
       /bit.test
       ))

(def test/1
  Test
  (all _.and
       /identity.test))

(def test/2
  Test
  (all _.and
       /product.test
       /sum.test
       /text.test))

(def .public test
  Test
  ... TODO: Inline ASAP
  (all _.and
       (!bundle test/0)
       (!bundle test/1)
       (!bundle test/2)
       (!bundle ..format)
       (!bundle /collection.test)

       /color/rgb.test
       /color/cmyk.test
       /color/hsl.test
       /color/hsb.test
       /color/pigment.test
       /color/named.test
       /color/terminal.test
       /color/scheme.test
       ))
