... This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
... If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.

(.using
 [library
  [lux (.except)
   [abstract
    [monad (.only do)]]
   [data
    [collection
     ["[0]" list]
     ["[0]" set]]]
   [math
    ["[0]" random (.only Random)]
    [number
     ["[0]" natural]]]
   [macro
    ["[0]" template]
    ["[0]" expansion]]
   [test
    ["_" property (.only Test)]]]]
 [\\library
  ["[0]" /]])

(expansion.let [,bundles (these [[[/.snare_roll]
                                  [/.finger_snap]
                                  [/.high_q]
                                  [/.slap]
                                  [/.scratch_pull]
                                  [/.scratch_push]
                                  [/.sticks]
                                  [/.square_click]
                                  [/.metronome_bell]
                                  [/.metronome_click]
                                  [/.acoustic_bass_drum]
                                  [/.electric_bass_drum]
                                  [/.side_stick]
                                  [/.acoustic_snare]
                                  [/.hand_clap]
                                  [/.electric_snare]
                                  [/.low_floor_tom]
                                  [/.closed_hi_hat]
                                  [/.high_floor_tom]
                                  [/.pedal_hi_hat]
                                  [/.low_tom]]]

                                [[[/.open_hi_hat]
                                  [/.low_mid_tom]
                                  [/.high_mid_tom]
                                  [/.crash_cymbal_1]
                                  [/.high_tom]
                                  [/.ride_cymbal_1]
                                  [/.chinese_cymbal]
                                  [/.ride_bell]
                                  [/.tambourine]
                                  [/.splash_cymbal]
                                  [/.cowbell]
                                  [/.crash_cymbal_2]
                                  [/.vibraslap]
                                  [/.ride_cymbal_2]
                                  [/.high_bongo]
                                  [/.low_bongo]
                                  [/.mute_high_conga]
                                  [/.open_high_conga]
                                  [/.low_conga]
                                  [/.high_timbale]
                                  [/.low_timbale]]]

                                [[[/.high_agogo]
                                  [/.low_agogo]
                                  [/.cabasa]
                                  [/.maracas]
                                  [/.short_whistle]
                                  [/.long_whistle]
                                  [/.short_guiro]
                                  [/.long_guiro]
                                  [/.claves]
                                  [/.high_woodblock]
                                  [/.low_woodblock]
                                  [/.mute_cuica]
                                  [/.open_cuica]
                                  [/.mute_triangle]
                                  [/.open_triangle]
                                  [/.shaker]
                                  [/.jingle_bell]
                                  [/.belltree]
                                  [/.castanets]
                                  [/.mute_surdo]
                                  [/.open_surdo]]]
                                )]
  (these (the all_options
           (List /.Instrument)
           (`` (`` (`` (list.together (list (,, (template.with [,options]
                                                  [(is (List /.Instrument)
                                                       (list (,, (expansion.let [,options' (template.spliced ,options)]
                                                                   (,, (template.with [,name]
                                                                         [,name]

                                                                         ,options'
                                                                         ))))))]
                                                  
                                                  ,bundles))))))))

         (the .public test
           Test
           (<| (_.covering /._)
               (do [! random.monad]
                 [])
               (_.for [/.Instrument])
               (`` (all _.and
                        (,, (template.with [,options]
                              [(`` (`` (_.coverage [(,, (expansion.let [,options' (template.spliced ,options)]
                                                          (,, (template.with [,name]
                                                                [,name]

                                                                ,options'
                                                                ))))]
                                         (let [uniques (set.of_list natural.hash ..all_options)]
                                           (natural.= (list.size ..all_options)
                                                      (set.size uniques))))))]
                              
                              ,bundles))
                        ))))))
