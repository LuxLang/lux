... This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
... If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.

(.require
 [library
  [lux (.except)
   [abstract
    [monad (.only do)]]
   [control
    ["[0]" maybe]]
   [data
    [collection
     ["[0]" list]
     ["[0]" set]
     ["[0]" sequence (.only Sequence sequence)]]]
   [math
    ["[0]" random (.only Random)]
    [number
     ["[0]" nat (.use "[1]#[0]" equivalence)]]]
   [test
    ["_" property (.only Test)]]]]
 [\\library
  ["[0]" /]])

(with_expansions [<classes> (these /.c
                                   /.c#
                                   /.d
                                   /.d#
                                   /.e
                                   /.f
                                   /.f#
                                   /.g
                                   /.g#
                                   /.a
                                   /.a#
                                   /.b
                                   )
                  <pitches> (these /.c_0
                                   /.c#_0
                                   /.d_0
                                   /.d#_0
                                   /.e_0
                                   /.f_0
                                   /.f#_0
                                   /.g_0
                                   /.g#_0
                                   /.a_0
                                   /.a#_0
                                   /.b_0

                                   /.c_1
                                   /.c#_1
                                   /.d_1
                                   /.d#_1
                                   /.e_1
                                   /.f_1
                                   /.f#_1
                                   /.g_1
                                   /.g#_1
                                   /.a_1
                                   /.a#_1
                                   /.b_1

                                   /.c_2
                                   /.c#_2
                                   /.d_2
                                   /.d#_2
                                   /.e_2
                                   /.f_2
                                   /.f#_2
                                   /.g_2
                                   /.g#_2
                                   /.a_2
                                   /.a#_2
                                   /.b_2

                                   /.c_3
                                   /.c#_3
                                   /.d_3
                                   /.d#_3
                                   /.e_3
                                   /.f_3
                                   /.f#_3
                                   /.g_3
                                   /.g#_3
                                   /.a_3
                                   /.a#_3
                                   /.b_3

                                   /.c_4
                                   /.c#_4
                                   /.d_4
                                   /.d#_4
                                   /.e_4
                                   /.f_4
                                   /.f#_4
                                   /.g_4
                                   /.g#_4
                                   /.a_4
                                   /.a#_4
                                   /.b_4

                                   /.c_5
                                   /.c#_5
                                   /.d_5
                                   /.d#_5
                                   /.e_5
                                   /.f_5
                                   /.f#_5
                                   /.g_5
                                   /.g#_5
                                   /.a_5
                                   /.a#_5
                                   /.b_5

                                   /.c_6
                                   /.c#_6
                                   /.d_6
                                   /.d#_6
                                   /.e_6
                                   /.f_6
                                   /.f#_6
                                   /.g_6
                                   /.g#_6
                                   /.a_6
                                   /.a#_6
                                   /.b_6

                                   /.c_7
                                   /.c#_7
                                   /.d_7
                                   /.d#_7
                                   /.e_7
                                   /.f_7
                                   /.f#_7
                                   /.g_7
                                   /.g#_7
                                   /.a_7
                                   /.a#_7
                                   /.b_7

                                   /.c_8
                                   /.c#_8
                                   /.d_8
                                   /.d#_8
                                   /.e_8
                                   /.f_8
                                   /.f#_8
                                   /.g_8
                                   /.g#_8
                                   /.a_8
                                   /.a#_8
                                   /.b_8

                                   /.c_9
                                   /.c#_9
                                   /.d_9
                                   /.d#_9
                                   /.e_9
                                   /.f_9
                                   /.f#_9
                                   /.g_9
                                   /.g#_9
                                   /.a_9
                                   /.a#_9
                                   /.b_9

                                   /.c_10
                                   /.c#_10
                                   /.d_10
                                   /.d#_10
                                   /.e_10
                                   /.f_10
                                   /.f#_10
                                   /.g_10
                                   )]
  (def .public class
    (Random /.Class)
    (let [options (is (Sequence /.Class)
                      (sequence <classes>))
          amount (sequence.size options)]
      (do [! random.monad]
        [choice (of ! each (nat.% amount) random.nat)]
        (in (maybe.trusted (sequence.item choice options))))))

  (def .public random
    (Random /.Pitch)
    (let [options (is (Sequence /.Pitch)
                      (sequence <pitches>))
          amount (sequence.size options)]
      (do [! random.monad]
        [choice (of ! each (nat.% amount) random.nat)]
        (in (maybe.trusted (sequence.item choice options))))))
  
  (def .public test
    Test
    (<| (_.covering /._)
        (do [! random.monad]
          [expected_class ..class
           expected_pitch ..random])
        (all _.and
             (<| (_.for [/.Class])
                 (all _.and
                      (_.coverage [<classes>]
                        (let [options (is (List /.Class)
                                          (list <classes>))
                              uniques (set.of_list nat.hash options)]
                          (nat#= (list.size options)
                                 (set.size uniques))))
                      (_.coverage [/.inversion]
                        (and (|> expected_class
                                 /.inversion
                                 /.inversion
                                 (nat.= expected_class))
                             (or (nat.= /.c expected_class)
                                 (|> expected_class
                                     /.inversion
                                     (nat.= expected_class)
                                     not))))))
             (<| (_.for [/.Pitch])
                 (all _.and
                      (_.coverage [<pitches>]
                        (let [options (is (List /.Pitch)
                                          (list <pitches>))
                              uniques (set.of_list nat.hash options)]
                          (nat#= (list.size options)
                                 (set.size uniques))))
                      (_.coverage [/.Octave
                                   /.pitch /.octave /.class]
                        (nat#= expected_pitch
                               (/.pitch (/.octave expected_pitch)
                                        (/.class expected_pitch))))
                      (_.coverage [/.lowest]
                        (not (nat.< /.lowest expected_pitch)))
                      (_.coverage [/.highest]
                        (not (nat.> /.highest expected_pitch)))
                      ))
             ))))
