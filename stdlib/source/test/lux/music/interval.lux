... This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
... If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.

(.require
 [library
  [lux (.except)
   [abstract
    [monad (.only do)]]
   [control
    ["[0]" maybe]]
   [data
    [collection
     ["[0]" list]
     ["[0]" set]
     ["[0]" sequence (.only Sequence sequence)]]]
   [math
    ["[0]" random (.only Random) (.use "[1]#[0]" functor)]
    [number
     ["[0]" natural]]]
   [meta
    [macro
     ["[0]" expansion]
     ["[0]" template]]]
   [test
    ["_" property (.only Test)]]]]
 [\\library
  ["[0]" /]])

(the .public random
  (Random /.Interval)
  (random#each (natural.% (++ /.octave))
               random.natural))

(expansion.let [<options> (these /.perfect_unison
                                 /.minor_2nd
                                 /.major_2nd
                                 /.minor_3rd
                                 /.major_3rd
                                 /.perfect_4th
                                 /.tritone
                                 /.perfect_5th
                                 /.minor_6th
                                 /.major_6th
                                 /.minor_7th
                                 /.major_7th
                                 /.perfect_8ve
                                 )]
  (the .public test
    Test
    (<| (_.covering /._)
        (do [! random.monad]
          [expected ..random])
        (_.for [/.Interval])
        (`` (all _.and
                 (_.coverage [<options>]
                   (let [options (is (List /.Interval)
                                     (list <options>))
                         uniques (set.of_list natural.hash options)]
                     (natural.= (list.size options)
                                (set.size uniques))))
                 (,, (template.with [<original> <alternative>]
                       [(_.coverage [<alternative>]
                          (same? <original>
                                 <alternative>))]

                       [/.minor_2nd /.step]
                       [/.minor_2nd /.semi_tone]
                       [/.minor_2nd /.half_tone]

                       [/.major_2nd /.tone]
                       [/.major_2nd /.whole_tone]

                       [/.perfect_8ve /.octave]
                       ))
                 (_.coverage [/.simple?]
                   (and (not (/.simple? /.perfect_8ve))
                        (,, (template.with [<it>]
                              [(/.simple? <it>)]

                              [/.perfect_unison]
                              [/.minor_2nd]
                              [/.major_2nd]
                              [/.minor_3rd]
                              [/.major_3rd]
                              [/.perfect_4th]
                              [/.tritone]
                              [/.perfect_5th]
                              [/.minor_6th]
                              [/.major_6th]
                              [/.minor_7th]
                              [/.major_7th]
                              ))))
                 (_.coverage [/.compound?]
                   (and (/.compound? /.perfect_8ve)
                        (,, (template.with [<it>]
                              [(not (/.compound? <it>))]

                              [/.perfect_unison]
                              [/.minor_2nd]
                              [/.major_2nd]
                              [/.minor_3rd]
                              [/.major_3rd]
                              [/.perfect_4th]
                              [/.tritone]
                              [/.perfect_5th]
                              [/.minor_6th]
                              [/.major_6th]
                              [/.minor_7th]
                              [/.major_7th]
                              ))))
                 (_.coverage [/.inversion]
                   (and (|> expected
                            /.inversion
                            /.inversion
                            (natural.= expected))
                        (or (|> expected
                                /.inversion
                                (natural.= expected)
                                not)
                            (natural.= /.perfect_unison expected)
                            (natural.= /.tritone expected)
                            (natural.= /.perfect_8ve expected))))
                 )))))
