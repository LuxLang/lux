(.using
 [library
  [lux "*"
   ["_" test (.only Test)]
   [abstract
    [monad (.only do)]
    [\\specification
     ["$[0]" equivalence]
     ["$[0]" hash]]]
   [data
    ["[0]" bit ("[1]#[0]" equivalence)]
    ["[0]" text ("[1]#[0]" equivalence)]]
   [math
    ["[0]" random (.only Random)]
    [number
     ["n" nat]]]]]
 [\\library
  ["[0]" /]])

(def: .public random
  (Random /.Simple)
  (all random.or
       random.bit
       random.i64
       random.frac
       (random.lower_case 1)
       ))

(def: .public test
  Test
  (<| (_.covering /._)
      (_.for [/.Simple])
      (do [! random.monad]
        [left ..random
         right ..random]
        (all _.and
             (_.for [/.equivalence]
                    ($equivalence.spec /.equivalence ..random))
             (_.for [/.hash]
                    ($hash.spec /.hash ..random))

             (_.coverage [/.format]
               (bit#= (text#= (/.format left) (/.format right))
                      (# /.equivalence = left right)))
             ))))
