(.using
 [library
  [lux (.except)
   ["_" test (.only Test)]
   [abstract
    [\\specification
     ["$[0]" equivalence]]]
   [math
    ["[0]" random (.only Random) ("[1]#[0]" monad)]]]]
 [\\library
  ["[0]" /]])

(def: random_definition
  (Random /.Definition)
  (all random.and
       (random.lower_case 1)
       (random.maybe
        (all random.and
             random.nat
             random.nat
             random.nat
             ))
       ))

(def: .public random
  (Random /.Category)
  (all random.or
       (random#in [])
       ..random_definition
       (random.lower_case 2)
       (random.lower_case 3)
       (random.lower_case 4)
       (random.lower_case 5)
       (random.lower_case 6)
       ))

(def: .public test
  Test
  (<| (_.covering /._)
      (_.for [/.Category])
      (all _.and
           (_.for [/.equivalence]
                  ($equivalence.spec /.equivalence ..random))
           )))
