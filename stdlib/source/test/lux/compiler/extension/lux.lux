... This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
... If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.

(.using
 [library
  [lux (.except)
   [abstract
    ["[0]" monad]]
   [data
    ["[0]" text]
    [collection
     ["[0]" list]
     ["[0]" set]]]
   [macro
    ["[0]" expansion]]
   [math
    ["[0]" random]
    [number
     [/64
      ["n" natural]]]]
   [test
    ["_" property (.only Test)]]]]
 [\\library
  ["[0]" /]])

(the .public test
  Test
  (<| (_.covering /._)
      (monad.let [! random.monad]
        [])
      (all _.and
           (expansion.let [,*options (these /.is?
                                            /.try
                                            /.when_char
                                            /.local
                                            /.global
                                            /.universe
                                            /.when
                                            /.function

                                            /.log!
                                            /.error

                                            /.i64_and
                                            /.i64_or
                                            /.i64_xor
                                            /.i64_left
                                            /.i64_right

                                            /.i64_=
                                            /.i64_+
                                            /.i64_-

                                            /.int_<
                                            /.int_x
                                            /.int_/
                                            /.int_%
                                            
                                            /.int_f64
                                            /.int_char

                                            /.f64_+
                                            /.f64_-
                                            /.f64_x
                                            /.f64_/
                                            /.f64_%
                                            /.f64_=
                                            /.f64_<
                                            /.f64_int

                                            /.text_=
                                            /.text_<
                                            /.text_composite
                                            /.text_index
                                            /.text_size
                                            /.text_char
                                            /.text_clip

                                            /.list
                                            /.list_size
                                            /.list_item
                                            /.list_composite

                                            /.type_name
                                            /.type

                                            /.array
                                            /.array_size
                                            /.array_its
                                            /.array_has
                                            /.array_lacks
                                            /.array_lacks?)]
             (_.coverage [,*options]
               (let [options (list ,*options)
                     uniques (set.of_list text.hash options)]
                 (n.= (list.size options)
                      (set.size uniques)))))
           )))
