... This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
... If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.

(.using
 [library
  [lux (.except)
   [abstract
    [monad (.only do)]]
   [concurrency
    ["[0]" future]]
   [error
    ["[0]" try]]
   [data
    ["[0]" binary (.only)
     ["$[1]" \\test]]]
   [math
    ["[0]" random (.only Random)]
    [number
     [/64
      ["n" natural]]]]
   [world
    ["[0]" file]]
   [test
    ["[0]" unit]
    ["_" property (.only Test)]]]]
 [\\library
  ["[0]" / (.only)
   ["/[1]" //
    ["[1][0]" module]]]]
 ["$[0]" ///
  ["[1][0]" context]])

(the .public test
  Test
  (<| (_.covering /._)
      (do [! random.monad]
        [context $///context.random
         .let [/ "/"
               fs (file.memory /)]
         @module random.natural
         @artifact random.natural
         expected ($binary.random 1)]
        (all _.and
             (pure (do [! future.monad]
                     [pre (by fs file? (/.path fs context @module @artifact))
                      _ (//module.enable! ! fs @module)
                      write! (/.cache! fs context @module @artifact expected)
                      post (by fs file? (/.path fs context @module @artifact))
                      read! (/.cache fs context @module @artifact)]
                     (unit.coverage [/.path /.cache! /.cache]
                       (and (not pre)
                            (when write!
                              {try.#Success _} true
                              {try.#Failure _} false)
                            post
                            (when read!
                              {try.#Success actual} (binary.= expected actual)
                              {try.#Failure _} false)))))
             ))))
