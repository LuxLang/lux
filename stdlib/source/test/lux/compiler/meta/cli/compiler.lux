... This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
... If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.

(.using
 [library
  [lux (.except)
   [abstract
    [monad (.only do)]
    ["[0]" equivalence
     ["[1]T" \\test]]]
   [error
    ["[0]" try (.use "[1]#[0]" functor)]]
   [data
    ["[0]" text
     ["<[1]>" \\projection]]]
   [math
    ["[0]" random (.only Random)]
    [number
     ["n" natural]]]
   [meta
    ["[0]" static]
    ["[0]" name
     ["$[1]" \\test]]]
   [test
    ["_" property (.only Test)]]]]
 [\\library
  ["[0]" /]])

(the .public random
  (Random /.Compiler)
  (do [! random.monad]
    [definition ($name.random 1 1)
     amount (by ! each (n.% 5) random.natural)
     parameters (random.stack amount (random.lower_cased 2))]
    (in [/.#definition definition
         /.#parameters parameters])))

(the .public test
  Test
  (<| (_.covering /._)
      (_.for [/.Compiler
              /.#definition /.#parameters])
      (do [! random.monad]
        [expected ..random]
        (all _.and
             (_.for [/.equivalence /.=]
                    (static.when (same? /.equivalence /.=)
                      (equivalenceT.spec /.equivalence ..random)))

             (_.coverage [/.as_text /.of_text]
               (|> expected
                   /.as_text
                   (<text>.value /.of_text)
                   (try#each (by /.equivalence = expected))
                   (try.else false)))
             ))))
