(.module:
  [lux #*
   ["%" data/text/format (#+ format)]
   [abstract/monad (#+ do)]
   ["_" test (#+ Test)]
   [control
    ["." try]]
   [math
    ["." random (#+ Random)]
    [number
     ["n" nat]]]]
  {1
   ["." / (#+ Dynamic :dynamic :check)]})

(def: #export test
  Test
  (<| (_.context (%.name (name_of /._)))
      (do random.monad
        [expected random.nat
         #let [value (:dynamic expected)]]
        ($_ _.and
            (_.test "Can check dynamic values."
                    (case (:check Nat value)
                      (#try.Success actual)
                      (n.= expected actual)
                      
                      (#try.Failure _)
                      false))
            (_.test "Cannot confuse types."
                    (case (:check Text value)
                      (#try.Success actual)
                      false
                      
                      (#try.Failure _)
                      true))))))
