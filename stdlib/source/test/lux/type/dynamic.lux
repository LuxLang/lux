(.using
 [library
  [lux "*"
   ["_" test (.only Test)]
   [abstract
    [monad (.only do)]]
   [control
    ["[0]" try]
    ["[0]" exception]]
   [data
    ["[0]" text ("[1]#[0]" equivalence)
     ["%" format (.only format)]]]
   [math
    ["[0]" random (.only Random)]
    [number
     ["n" nat]]]]]
 [\\library
  ["[0]" /]])

(def: .public test
  Test
  (<| (_.covering /._)
      (_.for [/.Dynamic])
      (do random.monad
        [expected random.nat]
        (all _.and
             (_.coverage [/.dynamic /.static]
               (case (/.static Nat (/.dynamic expected))
                 {try.#Success actual}
                 (n.= expected actual)
                 
                 {try.#Failure _}
                 false))
             (_.coverage [/.wrong_type]
               (case (/.static Text (/.dynamic expected))
                 {try.#Success actual}
                 false
                 
                 {try.#Failure error}
                 (exception.match? /.wrong_type error)))
             (_.coverage [/.format]
               (case (/.format (/.dynamic expected))
                 {try.#Success actual}
                 (text#= (%.nat expected) actual)
                 
                 {try.#Failure _}
                 false))
             ))))
