(.module:
  [lux #*
   data/text/format
   ["r" math/random (#+ Random)]
   ["_" test (#+ Test)]
   [control ["." monad (#+ do)]]
   [data
    ["." error]]]
  {1
   ["." / (#+ Dynamic :dynamic :check)]})

(def: #export test
  Test
  (<| (_.context (%name (name-of /._)))
      (do r.monad
        [expected r.nat
         #let [value (:dynamic expected)]]
        ($_ _.and
            (_.test "Can check dynamic values."
                    (case (:check Nat value)
                      (#error.Success actual)
                      (n/= expected actual)
                      
                      (#error.Failure error)
                      false))
            (_.test "Cannot confuse types."
                    (case (:check Text value)
                      (#error.Success actual)
                      false
                      
                      (#error.Failure error)
                      true))))))
