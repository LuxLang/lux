(.module:
  [lux #*
   ["%" data/text/format (#+ format)]
   [abstract/monad (#+ do)]
   ["r" math/random (#+ Random)]
   ["_" test (#+ Test)]
   [control
    ["." try]]]
  {1
   ["." / (#+ Dynamic :dynamic :check)]})

(def: #export test
  Test
  (<| (_.context (%.name (name-of /._)))
      (do r.monad
        [expected r.nat
         #let [value (:dynamic expected)]]
        ($_ _.and
            (_.test "Can check dynamic values."
                    (case (:check Nat value)
                      (#try.Success actual)
                      (n/= expected actual)
                      
                      (#try.Failure _)
                      false))
            (_.test "Cannot confuse types."
                    (case (:check Text value)
                      (#try.Success actual)
                      false
                      
                      (#try.Failure _)
                      true))))))
