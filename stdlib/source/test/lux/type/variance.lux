(.module:
  [library
   [lux "*"
    ["_" test {"+" [Test]}]
    [abstract
     [monad {"+" [do]}]]
    [math
     ["[0]" random {"+" [Random]}]]]]
  [\\library
   ["[0]" /
    ["/[1]" // "_"
     ["[1][0]" check]]]])

(type: Super
  (Ex (_ sub) [Text sub]))

(type: Sub
  (Super Bit))

(def: .public test
  Test
  (<| (_.covering /._)
      ($_ _.and
          (_.cover [/.Co]
                   (and (//check.subsumes? (type (/.Co Super)) (type (/.Co Sub)))
                        (not (//check.subsumes? (type (/.Co Sub)) (type (/.Co Super))))))
          (_.cover [/.Contra]
                   (and (//check.subsumes? (type (/.Contra Sub)) (type (/.Contra Super)))
                        (not (//check.subsumes? (type (/.Contra Super)) (type (/.Contra Sub))))))
          (_.cover [/.In]
                   (and (//check.subsumes? (type (/.In Super)) (type (/.In Super)))
                        (//check.subsumes? (type (/.In Sub)) (type (/.In Sub)))
                        (not (//check.subsumes? (type (/.In Sub)) (type (/.In Super))))
                        (not (//check.subsumes? (type (/.In Super)) (type (/.In Sub))))))
          )))
