(.using
 [library
  [lux (.full)
   ["@" target]
   [abstract
    [monad (.only do)]
    [functor (.only Functor)
     [\\poly
      ["[0]" /]]]]
   ["r" math/random (.only Random)]
   ["_" test (.only Test)]
   [control
    ["[0]" state]]
   [data
    ["[0]" identity]]]])

(for @.old (these)
     (these (def: maybe_functor
              (Functor .Maybe)
              (/.functor .Maybe))

            (def: list_functor
              (Functor .List)
              (/.functor .List))

            (def: state_functor
              (All (_ s) (Functor (state.State s)))
              (/.functor state.State))

            (def: identity_functor
              (Functor identity.Identity)
              (/.functor identity.Identity))))

(def: .public test
  Test
  (<| (_.covering /._)
      (_.coverage [/.functor]
        true)))
