(.module:
  [library
   [lux "*"
    [abstract
     [monad {"+" [do]}]
     [functor
      [\\poly
       ["[0]" /]]]]
    ["r" math/random {"+" [Random]}]
    ["_" test {"+" [Test]}]
    [control
     ["[0]" state]]
    [data
     ["[0]" identity]]
    [type
     [poly {"+" [derived:]}]]]])

(derived: maybe_functor (/.functor .Maybe))
(derived: list_functor (/.functor .List))
(derived: state_functor (/.functor state.State))
(derived: identity_functor (/.functor identity.Identity))

(def: .public test
  Test
  (<| (_.covering /._)
      (_.cover [/.functor]
               true)))
