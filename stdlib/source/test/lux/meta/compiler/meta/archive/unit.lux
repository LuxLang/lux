(.require
 [library
  [lux (.except)
   [abstract
    ["[0]" equivalence
     ["[1]T" \\test]]
    [\\specification
     ["$[0]" hash]]]
   [data
    [collection
     ["[0]" set]]]
   [math
    ["[0]" random (.only Random)]]
   [test
    ["_" property (.only Test)]]]]
 [\\library
  ["[0]" /]])

(def .public random
  (Random /.ID)
  (all random.and
       random.nat
       random.nat
       ))

(def .public test
  Test
  (<| (_.covering /._)
      (_.for [/.ID])
      (all _.and
           (_.for [/.equivalence]
                  (equivalenceT.spec /.equivalence ..random))
           (_.for [/.hash]
                  ($hash.spec /.hash ..random))
           
           (_.coverage [/.none]
             (set.empty? /.none))
           )))
