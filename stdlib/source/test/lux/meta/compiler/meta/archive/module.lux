(.require
 [library
  [lux (.except)
   ["_" test (.only Test)]
   [abstract
    [monad (.only do)]]
   [math
    ["[0]" random (.only Random)]
    [number
     ["n" nat]]]]]
 [\\library
  ["[0]" / (.only)
   ["[0]" document]
   [//
    ["[0]" key]
    ["[0]" signature
     ["$[1]" \\test]]]]]
 ["[0]" /
  ["[1][0]" document]
  ["[1][0]" descriptor]])

(def .public (random it)
  (All (_ a) (-> (Random a) (Random (/.Module a))))
  (all random.and
       random.nat
       (/descriptor.random 0)
       (do random.monad
         [signature $signature.random
          example it]
         (in (document.document (key.key signature example)
                                example)))))

(def .public test
  Test
  (<| (_.covering /._)
      (_.for [/.Module])
      (all _.and
           (_.coverage [/.ID /.runtime]
             (n.= 0 /.runtime))

           /document.test
           /descriptor.test
           )))
