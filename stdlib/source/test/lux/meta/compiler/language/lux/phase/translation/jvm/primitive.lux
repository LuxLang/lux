... This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
... If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.

(.require
 [library
  [lux (.except)
   [abstract
    [monad (.only do)]]
   [control
    ["[0]" io]
    ["[0]" try]]
   [data
    ["[0]" bit (.use "[1]#[0]" equivalence)]
    ["[0]" text (.use "[1]#[0]" equivalence)]]
   [math
    ["[0]" random (.only Random)]
    [number
     ["[0]" int (.use "[1]#[0]" equivalence)]
     ["[0]" frac (.use "[1]#[0]" equivalence)]]]
   [test
    ["_" property (.only Test)]]]]
 [\\library
  ["[0]" / (.only)
   [//
    ["[0]" host]]]])

(def .public test
  Test
  (<| (_.covering /._)
      (do [! random.monad]
        [expected_bit random.bit
         expected_i64 random.i64
         expected_f64 random.frac
         expected_text (random.lower_cased 1)

         .let [$unit [0 0]]])
      (`` (all _.and
               (,, (with_template [<constructor> <expected> <type> <=>]
                     [(_.coverage [<constructor>]
                        (io.run! (do io.monad
                                   [[class_loader host] host.host]
                                   (in (when (of host evaluate $unit [{.#None} (<constructor> <expected>)])
                                         {try.#Success actual}
                                         (<=> <expected> (as <type> actual))
                                         
                                         {try.#Failure error}
                                         false)))))]

                     [/.bit expected_bit Bit bit#=]
                     [/.i64 expected_i64 Int int#=]
                     [/.f64 expected_f64 Frac frac#=]
                     [/.text expected_text Text text#=]
                     ))
               ))))
