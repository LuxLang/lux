... This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
... If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.

(.using
 [library
  [lux (.except)
   [abstract
    [monad (.only do)]
    ["[0]" equivalence
     ["[1]T" \\test]]]
   [data
    ["[0]" bit]]
   [math
    ["[0]" random]]
   [meta
    ["[0]" static]]
   [test
    ["_" property (.only Test)]]]]
 [\\library
  ["[0]" / (.only)
   [/////
    ["[0]" type (.only)
     ["[1]T" \\test]]]]])

(the .public test
  Test
  (<| (_.covering /._)
      (do [! random.monad]
        [type typeT.random])
      (_.for [/.Datum /.random])
      (all _.and
           (_.for [/.equivalence /.=]
                  (static.when (same? /.equivalence /.=)
                    (equivalenceT.spec /.equivalence /.random)))
           
           (_.coverage [/.small /.big]
             (and (/.= /.small /.small)
                  (/.= /.big /.big)
                  (not (/.= /.small /.big))))
           (_.coverage [/.boolean /.byte /.short /.int
                        /.char
                        /.float
                        /.object]
             (and (alias? /.small /.boolean)
                  (alias? /.small /.byte)
                  (alias? /.small /.short)
                  (alias? /.small /.int)
                  (alias? /.small /.char)
                  (alias? /.small /.float)
                  (alias? /.small /.object)))
           (_.coverage [/.long /.double]
             (and (alias? /.big /.long)
                  (alias? /.big /.double)))
           (_.coverage [/.for]
             (bit.= (same? /.big (/.for type))
                    (or (same? type.long type)
                        (same? type.double type))))
           )))
