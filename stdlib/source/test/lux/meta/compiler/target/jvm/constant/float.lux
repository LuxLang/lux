... This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
... If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.

(.using
 [library
  [lux (.except)
   [abstract
    [monad (.only do)]
    ["[0]" equivalence
     ["[1]T" \\test]]]
   [data
    ["[0]" bit]
    ["[0]" binary (.only)
     ["![1]" \\injection]]]
   [math
    ["[0]" random]]
   [meta
    ["[0]" static]]
   [test
    ["_" property (.only Test)]]]]
 [\\library
  ["[0]" /]])

(the .public test
  Test
  (<| (_.covering /._)
      (_.for [/.Float /.random])
      (all _.and
           (_.for [/.equivalence /.=]
                  (static.when (same? /.equivalence /.=)
                    (equivalenceT.spec /.equivalence /.random)))

           (do [! random.monad]
             [sample_0 /.random
              sample_1 /.random]
             (_.coverage [/.as_binary]
               (let [both_zeroes!
                     (or (and (/.= /.positive_zero sample_0)
                              (/.= /.negative_zero sample_1))
                         (and (/.= /.negative_zero sample_0)
                              (/.= /.positive_zero sample_1)))

                     equal_values!
                     (/.= sample_0
                          sample_1)

                     equal_binaries!
                     (binary.= (!binary.value /.as_binary sample_0)
                               (!binary.value /.as_binary sample_1))]
                 (or both_zeroes!
                     (bit.= equal_values!
                            equal_binaries!)))))
           (_.coverage [/.positive_zero /.negative_zero]
             (bit.= (/.= /.positive_zero
                         /.negative_zero)
                    (not (binary.= (!binary.value /.as_binary /.positive_zero)
                                   (!binary.value /.as_binary /.negative_zero)))))
           )))
