... This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
... If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.

(.using
 [library
  [lux (.except)
   [abstract
    [monad (.only do)]
    ["[0]" equivalence
     ["[1]T" \\test]]]
   [data
    ["[0]" text]]
   [math
    ["[0]" random (.only Random)]]
   [meta
    ["[0]" static]
    ["[0]" code]]
   [test
    ["_" property (.only Test)]]]]
 [\\library
  ["[0]" /]]
 ["$[0]" //
  ["[1][0]" code]])

(the .public random
  (Random Provenance)
  (all random.and
       (random.alphabetic 10)
       random.natural
       random.natural
       ))

(the .public test
  Test
  (<| (_.covering /._)
      (_.for [.Provenance
              .#module .#line .#column])
      (all _.and
           (_.for [/.equivalence /.=]
                  (static.when (alias? /.equivalence /.=)
                    (equivalenceT.spec /.equivalence ..random)))

           (_.coverage [/.here]
             (not (by /.equivalence = (/.here) (/.here))))
           (do random.monad
             [provenance ..random
              error (random.alphabetic 10)]
             (_.coverage [/.as_text /.with]
               (let [located_error (/.with provenance error)]
                 (and (text.contains? (/.as_text provenance)
                                      located_error)
                      (text.contains? error
                                      located_error)))))
           (do random.monad
             [it $//code.random]
             (_.coverage [/.dummy]
               (by /.equivalence = /.dummy (code.provenance it))))
           )))
