... This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
... If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.

(.using
 [library
  [lux (.except)
   [abstract
    [monad (.only do)]]
   [error
    ["[0]" try]
    ["[0]" exception]]
   [data
    ["[0]" text]
    [collection
     ["[0]" list
      ["?[1]" \\projection]]]]
   [math
    ["[0]" random]
    [number
     ["n" natural]]]
   [macro
    ["[0]" syntax]
    ["[0]" expansion]]
   ["[0]" meta (.only)
    ["[0]" static]
    ["[0]" code (.only)
     ["<[1]>" \\projection]]]
   [test
    ["_" property (.only Test)]]]]
 [\\library
  ["[0]" /]])

(the failure
  (syntax.macro (_ [it ?list.any])
    (function (_ lux)
      (when (expansion.complete it lux)
        {try.#Failure error}
        {try.#Success [lux (list (code.text error))]}
        
        {try.#Success _}
        {try.#Failure ""}))))

(the .public test
  Test
  (<| (_.covering /._)
      (expansion.let [<current> (/.current)
                      <fake> (static.random code.text (random.lower_cased 1))])
      (all _.and
           (_.coverage [/.latest]
             (n.> 0 /.latest))
           (_.coverage [/.current]
             (not (text.empty? (/.current))))
           (_.coverage [/.for]
             (and (/.for <current> true
                         false)
                  (/.for <fake> false
                         true)))
           (_.coverage [/.invalid]
             (and (text.contains? (its exception.#label /.invalid)
                                  (..failure (/.for)))
                  (text.contains? (its exception.#label /.invalid)
                                  (..failure (/.for <fake> false)))))
           )))
