(.require
 [library
  [lux (.except)
   [abstract
    [monad (.only do)]]
   [math
    ["[0]" random (.only Random)]]
   [test
    ["_" property (.only Test)]]]]
 [\\library
  ["[0]" /]]
 ["[0]" /
  ["[1][0]" arity]
  ["[1][0]" version]
  ["[1][0]" language
   ["[1]/[0]" lux]]
  ["[1][0]" meta
   ["[1]/[0]" io]]])

(def .public test
  Test
  (<| (_.covering /._)
      (do [! random.monad]
        [])
      (all _.and
           (_.coverage [/.Code /.Parameter /.Input]
             true)

           /arity.test
           /version.test
           
           /language/lux.test

           /meta/io.test
           )))
