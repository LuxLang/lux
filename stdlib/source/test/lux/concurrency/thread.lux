... This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
... If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.

(.using
 [library
  [lux (.except)
   [abstract
    [monad (.only do)]]
   [control
    ["[0]" io]]
   [math
    ["[0]" random]
    [number
     [/64
      ["n" natural]
      ["i" integer]]]]
   [macro
    ["[0]" template]]
   [time
    ["[0]" instant (.only Instant)]
    ["[0]" duration]]
   [test
    ["_" property (.only Test)]
    ["[0]" unit]]]]
 [\\library
  ["[0]" / (.only)
   [//
    ["[0]" atom (.only Atom)]
    ["[0]" future]]]])

(the .public test
  Test
  (<| (_.covering /._)
      (do [! random.monad]
        [dummy random.natural
         expected random.natural
         delay (by ! each (|>> (n.% 5) (n.+ 5))
                   random.natural)]
        (all _.and
             (_.coverage [/.parallelism]
               (n.> 0 /.parallelism))
             (pure (do future.monad
                     [reference_time (future.soon instant.now)
                      .let [box (atom.atom [reference_time dummy])]
                      _ (future.soon
                         (/.schedule! delay (do io.monad
                                              [execution_time instant.now]
                                              (atom.write! [execution_time expected] box))))
                      _ (future.delay (n.x 2 delay))
                      [execution_time actual] (future.soon (atom.read! box))]
                     (unit.coverage [/.schedule!]
                       (let [expected_delay!
                             (i.>= (.integer delay)
                                   (duration.millis (instant.span reference_time execution_time)))

                             correct_value!
                             (n.= expected actual)]
                         (and expected_delay!
                              correct_value!)))))
             (_.for [/.Delay]
                    (`` (all _.and
                             (,, (template.with [<delay> <duration>]
                                   [(_.coverage [<delay>]
                                      (i.= (duration.millis <duration>)
                                           (.integer <delay>)))]

                                   [/.milli_second duration.milli_second]
                                   [/.second duration.second]
                                   [/.minute duration.minute]
                                   [/.hour duration.hour]
                                   [/.day duration.day]
                                   [/.week duration.week]
                                   ))
                             )))
             ))))
