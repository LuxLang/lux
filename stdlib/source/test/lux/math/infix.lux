(.module:
  [lux #*
   ["_" test (#+ Test)]
   [abstract
    [monad (#+ do)]]
   [data
    ["." bit ("#\." equivalence)]
    [number
     ["n" nat]
     ["f" frac]]]
   [math
    ["." random]]]
  {1
   ["." /
    ["." //]]})

(def: #export test
  Test
  (<| (_.covering /._)
      (do random.monad
        [subject random.nat
         parameter random.nat
         extra random.nat
         angle random.safe-frac
         factor random.nat]
        (_.cover [/.infix]
                 (let [constant-values!
                       (n.= subject
                            (/.infix subject))

                       unary-functions!
                       (f.= (//.sin angle)
                            (/.infix [//.sin angle]))

                       binary-functions!
                       (n.= (n.gcd parameter subject)
                            (/.infix [subject n.gcd parameter]))

                       multiple-binary-functions!
                       (n.= (n.* factor (n.gcd parameter subject))
                            (/.infix [subject n.gcd parameter n.* factor]))

                       function-call!
                       (n.= (n.gcd extra (n.* parameter subject))
                            (/.infix [(n.* parameter subject) n.gcd extra]))

                       non-numeric!
                       (bit\= (and (n.< parameter subject) (n.< extra parameter))
                              (/.infix [[subject n.< parameter] and [parameter n.< extra]]))

                       and-composition!
                       (and (bit\= (and (n.< parameter subject) (n.< extra parameter))
                                   (/.infix [#and subject n.< parameter n.< extra]))
                            (bit\= (and (n.< parameter subject) (n.> extra parameter))
                                   (/.infix [#and subject n.< parameter n.> extra])))]
                   (and constant-values!
                        unary-functions!
                        binary-functions!
                        multiple-binary-functions!
                        function-call!
                        non-numeric!
                        and-composition!
                        ))))))
