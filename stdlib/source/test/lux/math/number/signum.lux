... This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
... If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.

(.using
 [library
  [lux (.except)
   [abstract
    ["[0]" monad]]
   [data
    ["[0]" text]
    [collection
     ["[0]" list (.use "[1]#[0]" functor)]
     ["[0]" set]]]
   [logic
    ["[0]" bit]]
   [macro
    ["[0]" expansion]
    ["[0]" template]]
   [math
    ["[0]" random (.only Random) (.use "[1]#[0]" monad)]
    [number
     [/64
      ["[0]" natural]]]]
   [test
    ["_" property (.only Test)]]]]
 [\\library
  ["[0]" /]])

(the random
  (Random /.Signum)
  (random.either (random#pure /.positive)
                 (random#pure /.negative)))

(expansion.let [,each (these /.positive /.negative)]
  (the .public test
    Test
    (<| (_.covering /._)
        (monad.let [! random.monad]
          [it ..random])
        (_.for [/.Signum])
        (`` (all _.and
                 (_.coverage [,each]
                   (let [each (list ,each)
                         each_unique (set.of_list bit.hash each)]
                     (natural.= (list.size each)
                                (set.size each_unique))))
                 (_.coverage [/.as_text]
                   (let [each (list ,each)
                         each_unique (|> each
                                         (list#each /.as_text)
                                         (set.of_list text.hash))]
                     (natural.= (list.size each)
                                (set.size each_unique))))
                 (_.coverage [/.x]
                   (and (bit.= /.negative
                               (/.x /.positive /.negative))
                        (bit.= /.positive
                               (/.x it it))))
                 )))))
