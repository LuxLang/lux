... This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
... If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.

(.using
 [library
  [lux (.except)
   [abstract
    [monad (.only do)]]
   [data
    ["[0]" text]
    [collection
     ["[0]" list (.use "[1]#[0]" functor)]
     ["[0]" set]]]
   [macro
    ["[0]" expansion]]
   [math
    ["[0]" random]
    [number
     ["[0]" natural]]]
   [test
    ["_" property (.only Test)]]]]
 [\\library
  ["[0]" /]])

(the .public test
  Test
  (<| (_.covering /._)
      (do [! random.monad]
        [])
      (expansion.let [,every_02 (these /.the_00 /.the_01)
                      ,every_08 (these /.the_02 /.the_03 /.the_04 /.the_05 /.the_06 /.the_07)
                      ,every_10 (these /.the_08 /.the_09)
                      ,every_16 (these /.the_10 /.the_11 /.the_12 /.the_13 /.the_14 /.the_15)])
      (_.for [/.Digit])
      (all _.and
           (_.coverage [/.#character]
             (let [options (list#each (its /.#character) (list ,every_02 ,every_08 ,every_10 ,every_16))]
               (|> options
                   (set.of_list text.hash)
                   set.size
                   (natural.= (list.size options)))))
           (_.coverage [/.#value]
             (let [options (list#each (its /.#value) (list ,every_02 ,every_08 ,every_10 ,every_16))]
               (|> options
                   (set.of_list natural.hash)
                   set.size
                   (natural.= (list.size options)))))
           (_.coverage [/.base_02?
                        ,every_02]
             (list.every? (|>> (its /.#character) /.base_02?) (list ,every_02)))
           (_.coverage [/.base_08?
                        ,every_08]
             (and (list.every? (|>> (its /.#character) /.base_08?) (list ,every_02))
                  (list.every? (|>> (its /.#character) /.base_08?) (list ,every_08))))
           (_.coverage [/.base_10?
                        ,every_10]
             (and (list.every? (|>> (its /.#character) /.base_10?) (list ,every_02))
                  (list.every? (|>> (its /.#character) /.base_10?) (list ,every_08))
                  (list.every? (|>> (its /.#character) /.base_10?) (list ,every_10))))
           (_.coverage [/.base_16?
                        ,every_16]
             (and (list.every? (|>> (its /.#character) /.base_16?) (list ,every_02))
                  (list.every? (|>> (its /.#character) /.base_16?) (list ,every_08))
                  (list.every? (|>> (its /.#character) /.base_16?) (list ,every_10))
                  (list.every? (|>> (its /.#character) /.base_16?) (list ,every_16))))
           )))
