(.module:
  [lux #*
   ["_" test (#+ Test)]
   [abstract
    [monad (#+ do)]]
   [math
    ["." random (#+ Random)]]]
  {1
   ["." /]})

(def: #export (spec (^open "/@.") gen-sample)
  (All [a] (-> (/.Enum a) (Random a) Test))
  (do random.monad
    [sample gen-sample]
    (<| (_.with-cover [/.Enum])
        ($_ _.and
            (_.test "Successor and predecessor are inverse functions."
                    (and (/@= (|> sample /@succ /@pred)
                              sample)
                         (/@= (|> sample /@pred /@succ)
                              sample)
                         (not (/@= (/@succ sample)
                                   sample))
                         (not (/@= (/@pred sample)
                                   sample))))
            ))))
