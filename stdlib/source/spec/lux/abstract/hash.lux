(.module:
  [lux #*
   ["_" test (#+ Test)]
   [abstract
    [monad (#+ do)]]
   [data
    ["." bit ("#\." equivalence)]
    [number
     ["n" nat]]]
   [math
    ["." random (#+ Random)]]]
  {1
   ["." /]})

(def: #export (spec (^open "\.") generator)
  (All [a] (-> (/.Hash a) (Random a) Test))
  (do random.monad
    [parameter generator
     subject generator]
    (_.cover [/.Hash]
             (bit\= (\= parameter subject)
                    (n.= (\hash parameter) (\hash subject))))))
