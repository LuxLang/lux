(.module:
  [lux #*
   ["_" test (#+ Test)]
   [abstract
    [monad (#+ do)]]
   [data
    [number
     ["n" nat]]]
   [math
    ["." random]]]
  [//
   [functor (#+ Injection Comparison)]]
  {1 ["." /]})

(def: #export (spec injection comparison (^open "@//."))
  (All [f] (-> (Injection f) (Comparison f) (/.Fold f) Test))
  (do random.monad
    [subject random.nat
     parameter random.nat]
    (_.cover [/.Fold]
             (n.= (@//fold n.+ parameter (injection subject))
                  (n.+ parameter subject)))))
