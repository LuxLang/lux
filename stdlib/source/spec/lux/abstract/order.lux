(.module:
  [lux #*
   ["_" test (#+ Test)]
   [abstract
    [monad (#+ do)]]
   [math
    ["." random (#+ Random)]]]
  {1
   ["." /]})

(def: #export (spec (^open "@//.") generator)
  (All [a] (-> (/.Order a) (Random a) Test))
  (<| (_.with-cover [/.Order])
      ($_ _.and
          (do random.monad
            [parameter generator
             subject generator]
            (_.test "Values are either ordered, or they are equal. All options are mutually exclusive."
                    (cond (@//< parameter subject)
                          (not (or (@//< subject parameter)
                                   (@//= parameter subject)))

                          (@//< subject parameter)
                          (not (@//= parameter subject))

                          ## else
                          (@//= parameter subject))))
          (do random.monad
            [parameter generator
             subject (random.filter (|>> (@//= parameter) not)
                                    generator)
             extra (random.filter (function (_ value)
                                    (not (or (@//= parameter value)
                                             (@//= subject value))))
                                  generator)]
            (_.test "Transitive property."
                    (if (@//< parameter subject)
                      (let [greater? (and (@//< subject extra)
                                          (@//< parameter extra))
                            lesser? (and (@//< extra parameter)
                                         (@//< extra subject))
                            in-between? (and (@//< parameter extra)
                                             (@//< extra subject))]
                        (or greater?
                            lesser?
                            in-between?))
                      ## (@//< subject parameter)
                      (let [greater? (and (@//< extra subject)
                                          (@//< extra parameter))
                            lesser? (and (@//< parameter extra)
                                         (@//< subject extra))
                            in-between? (and (@//< subject extra)
                                             (@//< extra parameter))]
                        (or greater?
                            lesser?
                            in-between?)))))
          )))
