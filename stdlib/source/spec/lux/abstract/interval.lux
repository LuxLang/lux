(.module:
  [lux #*
   ["_" test (#+ Test)]
   [abstract
    [monad (#+ do)]
    ["." order]]
   [math
    ["." random (#+ Random)]]]
  {1
   ["." /]})

(def: #export (spec (^open "/@.") gen-sample)
  (All [a] (-> (/.Interval a) (Random a) Test))
  (<| (_.with-cover [/.Interval])
      (do random.monad
        [sample gen-sample]
        ($_ _.and
            (_.test "No value is bigger than the top."
                    (/@< /@top sample))
            (_.test "No value is smaller than the bottom."
                    (order.> /@&order /@bottom sample))
            ))))
