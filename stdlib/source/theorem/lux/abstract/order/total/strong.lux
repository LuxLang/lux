... This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
... If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.

(.using
 [library
  [lux (.except)
   ["_" theorem (.only)
    ["?" proposition]
    ["!" proof (.only)
     ["[0]" induction]]
    ["in" substitution]
    ["by" rule]]
   [macro
    ["[0]" template]]
   [abstract
    ["[0]" equality (.only)
     ["//[1]" \\theorem]]]]]
 ["/" \\library])

... https://en.wikipedia.org/wiki/Reflexive_relation#Irreflexive_relation
(template.the .public (axiom_of_anti_reflexivity /:Type /:<)
  [(?.let [it /:Type]
     (?.= (/:< it it)
          .false))])

... https://en.wikipedia.org/wiki/Asymmetric_relation
(template.the .public (axiom_of_asymmetry /:Type /:<)
  [(?.let [this /:Type
           that /:Type]
     (?.if (?.= (/:< this that)
                .true)
           (?.= (/:< that this)
                .false)))])

... https://en.wikipedia.org/wiki/Transitive_relation
(template.the .public (axiom_of_transitivity /:Type /:<)
  [(?.let [this /:Type
           that /:Type
           else /:Type]
     (all ?.if
          (?.= (/:< this else)
               .true)
          (?.= (/:< else that)
               .true)
          (?.= (/:< this that)
               .true)))])

... https://en.wikipedia.org/wiki/Connected_relation
(template.the .public (axiom_of_totality /:Type /:= /:<)
  [(?.let [this /:Type
           that /:Type]
     (all ?.if
          (//equality.system /:Type /:=)
          (?.= (/:= this that)
               .false)
          (?.or (?.= (/:< this that)
                     .true)
                (?.= (/:< that this)
                     .true))))])

... https://en.wikipedia.org/wiki/Total_order
(template.the .public (system /:Type /:= /:<)
  [(all ?.and
        (..axiom_of_anti_reflexivity /:Type /:<)
        (..axiom_of_asymmetry /:Type /:<)
        (..axiom_of_transitivity /:Type /:<)
        (..axiom_of_totality /:Type /:= /:<))])
