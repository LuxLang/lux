... This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
... If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.

(.using
 [library
  [lux (.except by)
   ["_" theorem (.only)
    ["?" proposition]
    ["!" proof]
    ["in" substitution]
    ["by" rule]]
   [macro
    ["[0]" template]]]]
 ["/" \\library])

... https://en.wikipedia.org/wiki/Equality_(mathematics)#Basic_properties
... https://en.wikipedia.org/wiki/Reflexive_relation
(_.the .public reflexivity
  (?.let [any]
    [it any]
    (?.= it it))
  !.qed)

... https://en.wikipedia.org/wiki/Law_of_identity
(the .public law_of_identity
  ..reflexivity)

... https://en.wikipedia.org/wiki/Symmetry#In_logic
(_.the .public symmetry
  (?.let [any]
    [this any
     that any]
    (?.if (?.= this that)
          (?.= that this)))
  (<| !.if (function (_ this_=_that))
      (!.= in.any
           (by.= this_=_that))))

... https://en.wikipedia.org/wiki/Transitive_relation
(_.the .public transitivity
  (?.let [any]
    [reference any
     this any
     that any]
    (all ?.if
         (?.= this reference)
         (?.= that reference)
         (?.= this that)))
  (<| !.if (function (_ this_=_reference))
      !.if (function (_ that_=_reference))
      (!.= (by.= this_=_reference)
           (by.= that_=_reference))))

(_.the .public application
  (?.let [premise conclusion]
    [this premise
     that premise
     abstraction (-> premise conclusion)]
    (?.if (?.= this that)
          (?.= (abstraction this)
               (abstraction that))))
  (<| !.if (function (_ this_=_that))
      (!.= (by.of' in.any (list (by.= this_=_that)))
           in.any)))

... https://en.wikipedia.org/wiki/Reflexive_relation
(template.the .public (axiom_of_reflexivity /:Type /:=)
  [(?.let [it /:Type]
     (?.= (/:= it it)
          .true))])

... https://en.wikipedia.org/wiki/Symmetry#In_logic
(template.the .public (axiom_of_symmetry /:Type /:=)
  [(?.let [this /:Type
           that /:Type]
     (?.= (/:= this that)
          (/:= that this)))])

... https://en.wikipedia.org/wiki/Transitive_relation
(template.the .public (axiom_of_transitivity /:Type /:=)
  [(?.let [reference /:Type
           this /:Type
           that /:Type]
     (all ?.if
          (?.= (/:= reference this)
               .true)
          (?.= (/:= reference that)
               .true)
          (?.= (/:= this that)
               .true)))])

... https://en.wikipedia.org/wiki/Equality_(mathematics)#Basic_properties
(template.the .public (system /:Type /:=)
  [(all ?.and
        (..axiom_of_reflexivity /:Type /:=)
        (..axiom_of_symmetry /:Type /:=)
        (..axiom_of_transitivity /:Type /:=))])
