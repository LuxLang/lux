... This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
... If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.

(.using
 [library
  [lux (.except)
   [abstract
    [monad (.only Monad
                  do)]]
   [control
    ["[0]" maybe]]
   [error
    ["[0]" try]]
   [data
    ["[0]" any]
    ["[0]" bit]
    ["[0]" text]
    [collection
     ["[0]" list]
     ["[0]" sequence]
     ["[0]" array]
     ["[0]" queue]
     ["[0]" set]
     ["[0]" dictionary (.only Dictionary)]
     ["[0]" tree]]]
   [math
    [number
     ["[0]" natural]
     ["[0]" integer]
     ["[0]" revolution]
     ["[0]" decimal]]]
   [type
    ["[0]" poly]
    ["[0]" unit]]
   [time
    ["[0]" duration]
    ["[0]" date]
    ["[0]" instant]
    ["[0]" day]
    ["[0]" month]]]]
 [\\library
  ["[0]" /]])

(the .public equivalence
  (poly.macro
    (` /.Equivalence)
    [poly.#sum (poly.nested (` /.sum))
     poly.#product (poly.nested (` /.product))
     poly.#function poly.not_applicable
     poly.#reification {.#None}
     poly.#recursive (function (_ code ['*self body])
                       (do try.monad
                         ['body (code body)]
                         (in (` (/.recursive
                                 (.function ((,* '*self) (,* '*self))
                                   (, 'body)))))))
     poly.#recursion {.#None}
     poly.#any {.#Some (` any.equivalence)}
     poly.#polymorphic {.#None}
     poly.#parameter {.#None}
     poly.#specializations (list [Bit (` bit.equivalence)]
                                 [Natural (` natural.equivalence)]
                                 [Integer (` integer.equivalence)]
                                 [Revolution (` revolution.equivalence)]
                                 [Decimal (` decimal.equivalence)]
                                 [Text (` text.equivalence)]
                                 [duration.Duration (` duration.equivalence)]
                                 [instant.Instant (` instant.equivalence)]
                                 [date.Date (` date.equivalence)]
                                 [day.Day (` day.equivalence)]
                                 [month.Month (` month.equivalence)]

                                 [.Maybe (` maybe.equivalence)]
                                 [.List (` list.equivalence)]
                                 [sequence.Sequence (` sequence.equivalence)]
                                 [array.Array (` array.equivalence)]
                                 [queue.Queue (` queue.equivalence)]
                                 [set.Set (` set.equivalence)]
                                 [tree.Tree (` tree.equivalence)]
                                 [(type (dictionary.Dictionary Any)) (` dictionary.equivalence)]
                                 [(type (unit.Measure Any)) (` unit.equivalence)])]))
