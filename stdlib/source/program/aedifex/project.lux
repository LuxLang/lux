(.module:
  [lux (#- Info Source Module)
   [data
    ["." text]
    [collection
     ["." dictionary (#+ Dictionary)]]]
   [world
    [net (#+ URL)]
    [file (#+ Path)]]
   [tool
    [compiler
     [meta
      [archive
       [descriptor (#+ Module)]]]]]]
  [//
   [artifact (#+ Artifact)]
   ["." dependency]])

(def: #export file
  "project.lux")

(type: #export Distribution
  #Repo
  #Manual)

(type: #export License
  [Text
   URL
   Distribution])

(type: #export SCM
  URL)

(type: #export Organization
  [Text
   URL])

(type: #export Email
  Text)

(type: #export Developer
  [Text
   Email
   (Maybe Organization)])

(type: #export Contributor
  Developer)

(type: #export Info
  {#url (Maybe URL)
   #scm (Maybe SCM)
   #description (Maybe Text)
   #licenses (List License)
   #organization (Maybe Organization)
   #developers (List Developer)
   #contributors (List Contributor)})

(type: #export Source
  Path)

(type: #export Project
  {#identity Artifact
   #info Info
   #repositories (List dependency.Repository)
   #dependencies (List dependency.Dependency)
   #sources (List Source)
   #target Path
   #program (Maybe Module)
   #test (Maybe Module)
   #deploy-repositories (Dictionary Text dependency.Repository)})
