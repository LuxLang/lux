(.module:
  [lux #*
   [abstract
    [monad (#+ do)]]
   [control
    [pipe (#+ do>)]
    ["." try (#+ Try)]
    [concurrency
     ["." promise (#+ Promise) ("#\." monad)]]
    ["<>" parser
     ["<.>" xml]]]
   [data
    [binary (#+ Binary)]
    [text
     ["%" format (#+ format)]
     ["." encoding]]
    [collection
     ["." set]]
    [format
     ["." binary]
     ["." tar]
     ["." xml]]]
   [time
    ["." instant (#+ Instant)]]
   [world
    ["." file]
    ["." console (#+ Console)]]]
  [program
   [compositor
    ["." export]]]
  ["." // #_
   ["#." clean]
   ["/#" // #_
    [command (#+ Command)]
    ["/" profile]
    ["#." action (#+ Action)]
    ["#." pom]
    ["#." hash]
    ["#." package]
    ["#." dependency
     ["#/." deployment]
     ["#/." status (#+ Status)]]
    ["#." repository (#+ Repository)
     [identity (#+ Identity)]
     ["#/." remote]
     ["#/." origin]]
    ["#." metadata
     ["#/." artifact]
     ["#/." snapshot]]
    ["#." artifact (#+ Artifact)
     ["#/." extension (#+ Extension)]
     ["#/." type]]]])

(def: #export (do! console repository fs artifact profile)
  (-> (Console Promise) (Repository Promise) (file.System Promise) Artifact (Command Any))
  (do {! ///action.monad}
    [library (|> profile
                 (get@ #/.sources)
                 set.to_list
                 (export.library fs)
                 (\ ! map (binary.run tar.writer)))
     pom (\ promise.monad wrap (///pom.write profile))
     _ (///dependency/deployment.one
        repository
        [artifact ///artifact/type.lux_library]
        (let [pom_data (|> pom
                           (\ xml.codec encode)
                           (\ encoding.utf8 encode))]
          {#///package.origin (#///repository/origin.Remote "")
           #///package.library [library
                                (///dependency/status.verified library)]
           #///package.pom [pom
                            pom_data
                            (///dependency/status.verified pom_data)]}))]
    (console.write_line //clean.success console)))
