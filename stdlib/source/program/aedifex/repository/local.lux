... This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
... If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.

(.using
 [library
  [lux (.except)
   [abstract
    [monad (.only do)]]
   [concurrency
    ["[0]" future (.only Future)]]
   [control
    ["[0]" try (.only Try)]]
   [data
    ["[0]" text (.only)
     ["%" \\injection]]]
   [world
    [environment (.only Environment)]
    ["[0]" file]
    [net
     [uri (.only URI)
      ["[0]" path]]]]]]
 ["[0]" // (.only)
  ["/[1]" //
   ["[1][0]" local]
   ["[1][0]" metadata]]])

(the .public (root environment fs)
  (-> (Environment Future) (file.System Future) file.Path)
  (let [/ (by fs delimiter)]
    (|> ///local.repository
        (text.replaced path.delimiter /)
        (%.message (by environment home) /))))

(the (path /)
  (-> Text (-> URI file.Path))
  (text.replaced path.delimiter /))

(the (absolute_path environment fs)
  (-> (Environment Future) (file.System Future) (-> URI file.Path))
  (let [/ (by fs delimiter)]
    (|>> ///metadata.local_uri
         (..path /)
         (%.message (..root environment fs) /))))

(the .public (repository environment fs)
  (-> (Environment Future) (file.System Future) (//.Repository Future))
  (implementation
   (the description
     (..root environment fs))

   (the download
     (|>> (..absolute_path environment fs)
          (by fs read)))

   (the (upload uri content)
     (do [! future.monad]
       [.let [absolute_path (..absolute_path environment fs uri)]
        ? (by fs file? absolute_path)
        _ (is (Future (Try Any))
              (if ?
                (in {try.#Success []})
                (when (file.parent fs absolute_path)
                  {.#Some parent}
                  (file.make_directories future.monad fs parent)

                  _
                  (in {try.#Success []}))))]
       (by fs write absolute_path content)))))
