(.module:
  [lux (#- Type)
   [abstract
    [equivalence (#+ Equivalence)]
    [order (#+ Order)]
    [hash (#+ Hash)]]
   [data
    ["." product]
    ["." text ("#\." order)
     ["%" format (#+ format)]]]]
  ["." // #_
   ["#" artifact (#+ Artifact) ("#\." order)
    [type (#+ Type)]]])

(type: #export Dependency
  {#artifact Artifact
   #type Type})

(def: #export hash
  (Hash Dependency)
  ($_ product.hash
      //.hash
      text.hash
      ))

(def: #export equivalence
  (Equivalence Dependency)
  (\ hash &equivalence))

(implementation: #export order
  (Order Dependency)

  (def: &equivalence
    ..equivalence)

  (def: (< reference subject)
    (<| (or (//\< (get@ #artifact reference)
                  (get@ #artifact subject)))
        
        (and (//\= (get@ #artifact reference)
                   (get@ #artifact subject)))
        (text\< (get@ #type reference)
                (get@ #type subject)))))
