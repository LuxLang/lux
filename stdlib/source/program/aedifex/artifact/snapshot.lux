... This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
... If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.

(.using
 [library
  [lux (.except Type
                #Local)
   [abstract
    [equivalence (.only Equivalence)]
    [monad (.only do)]
    ["<>" projection]]
   [data
    ["[0]" sum]
    ["[0]" text
     ["<[1]>" \\projection]]
    [format
     ["[0]" xml (.only XML)
      ["<[1]>" \\projection (.only Projection)]]]]
   [macro
    ["[0]" template]]]]
 ["[0]" /
  ["[1][0]" stamp (.only Stamp)]])

(every .public Snapshot
  (Variant
   {#Local}
   {#Remote Stamp}))

(the any_equivalence
  (Equivalence Any)
  (implementation
   (the (= _ _)
     true)))

(the .public equivalence
  (Equivalence Snapshot)
  (all sum.equivalence
       ..any_equivalence
       /stamp.equivalence
       ))

(alias [=]
       ..equivalence)

(template.with [<definition> <tag>]
  [(the <definition> xml.Tag ["" <tag>])]

  [[<local_copy> "localCopy"]
   [<snapshot> "snapshot"]])

(the local_copy_value
  "true")

(the local_copy_xml
  XML
  {xml.#Node <local_copy>
             xml.attributes
             (list {xml.#Text ..local_copy_value})})

(the local_copy_of
  (Projection Any)
  (<| (<xml>.node ..<local_copy>)
      (<text>.then (<text>.this ..local_copy_value))
      <xml>.text))

(the .public (as_xml snapshot)
  (-> Snapshot
      XML)
  (<| {xml.#Node ..<snapshot> xml.attributes}
      (when snapshot
        {#Local}
        (list ..local_copy_xml)
        
        {#Remote stamp}
        (/stamp.as_xml stamp))))

(the .public of_xml
  (Projection Snapshot)
  (<| (<xml>.node <snapshot>)
      (<>.or ..local_copy_of
             /stamp.of_xml)))
