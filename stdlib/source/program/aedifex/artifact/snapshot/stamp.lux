(.module:
  [library
   [lux #*
    [abstract
     [equivalence (#+ Equivalence)]
     [monad (#+ do)]]
    [control
     ["<>" parser
      ["<.>" xml (#+ Parser)]
      ["<.>" text]]]
    [data
     ["." product]
     [format
      ["." xml (#+ XML)]]]]]
  ["." // #_
   ["#." time (#+ Time)]
   ["#." build (#+ Build)]])

(type: #export Stamp
  {#time Time
   #build Build})

(def: #export equivalence
  (Equivalence Stamp)
  ($_ product.equivalence
      //time.equivalence
      //build.equivalence
      ))

(def: <timestamp>
  xml.Tag
  ["" "timestamp"])

(def: time_format
  (-> Time XML)
  (|>> //time.format
       #xml.Text
       list
       (#xml.Node ..<timestamp> xml.attributes)))

(def: #export (format (^slots [#time #build]))
  (-> Stamp (List XML))
  (list (..time_format time)
        (//build.format build)))

(def: time_parser
  (Parser Time)
  (<| (<xml>.node <timestamp>)
      (<text>.embed //time.parser)
      <xml>.text))

(def: #export parser
  (Parser Stamp)
  (<>.and (<xml>.somewhere ..time_parser)
          (<xml>.somewhere //build.parser)))
