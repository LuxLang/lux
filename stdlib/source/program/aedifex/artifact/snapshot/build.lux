(.module:
  [library
   [lux #*
    [abstract
     [equivalence (#+ Equivalence)]
     [monad (#+ do)]]
    [control
     ["<>" parser
      ["<.>" xml (#+ Parser)]
      ["<.>" text]]]
    [data
     [text
      ["%" format]]
     [format
      ["." xml (#+ XML)]]]
    [math
     [number
      ["." nat]]]]])

(type: .public Build
  Nat)

(def: .public equivalence
  (Equivalence Build)
  nat.equivalence)

(def: tag
  xml.Tag
  ["" "buildNumber"])

(def: .public format
  (-> Build XML)
  (|>> %.nat
       #xml.Text
       list
       (#xml.Node ..tag xml.attributes)))

(def: .public parser
  (Parser Build)
  (<| (<xml>.node ..tag)
      (<text>.then (<>.codec nat.decimal (<text>.many <text>.decimal)))
      <xml>.text))
