... This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
... If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.

(.require
 [library
  [lux (.except)
   [abstract
    [equivalence (.only Equivalence)]
    [monad (.only do)]]
   [control
    ["<>" projection (.only)]
    ["[0]" try (.only Try)]]
   [data
    ["[0]" product]
    ["[0]" text
     ["%" \\injection (.only Injection)]
     ["<[1]>" \\projection (.only Projection)]]]
   [world
    ["[0]" time (.only)
     ["[0]" instant (.only Instant)]]]]]
 ["[0]" /
  ["[1][0]" date]
  ["[1][0]" time]])

(every .public Time
  [/date.Date /time.Time])

(the .public epoch
  Time
  [/date.epoch time.midnight])

(the .public (instant time)
  (-> Time Instant)
  (let [[date time] time]
    (instant.of_date_time (/date.value date)
                          time)))

(the .public (of_instant instant)
  (-> Instant (Try Time))
  (do try.monad
    [date (/date.date (instant.date instant))]
    (in [date
         (instant.time instant)])))

(the .public equivalence
  (Equivalence Time)
  (product.equivalence /date.equivalence
                       time.equivalence))

(the .public (format [date time])
  (Injection Time)
  (%.format (/date.format date)
            (/time.format time)))

(the .public projection
  (Projection Time)
  (do <>.monad
    [date /date.projection
     time /time.projection]
    (in [date time])))
