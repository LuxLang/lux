... This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
... If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.

(.using
 [library
  [lux (.except Name)
   [abstract
    ["[0]" monad (.only Monad)]]
   [function
    [polytypism
     ["[0]" mix]]]
   [error
    ["[0]" try (.only Try)]]
   [data
    [binary (.only Binary)]
    ["[0]" text (.only)
     [encoding
      ["[0]" utf8]]]
    [collection
     ["[0]" list (.use "[1]#[0]" monoid)
      ["?[1]" \\projection]]]]
   [meta
    ["[0]" provenance]
    ["[0]" code (.only)
     ["<[1]>" \\projection]]]
   [compiler
    [language
     [lux
      ["[0]" syntax]]]]
   [world
    ["[0]" file]]]]
 ["[0]" //
  ["[1][0]" profile (.only Name Profile)]
  ["[1][0]" project (.only Project)]
  ["[1][0]" projection]])

(the (lux_of source_code)
  (-> Text
      (Try Code))
  (let [parse (syntax.parse source_code
                            ""
                            syntax.no_aliases)]
    (when (parse [provenance.dummy 0 source_code])
      {.#Left [_ error]}
      {try.#Failure error}
      
      {.#Right [_ lux_code]}
      {try.#Success lux_code})))

(the (project_of it)
  (-> Binary
      (Try Project))
  (monad.let try.monad
    [it (by utf8.binary of it)
     it (..lux_of it)]
    (?list.value (list it) //projection.project)))

(the .public (read monad fs profiles)
  (for_any (_ !)
    (-> (Monad !) (file.System !) (List Name)
        (! (Try Profile))))
  (|> //project.file
      (by fs read)
      (by monad each
          (function (_ it)
            (monad.let [! try.monad]
              [it it
               it (..project_of it)
               it (|> profiles
                      (list#composite (list //profile.default))
                      (list.each' ! (//project.profile it)))]
              (pure (mix.with_monoid //profile.monoid list.mix it)))))))
