... This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
... If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.

(.using
 [library
  [lux (.except)
   [abstract
    [monoid (.only Monoid)]
    [functor
     ["[0]" pro]]]]])

(the .public identity
  (for_any (_ it)
    (-> it
        it))
  (|>>))

(the .public (composite f g)
  (for_any (_ a b c)
    (-> (-> b c) (-> a b) (-> a c)))
  (|>> g f))

(the .public monoid
  (for_any (_ it)
    (Monoid (-> it it)))
  (implementation
   (the identity ..identity)
   (the composite ..composite)))

(the .public (constant value)
  (for_any (_ o) (-> o (for_any (_ i) (-> i o))))
  (function (_ _) value))

(the .public (flipped f)
  (for_any (_ a b c)
    (-> (-> a b c)
        (-> b a c)))
  (function (_ x y) (f y x)))

(the .public (of argument it)
  (for_any (_ i o)
    (-> i (-> i o) o))
  (it argument))

(every .public (Function cause effect)
  (-> cause
      effect))

(the .public functor
  (pro.Functor Function)
  (implementation
   (the (each before after it)
     (|>> before it after))))

(the .public cartesian
  (pro.Cartesian Function)
  (implementation
   (the (in_left it)
     (function (_ [cause extra])
       [(it cause) extra]))
   (the (in_right it)
     (function (_ [extra cause])
       [extra (it cause)]))))

(the .public co_cartesian
  (pro.Co_Cartesian Function)
  (implementation
   (the (when_left it left|right)
     (when left|right
       {0b left} {0b (it left)}
       {1b right} {1b right}))
   (the (when_right it left|right)
     (when left|right
       {0b left} {0b left}
       {1b right} {1b (it right)}))))

(the .public monoidal
  (pro.Monoidal Function)
  (implementation
   (the (in_parallel on_left on_right [left right])
     [(on_left left)
      (on_right right)])
   (the empty
     ..identity)))
