... This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
... If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.

(.using
 [library
  [lux (.except)
   ["[0]" function (.only)
    [predicate (.only Predicate)]]
   [math
    ["[0]" random (.only Random)]
    [number
     [/64
      ["/" decimal]
      ["[0]" integer]]]]
   [abstract
    [equivalence (.only Equivalence)]]]])

... https://en.wikipedia.org/wiki/Dimension
(every .public Dimension
  Decimal)

... https://en.wikipedia.org/wiki/Euclidean_vector
(every .public Vector
  Dimension)

(the .public =
  (-> Vector
      (Predicate Vector))
  /.=)

(the .public equivalence
  (Equivalence Vector)
  /.equivalence)

(the .public +
  (-> Vector
      (Change Vector))
  /.+)

(the .public -
  (-> Vector
      (Change Vector))
  /.-)

... https://en.wikipedia.org/wiki/Origin_(mathematics)
(the .public origin
  Vector
  /.zero)

(the .public opposite
  (.Change Vector)
  /.opposite)

(the .public forward
  Vector
  /.positive)

(the .public backward
  Vector
  (opposite forward))

... https://en.wikipedia.org/wiki/Position_(geometry)
(every .public Position
  Vector)

... https://en.wikipedia.org/wiki/Time
(every .public Time
  Vector)

... https://en.wikipedia.org/wiki/Constant_(mathematics)
(every .public (Constant dimension)
  dimension)

... https://en.wikipedia.org/wiki/Variable_(mathematics)
(every .public (Variable dimension)
  (-> Time
      (Constant dimension)))

... https://en.wikipedia.org/wiki/Subtraction#Notation_and_terminology
(every .public (Difference it)
  (-> it
      it))

(the .public stasis
  Difference
  function.identity)

(the .public (difference initial final)
  (-> Vector Vector
      (Difference Vector))
  (/.+ (/.- initial final)))

(the .public value
  (-> (Difference Vector)
      Vector)
  (function.of ..origin))

(every .public Interval
  (Difference Time))

(the .public interval
  ..difference)

... https://en.wikipedia.org/wiki/Displacement_(geometry)
(every .public Displacement
  (Difference Position))

(the .public displacement
  ..difference)

(the .public (random range)
  (-> Natural
      (Random Vector))
  (with random.monad
    (|> random.integer
        (each (|>> (integer.% (.integer range))
                   integer.decimal)))))

... https://en.wikipedia.org/wiki/Velocity
(every .public Velocity
  Vector)

... https://en.wikipedia.org/wiki/Inertia
(the .public rest
  Velocity
  /.zero)

(the .public (average_velocity interval displacement)
  (-> Interval Displacement
      Velocity)
  (/./ (value interval)
       (value displacement)))

... https://en.wikipedia.org/wiki/Acceleration
(every .public Acceleration
  Vector)

... https://en.wikipedia.org/wiki/Newton%27s_laws_of_motion#First_law
(the .public uniform_motion
  Acceleration
  /.zero)

(the .public (average_acceleration interval difference_in_velocity)
  (-> Interval (Difference Velocity)
      Acceleration)
  (/./ (value interval)
       (value difference_in_velocity)))

(the .public (velocity acceleration initial)
  (-> Acceleration Velocity
      (Variable Velocity))
  (|>> (/.x acceleration)
       (/.+ initial)))

... https://en.wikipedia.org/wiki/Center_of_mass#Barycentric_coordinates
(the (center_of_mass left right)
  (-> Vector Vector
      Vector)
  (/./ +2.0
       (/.+ left right)))

(the .public (position acceleration initial_velocity initial)
  (-> Acceleration Velocity Position
      (Variable Position))
  (function (_ time)
    (let [velocity (center_of_mass initial_velocity
                                   (..velocity acceleration initial_velocity time))]
      (|> time
          (/.x velocity)
          (/.+ initial)))))
