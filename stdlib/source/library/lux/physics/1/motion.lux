... This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
... If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.

(.using
 [library
  [lux (.except)
   [math
    [number
     [/64
      ["[0]" decimal]]]]]]
 ["[0]" //])

... https://en.wikipedia.org/wiki/Motion
(every .public (Motion dimension)
  (-> //.Time
      dimension))

... https://en.wikipedia.org/wiki/Velocity
(every .public Velocity
  //.Vector)

... https://en.wikipedia.org/wiki/Inertia
(the .public rest
  Velocity
  decimal.zero)

(the .public (average_velocity interval displacement)
  (-> //.Interval //.Displacement
      Velocity)
  (decimal./ (//.value interval)
             (//.value displacement)))

... https://en.wikipedia.org/wiki/Acceleration
(every .public Acceleration
  //.Vector)

... https://en.wikipedia.org/wiki/Newton%27s_laws_of_motion#First_law
(the .public uniform
  Acceleration
  decimal.zero)

(the .public (average_acceleration interval difference_in_velocity)
  (-> //.Interval (//.Difference Velocity)
      Acceleration)
  (decimal./ (//.value interval)
             (//.value difference_in_velocity)))

(the .public (velocity acceleration initial)
  (-> Acceleration Velocity
      (Motion Velocity))
  (|>> (decimal.x acceleration)
       (decimal.+ initial)))

(the .public (average left right)
  (-> //.Vector //.Vector
      //.Vector)
  (decimal./ +2.0
             (decimal.+ left right)))

(the .public (position acceleration initial_velocity initial)
  (-> Acceleration Velocity //.Position
      (Motion //.Position))
  (function (_ time)
    (let [velocity (average initial_velocity
                            (..velocity acceleration initial_velocity time))]
      (|> time
          (decimal.x velocity)
          (decimal.+ initial)))))
