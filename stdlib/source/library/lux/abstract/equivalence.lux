(.module:
  [library
   [lux #*]]
  [//
   [functor
    ["." contravariant]]])

(interface: .public (Equivalence a)
  (: (-> a a Bit)
     =))

(def: .public (rec sub)
  (All [a] (-> (-> (Equivalence a) (Equivalence a)) (Equivalence a)))
  (implementation
   (def: (= left right)
     (sub = left right))))

(implementation: .public functor
  (contravariant.Functor Equivalence)
  
  (def: (map f equivalence)
    (implementation
     (def: (= reference sample)
       (\ equivalence = (f reference) (f sample))))))
