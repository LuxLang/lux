(.using
 [library
  [lux "*"]]
 [//
  [functor
   ["[0]" contravariant]]])

(type: .public (Equivalence a)
  (Interface
   (is (-> a a Bit)
       =)))

(def: .public (rec sub)
  (All (_ a)
    (-> (-> (Equivalence a) (Equivalence a)) (Equivalence a)))
  (implementation
   (def: (= left right)
     (sub = left right))))

(implementation: .public functor
  (contravariant.Functor Equivalence)
  
  (def: (each f equivalence)
    (implementation
     (def: (= reference sample)
       (# equivalence = (f reference) (f sample))))))
