(.module:
  [library
   [lux #*]])

(interface: .public (Monoid a)
  (: a
     identity)
  (: (-> a a a)
     compose))

(def: .public (composite left right)
  (All [l r] (-> (Monoid l) (Monoid r) (Monoid [l r])))
  (implementation
   (def: identity
     [(\ left identity) (\ right identity)])
   
   (def: (compose [lL rL] [lR rR])
     [(\ left compose lL lR)
      (\ right compose rL rR)])))
