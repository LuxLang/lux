(.using
 [library
  [lux "*"]]
 [//
  ["[0]" equivalence {"+" Equivalence}]
  [functor
   ["[0]" contravariant]]])

(type: .public (Hash a)
  (Interface
   (is (Equivalence a)
       &equivalence)
   (is (-> a Nat)
       hash)))

(implementation: .public functor
  (contravariant.Functor Hash)
  
  (def: (each f super)
    (implementation
     (def: &equivalence
       (# equivalence.functor each f
          (# super &equivalence)))
     
     (def: hash
       (|>> f (# super hash))))))
