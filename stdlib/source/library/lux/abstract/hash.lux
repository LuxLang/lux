(.module:
  [library
   [lux #*]]
  [//
   ["." equivalence (#+ Equivalence)]
   [functor
    ["." contravariant]]])

(interface: .public (Hash a)
  (: (Equivalence a)
     &equivalence)
  (: (-> a Nat)
     hash))

(implementation: .public functor
  (contravariant.Functor Hash)
  
  (def: (each f super)
    (implementation
     (def: &equivalence
       (\ equivalence.functor each f
          (\ super &equivalence)))
     
     (def: hash
       (|>> f (\ super hash))))))
