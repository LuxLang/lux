(.using
 [library
  [lux (.except)]]
 [//
  ["[0]" equivalence (.only Equivalence)]
  [functor
   ["[0]" contravariant]]])

(type: .public (Hash a)
  (Interface
   (is (Equivalence a)
       equivalence)
   (is (-> a Nat)
       hash)))

(def .public functor
  (contravariant.Functor Hash)
  (implementation
   (def (each f super)
     (implementation
      (def equivalence
        (at equivalence.functor each f
            (at super equivalence)))
      
      (def hash
        (|>> f (at super hash)))))))
