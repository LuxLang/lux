(.using
 [library
  [lux "*"]]
 [//
  ["[0]" order {"+" Order}]])

(type: .public (Enum e)
  (Interface
   (is (Order e) &order)
   (is (-> e e) succ)
   (is (-> e e) pred)))

(def: .public (range enum from to)
  (All (_ a) (-> (Enum a) a a (List a)))
  (let [(open "/#[0]") enum]
    (loop [end to
           output (`` (is (List (~~ (type_of from)))
                          {.#End}))]
      (cond (/#< end from)
            (again (/#pred end) {.#Item end output})

            (/#< from end)
            (again (/#succ end) {.#Item end output})

            ... (= end from)
            {.#Item end output}))))
