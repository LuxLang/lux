(.module:
  [library
   [lux #*]]
  [//
   ["." order (#+ Order)]])

(interface: .public (Enum e)
  (: (Order e) &order)
  (: (-> e e) succ)
  (: (-> e e) pred))

(def: .public (range enum from to)
  (All [a] (-> (Enum a) a a (List a)))
  (let [(^open "/\.") enum]
    (loop [end to
           output #.End]
      (cond (/\< end from)
            (recur (/\pred end) (#.Item end output))

            (/\< from end)
            (recur (/\succ end) (#.Item end output))

            ... (/\= end from)
            (#.Item end output)))))
