(.module:
  [library
   [lux "*"]]
  [//
   ["[0]" order {"+" Order}]])

(type: .public (Enum e)
  (Interface
   (: (Order e) &order)
   (: (-> e e) succ)
   (: (-> e e) pred)))

(def: .public (range enum from to)
  (All (_ a) (-> (Enum a) a a (List a)))
  (let [(^open "[0]") enum]
    (loop [end to
           output {.#End}]
      (cond (< end from)
            (again (pred end) {.#Item end output})

            (< from end)
            (again (succ end) {.#Item end output})

            ... (= end from)
            {.#Item end output}))))
