... This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
... If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.

(.require
 [library
  [lux (.except Or And
                left right)]])

(every .public (Functor !)
  (Interface
   (is (All (_ input output)
         (-> (-> input output)
             (-> (! input) (! output))))
       each)))

(every .public (Or left right)
  (All (_ of)
    (.Or (left of)
         (right of))))

(the .public (sum (open "left#[0]") (open "right#[0]"))
  (All (_ left right)
    (-> (Functor left) (Functor right)
        (Functor (..Or left right))))
  (implementation
   (the (each f fa|ga)
     (when fa|ga
       {.#Left fa}
       {.#Left (left#each f fa)}
       
       {.#Right ga}
       {.#Right (right#each f ga)}))))

(every .public (And left right)
  (All (_ of)
    (.And (left of)
          (right of))))

(the .public (product (open "left#[0]") (open "right#[0]"))
  (All (_ left right)
    (-> (Functor left) (Functor right)
        (Functor (..And left right))))
  (implementation
   (the (each f [fa ga])
     [(left#each f fa)
      (right#each f ga)])))

(every .public (Then outer inner)
  (All (_ of)
    (outer (inner of))))

(the .public (composite (open "outer#[0]") (open "inner#[0]"))
  (All (_ outer inner)
    (-> (Functor outer) (Functor inner)
        (Functor (Then outer inner))))
  (implementation
   (the (each f fga)
     (outer#each (inner#each f) fga))))
