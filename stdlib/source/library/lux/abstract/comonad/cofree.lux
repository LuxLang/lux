(.using
 [library
  [lux "*"]]
 [// {"+" CoMonad}
  [//
   [functor {"+" Functor}]]])

(type: .public (CoFree F a)
  [a (F (CoFree F a))])

(implementation: .public (functor dsl)
  (All (_ F) (-> (Functor F) (Functor (CoFree F))))
  
  (def: (each f [head tail])
    [(f head) (# dsl each (each f) tail)]))

(implementation: .public (comonad dsl)
  (All (_ F) (-> (Functor F) (CoMonad (CoFree F))))

  (def: functor (..functor dsl))

  (def: (out [head tail])
    head)

  (def: (disjoint [head tail])
    [[head tail]
     (# dsl each disjoint tail)]))
