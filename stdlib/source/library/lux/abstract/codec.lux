(.module:
  [library
   [lux #*
    [control
     ["." try (#+ Try)]]]]
  [//
   [monad (#+ do)]
   ["." functor]])

(interface: .public (Codec m a)
  (: (-> a m)
     encoded)
  (: (-> m (Try a))
     decoded))

(implementation: .public (composite cb_codec ba_codec)
  (All [a b c]
    (-> (Codec c b) (Codec b a)
        (Codec c a)))
  (def: encoded
    (|>> (\ ba_codec encoded)
         (\ cb_codec encoded)))

  (def: (decoded cy)
    (do try.monad
      [by (\ cb_codec decoded cy)]
      (\ ba_codec decoded by))))
