(.using
 [library
  [lux (.except)
   [control
    ["[0]" try (.only Try)]]]]
 [//
  [monad (.only do)]
  ["[0]" functor]])

(type: .public (Codec m a)
  (Interface
   (is (-> a m)
       encoded)
   (is (-> m (Try a))
       decoded)))

(implementation: .public (composite cb_codec ba_codec)
  (All (_ a b c)
    (-> (Codec c b) (Codec b a)
        (Codec c a)))
  (def: encoded
    (|>> (at ba_codec encoded)
         (at cb_codec encoded)))

  (def: (decoded cy)
    (do try.monad
      [by (at cb_codec decoded cy)]
      (at ba_codec decoded by))))
