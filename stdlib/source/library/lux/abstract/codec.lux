(.using
 [library
  [lux "*"
   [control
    ["[0]" try {"+" Try}]]]]
 [//
  [monad {"+" do}]
  ["[0]" functor]])

(type: .public (Codec m a)
  (Interface
   (is (-> a m)
       encoded)
   (is (-> m (Try a))
       decoded)))

(implementation: .public (composite cb_codec ba_codec)
  (All (_ a b c)
    (-> (Codec c b) (Codec b a)
        (Codec c a)))
  (def: encoded
    (|>> (# ba_codec encoded)
         (# cb_codec encoded)))

  (def: (decoded cy)
    (do try.monad
      [by (# cb_codec decoded cy)]
      (# ba_codec decoded by))))
