(.using
 [library
  [lux {"-" i64}
   [abstract
    [equivalence (.only Equivalence)]]
   [control
    ["[0]" maybe]]
   [type (.only by_example)]]]
 [//
  ["[0]" i64 (.only Sub)]])

(def: sub
  (maybe.trusted (i64.sub 16)))

(def: .public I16
  Type
  ... TODO: Switch to the cleaner approach ASAP.
  (case (type_of ..sub)
    {.#Apply :size: :sub:}
    (type (I64 :size:))

    _
    (undefined))
  ... (by_example [size]
  ...              (Sub size)
  ...              ..sub
  
  ...              (I64 size))
  )

(def: .public equivalence (Equivalence I16) (# ..sub sub_equivalence))
(def: .public width Nat (# ..sub bits))
(def: .public i16 (-> I64 I16) (# ..sub narrow))
(def: .public i64 (-> I16 I64) (# ..sub wide))
