... This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
... If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.

(.using
 [library
  [lux (.except Natural as)
   [abstract
    ["[0]" equivalence (.only Equivalence)]
    ["[0]" hash (.only Hash)]
    ["[0]" order (.only Order)]]
   [data
    ["[0]" binary
     ["[1]" \\injection]]]
   [math
    ["[0]" random (.only Random) (.use "[1]#[0]" functor)]]
   [type
    ["[0]" nominal]]]]
 ["[0]" // (.only)
  ["[0]" /16]
  [//
   ["[0]" i64]]])

(nominal.every .public Natural
  .Natural

  (the It ..Natural)

  (the .public as
    (-> It
        .Natural)
    (|>> nominal.representation))

  (the .public hash
    (Hash It)
    (by hash.functor each ..as //.hash))

  (the .public order
    (Order It)
    (by order.functor each ..as //.order))

  (order.definitions [] It ..order)

  (the .public equivalence
    (Equivalence It)
    (by ..order equivalence))

  (alias [=]
         ..equivalence)

  (the .public size (//.+ /16.size /16.size))

  (the .public maximum
    It
    (|> ..size
        (//.* i64.bits_per_byte)
        i64.mask
        nominal.abstraction))

  (the .public of
    (-> .Natural
        It)
    (|>> (i64.and (nominal.representation ..maximum))
         nominal.abstraction))

  (the .public (+ parameter it)
    (-> It It
        It)
    (|> (//.+ (nominal.representation parameter)
              (nominal.representation it))
        (i64.and (nominal.representation ..maximum))
        nominal.abstraction))

  (the .public (- parameter it)
    (-> It It
        It)
    (|> (//.- (nominal.representation parameter)
              (nominal.representation it))
        (i64.and (nominal.representation ..maximum))
        nominal.abstraction))

  (the .public as_binary
    (binary.Injection It)
    (|>> nominal.representation
         binary.bits_32))
  )

(the .public random
  (Random It)
  (random#each ..of random.natural))
