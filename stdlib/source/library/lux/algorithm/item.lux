... This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
... If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.

(.using
 [library
  [lux (.except)
   [control
    [error (.only error)]
    ["[0]" try (.only Try)]
    [function
     [predicate (.only Predicate)]]]
   [data
    ["[0]" product]]
   [math
    [number
     ["[0]" natural (.use "[1]#[0]" base_10)]]]]]
 ["[0]" //])

(the Index
  Natural)

(the chosen
  Index
  0)

... https://en.wikipedia.org/wiki/Algorithm
(every .public (Algorithm ! of)
  (-> Index (! of)
      (Try of)))

(the .public invalid
  (error "Invalid."))

(the .public (constant index _)
  (for_any (_ it)
    (Algorithm (//.Constant it)))
  {try.#Failure ..invalid})

(the .public (variable index it)
  (Algorithm //.Variable)
  (when index
    ..chosen
    {try.#Success it}
    
    un_chosen!
    {try.#Failure ..invalid}))

(the .public (recursive it)
  (for_any (_ of)
    (-> (-> (Algorithm of)
            (Algorithm of))
        (Algorithm of)))
  (function (recursion value)
    (it recursion value)))

(the .public (sum left right
                  index it)
  (for_any (_ left right)
    (-> (Algorithm left) (Algorithm right)
        (Algorithm (//.Sum left right))))
  (when it
    {#0 it} (left index it)
    {#1 it} (right index it)))

(the .public (product left right
                      index it)
  (for_any (_ left right)
    (-> (Algorithm left) (Algorithm right)
        (Algorithm (//.Product left right))))
  (try.or (left index (product.left it))
          (right (-- index) (product.right it))))
