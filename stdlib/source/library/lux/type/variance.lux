(.using
 [library
  [lux (.full)
   [meta
    ["[0]" symbol]]]])

(type: .public (Co it)
  (-> Any it))

(type: .public (Contra it)
  (-> it Any))

(type: .public (In it)
  (-> it it))

(type: .public (Mutable r w)
  (Primitive "#Mutable" [(-> w r)]))

(template [<name> <type>]
  [(template: .public (<name> it)
     [((.is (.All (_ r w) <type>)
            (.|>> .as_expected))
       it)])]

  [read (.-> (..Mutable r w) r)]
  [write (.-> w (..Mutable r w))]
  )

(type: .public (Read_Only a)
  (Mutable a Nothing))

(type: .public (Write_Only a)
  (Mutable Any a))

(template [<name> <type>]
  [(template: .public (<name> it)
     [((.is (.All (_ r w) <type>)
            (.|>>))
       it)])]

  [read_only (.-> (..Mutable r w) (..Read_Only r))]
  [write_only (.-> (..Mutable r w) (..Write_Only w))]
  )
