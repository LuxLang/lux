... This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
... If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.

(.using
 [library
  [lux (.except)
   [error (.only error)]
   [abstract
    [monad (.only do)]
    ["?" projection]]
   [data
    ["[0]" product]
    [collection
     ["[0]" list (.only)
      ["?[1]" \\projection]]]]
   [macro
    ["[0]" syntax]]
   ["[0]" meta (.use "[1]#[0]" functor)
    ["[0]" binding]
    ["[0]" code
     ["?[1]" \\projection]]]]]
 ["[0]" //])

(the .public cannot_specialize
  (error "Cannot specialize function type."))

(the (special it parameters)
  (-> Name (List Code)
      (Meta [(List Type) Type]))
  (do [! meta.monad]
    [[it _] (binding.export it)
     parameters (list.each' ! (|>> (meta.eval Type)
                                   (by ! each (|>> (.as Type))))
                            parameters)
     it (when (//.reified parameters it)
          {.#Some it}
          (in it)

          {.#None}
          (meta.failure ..cannot_specialize))]
    (in (//.flat_function it))))

(the as_type
  (-> Type
      Code)
  (|>> //.code
       (,)
       (is Type)
       (`)))

... https://en.wikipedia.org/wiki/Domain_of_a_function
(the .public domain
  (syntax.macro (_ [function ?code.global
                    arguments (?code.tuple (?.some ?list.any))])
    (meta#each (|>> product.left
                    //.tuple
                    ..as_type
                    list)
               (special function arguments))))

... https://en.wikipedia.org/wiki/Image_(mathematics)
(the .public image
  (syntax.macro (_ [function ?code.global
                    arguments (?code.tuple (?.some ?list.any))])
    (meta#each (|>> product.right
                    ..as_type
                    list)
               (special function arguments))))
