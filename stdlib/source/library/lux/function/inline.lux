... This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
... If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.

(.using
 [library
  [lux (.except Declaration macro)
   [abstract
    ["<>" projection]
    ["[0]" monad]]
   [data
    [collection
     ["[0]" list (.use "[1]#[0]" monad)
      ["?[1]" \\projection]]]]
   ["[0]" macro (.only with_names)
    ["[0]" syntax]]
   ["[0]" meta (.only)
    ["[0]" module]
    ["[0]" code (.only)
     ["<[1]>" \\projection (.only Projection)]]]]])

(every Declaration
  [Text (List Code)])

(the declaration
  (Projection Declaration)
  (<code>.form (<>.and <code>.local (<>.some ?list.any))))

(the inline
  (Projection [Declaration Code Code])
  (all <>.and
       ..declaration
       ?list.any
       ?list.any
       ))

(syntax.the .public (macro [[[name parameters] type term] ..inline])
  (with_names ['_]
    (monad.let [! meta.monad]
      [[@ _] module.current
       'parameters (|> (macro.name "parameter")
                       (list.repeated (list.size parameters))
                       (list.complete !))
       .let [inlined (` ((.in_module#
                          (, (code.text @))
                          (.is (, type)
                               (.function ((, (code.local name)) (,* parameters))
                                 (, term))))
                         (,* (list#each (function (_ 'parameter)
                                          (` ((,' ,) (, 'parameter))))
                                        'parameters))))
             'parameters (|> 'parameters
                             (list#each (function (_ parameter)
                                          (list parameter (` ?list.any))))
                             list#conjoint)]]
      (pure (list (` (syntax.macro ((, '_) [(,* 'parameters)])
                       (.by meta.monad (,' pure) (list (.`' (, inlined)))))))))))
