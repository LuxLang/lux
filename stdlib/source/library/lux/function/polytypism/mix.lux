... This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
... If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.

(.using
 [library
  [lux (.except)
   [abstract
    [monoid (.only Monoid)]]
   [transduction (.only Reduction)]]]
 ["[0]" //])

(every .public (Mix context)
  (Interface
   (is (for_any (_ whole piece)
         (-> (Reduction whole piece) whole (context piece)
             whole))
       mix)))

(the .public (with_monoid monoid mix value)
  (for_any (_ ! it)
    (-> (Monoid it) (Mix !) (! it)
        it))
  (let [(open "/#[0]") monoid]
    (mix /#composite /#identity value)))

(the .public (constant value init _)
  (for_any (_ it)
    (Mix (//.Constant it)))
  init)

(the .public (variable value init it)
  (Mix //.Variable)
  (value it init))

(the .public (sum left right)
  (for_any (_ left right)
    (-> (Mix left) (Mix right)
        (Mix (//.Sum left right))))
  (function (_ value init it)
    (when it
      {#0 it}
      (left value init it)
      
      {#1 it}
      (right value init it))))

(the .public (product left right)
  (for_any (_ left right)
    (-> (Mix left) (Mix right)
        (Mix (//.Product left right))))
  (function (_ value init [left_it right_it])
    (right value
           (left value
                 init
                 left_it)
           right_it)))

(the .public (recursive body)
  (for_any (_ it)
    (-> (-> (Mix it)
            (Mix it))
        (Mix it)))
  (function (recursion value init it)
    ((body recursion) value init it)))
