... This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
... If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.

(.using
 [library
  [lux (.except)
   [macro
    ["[0]" template]
    ["[0]" expansion]]
   [meta
    ["[0]" static]]
   [target
    [jvm
     [type
      ["[0]" reflection]]]]]]
 ["[0]" //])

(expansion.let [,int (static.text (reflection.reflection reflection.int))
                ,long (static.text (reflection.reflection reflection.long))

                ,float (static.text (reflection.reflection reflection.float))
                ,double (static.text (reflection.reflection reflection.double))

                ,char (static.text (reflection.reflection reflection.char))]
  (template.with [,category ,every_name]
    [(template.with [,short_name]
       [(expansion.let [,full_name (template.text [,category "_" ,short_name])]
          (`` (the .public (,, (template.name [,full_name]))
                //.Name
                (//.name (template.text ["jvm" "_" ,full_name])))))]
       
       ,every_name)]

    [["conversion"
      [[double_to_float]
       [double_to_int]
       [double_to_long]
       
       [float_to_double]
       [float_to_int]
       [float_to_long]
       
       [int_to_byte]
       [int_to_char]
       [int_to_double]
       [int_to_float]
       [int_to_long]
       [int_to_short]
       
       [long_to_double]
       [long_to_float]
       [long_to_int]
       [long_to_short]
       [long_to_byte]
       [long_to_char]
       
       [char_to_byte]
       [char_to_short]
       [char_to_int]
       [char_to_long]
       
       [byte_to_long]
       
       [short_to_long]]]
     [,int
      [[+]
       [-]
       [x]
       [/]
       [%]
       [=]
       [<]
       [and]
       [or]
       [xor]
       [shl]
       [shr]
       [ushr]]]
     [,long
      [[+]
       [-]
       [x]
       [/]
       [%]
       [=]
       [<]
       [and]
       [or]
       [xor]
       [shl]
       [shr]
       [ushr]]]
     [,float
      [[+]
       [-]
       [x]
       [/]
       [%]
       [=]
       [<]]]
     [,double
      [[+]
       [-]
       [x]
       [/]
       [%]
       [=]
       [<]]]
     [,char
      [[=]
       [<]]]
     ["array"
      [[length_boolean]
       [length_byte]
       [length_short]
       [length_int]
       [length_long]
       [length_float]
       [length_double]
       [length_char]
       [length_object]

       [new_boolean]
       [new_byte]
       [new_short]
       [new_int]
       [new_long]
       [new_float]
       [new_double]
       [new_char]
       [new_object]

       [read_boolean]
       [read_byte]
       [read_short]
       [read_int]
       [read_long]
       [read_float]
       [read_double]
       [read_char]
       [read_object]

       [write_boolean]
       [write_byte]
       [write_short]
       [write_int]
       [write_long]
       [write_float]
       [write_double]
       [write_char]
       [write_object]]]
     ["object"
      [[null]
       [null?]
       [synchronized]
       [throw]
       [class]
       [instance?]
       [cast]]]
     ["member"
      [[get_static]
       [get_virtual]
       
       [put_static]
       [put_virtual]
       
       [invoke_static]
       [invoke_virtual]
       [invoke_special]
       [invoke_interface]
       [invoke_constructor]]]
     ["class"
      [[anonymous]]]
     ]))

(template.with [,name]
  [(`` (the .public (,, (template.name [,name]))
         //.Name
         (//.name (template.text ["jvm" "_" ,name]))))]
  
  [[class]
   [class_interface]])
