... This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
... If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.

(.using
 [library
  [lux (.except name)
   [abstract
    ["[0]" monad]]
   [control
    ["[0]" maybe]]
   [error
    ["[0]" try (.only Try)]
    ["[0]" exception (.only Exception)]]
   [data
    ["[0]" product]
    [text
     ["%" \\injection]]
    [collection
     ["[0]" list (.use "[1]#[0]" functor)]]]]]
 [////
  [meta
   ["[0]" archive (.only Archive)
    ["[0]" registry (.only Registry)]
    ["[0]" unit]
    [module
     ["[0]" descriptor]]]]])

(every .public (Program expression declaration)
  (-> unit.ID expression
      declaration))

(the .public name
  Text
  "")

(exception.the .public (cannot_find modules)
  (Exception (List descriptor.Module))
  (exception.report
   (list ["Modules" (exception.listing %.text modules)])))

(the .public (context archive)
  (-> Archive
      (Try unit.ID))
  (monad.let [! try.monad]
    [registries (|> archive
                    archive.archived
                    (list.each' !
                                (function (_ module)
                                  (monad.let !
                                    [id (archive.id module archive)
                                     [_module output registry] (archive.find module archive)]
                                    (pure [[module id] registry])))))]
    (when (list.one (function (_ [[module module_id] registry])
                      (monad.let maybe.monad
                        [id (registry.id ..name registry)]
                        (pure [module_id id])))
                    registries)
      {try.#Success context}
      (pure context)
      
      {try.#Failure _}
      (|> registries
          (list#each (|>> product.left product.left))
          (exception.except ..cannot_find)))))
