... This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
... If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.

(.using
 [library
  [lux (.except :Bit :Text)
   [abstract
    [equivalence (.only Equivalence)]
    [hash (.only Hash)]]
   [control
    ["[0]" pipe]]
   [data
    ["[0]" text (.only)
     ["%" \\injection]]]
   [logic
    ["[0]" bit]]
   [math
    ["[0]" random (.only Random)]
    [number
     ["[0]" /64 (.only)
      ["n" natural]
      ["i" integer]
      ["d" decimal]]]]
   [macro
    ["[0]" template]]]])

(every .public Simple
  (Variant
   {:Bit Bit}
   {:I64 I64}
   {:F64 Decimal}
   {:Text Text}))

(the .public (as_text it)
  (text.Injection Simple)
  (`` (when it
        (,, (template.with [<pattern> <injection>]
              [{<pattern> value}
               (<injection> value)]

              [[:Bit  bit.as_text]
               [:F64  %.decimal]
               [:Text %.text]]))
        
        {:I64 value}
        (%.integer (.integer value)))))

(the .public equivalence
  (Equivalence Simple)
  (implementation
   (the (= expected actual)
     (`` (when [expected actual]
           (,, (template.with [<tag> <eq> <injection>]
                 [[{<tag> expected'} {<tag> actual'}]
                  (<eq> expected' actual')]

                 [[:Bit  bit.=  bit.as_text]
                  [:F64  d.=    %.decimal]
                  [:Text text.= %.text]]))

           [{:I64 expected'} {:I64 actual'}]
           (/64.= expected' actual')

           _
           false)))))

(alias [=]
       ..equivalence)

(the .public hash
  (Hash Simple)
  (implementation
   (the equivalence ..equivalence)

   (the hash
     (`` (|>> (pipe.when
                (,, (template.with [<factor> <tag> <hash>]
                      [{<tag> value'}
                       (n.x <factor>  (by <hash> hash value'))]

                      [[2 :Bit  bit.hash]
                       [3 :F64  d.hash]
                       [5 :Text text.hash]
                       [7 :I64  /64.hash]]))))))))

(the .public random
  (Random Simple)
  (all random.or
       random.bit
       random.i64
       random.decimal
       (random.lower_cased 1)
       ))
