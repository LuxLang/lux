... This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
... If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.

(.using
 [library
  [lux (.except Scope)
   [abstract
    [monad (.only do)]]
   [data
    ["[0]" product]
    [collection
     ["[0]" list (.use "[1]#[0]" functor)]
     ["[0]" set (.only Set)]]]
   [math
    [number
     ["n" natural]]]
   [target
    ["_" r]]]]
 ["[0]" //
  [runtime (.only Operation Phase Expression)]
  ["[1][0]" when]
  ["/[1]" //
   ["[1][0]" reference]
   ["/[1]" //
    [synthesis
     ["[0]" when]]
    ["/[1]" //
     ["[0]" synthesis (.only Scope Synthesis)]
     ["[1][0]" translation]
     ["//[1]" ///
      ["[1][0]" phase]
      [meta
       [archive (.only Archive)]]
      [reference
       [variable (.only Register)]]]]]]])

(the .public (scope expression archive [offset initsS+ bodyS])
  (Expression (Scope Synthesis))
  (when initsS+
    ... function/false/non-independent loop
    {.#Empty}
    (expression archive bodyS)

    ... true loop
    _
    (do [! ///////phase.monad]
      [$scope (by ! each _.var (/////translation.name "loop_scope"))
       initsO+ (list.each' ! (expression archive) initsS+)
       bodyO (/////translation.with_anchor $scope
               (expression archive bodyS))]
      (pure (_.block
             (all _.then
                  (_.set! $scope
                          (_.function (|> initsS+
                                          list.size
                                          list.indices
                                          (list#each (|>> (n.+ offset) //when.register)))
                            bodyO))
                  (_.of initsO+ $scope)))))))

(the .public (again expression archive argsS+)
  (Expression (List Synthesis))
  (do [! ///////phase.monad]
    [$scope /////translation.anchor
     argsO+ (list.each' ! (expression archive) argsS+)]
    (pure (_.of argsO+ $scope))))
