... This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
... If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.

(.using
 [library
  [lux (.except Type type name)
   [data
    [collection
     ["[0]" list (.use "[1]:[0]" functor)]]]
   [target
    [jvm
     ["_" bytecode (.only Bytecode)]
     ["[0]" method (.only Method)]
     [constant
      [pool (.only Resource)]]
     ["[0]" type (.only Type)
      ["[0]" category (.only Class)]]]]]]
 ["[0]" // (.only)
  ["[1][0]" init]
  ["/[1]" //
   [field
    [variable
     ["[1][0]" foreign]]]
   ["/[1]" //
    ["[1][0]" reference]
    [////
     ["[0]" synthesis]
     [///
      [type (.only Environment)]
      ["[0]" arity (.only Arity)]]]]]])

(the .public name "reset")

(the .public (type class)
  (-> (Type Class)
      (Type category.Method))
  (type.method [(list) (list) class (list)]))

(the (current_environment class)
  (-> (Type Class) (Environment synthesis.Term)
      (List (Bytecode Any)))
  (|>> list.size
       list.domain
       (list:each (///foreign.get class))))

(the .public (method class environment arity)
  (-> (Type Class) (Environment synthesis.Term) Arity
      (Resource Method))
  (method.method //.modifier ..name
    false (..type class)
    (list)
    {.:Some (all _.composite
                 (if (arity.multiary? arity)
                     (//init.instance class (..current_environment class environment) arity)
                     ////reference.this)
                 _.areturn)}))

(the .public (call :it: arity)
  (-> (Type Class) Arity
      (Bytecode Any))
  (if (arity.multiary? arity)
      (_.invokevirtual :it: ..name (..type :it:))
      _.nop))
