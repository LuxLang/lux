... This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
... If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.

(.using
 [library
  [lux (.except with)
   [abstract
    [monad (.only do)]]
   [data
    [collection
     ["[0]" list (.use "[1]#[0]" monad)]
     ["[0]" dictionary]]]
   [macro
    ["[0]" template]]
   [meta
    ["[0]" provenance]
    ["[0]" name]]]]
 ["[0]" /// (.only)
  [///
   ["[0]" phase]
   ["[0]" synthesis (.only Handler Bundle)]
   [///
    ["[0]" extension (.only)
     ["[1]/[0]" lux]]]]])

(the .public (with name anonymous)
  (-> extension.Name (-> extension.Name Handler)
      (-> Bundle Bundle))
  (dictionary.has (extension.synthesis name) (anonymous name)))

(the (flat_text_composite expected)
  (-> Name (List synthesis.Term)
      (List synthesis.Term))
  (|>> (list#each (function (_ it)
                    (when it
                      [@ {synthesis.#Extension actual parameters}]
                      (if (name.= expected actual)
                        parameters
                        (list it))

                      _
                      (list it))))
       list#conjoint))

(the (text_composite name)
  (-> extension.Name
      Handler)
  (let [name [.prelude (extension.translation name)]]
    (function (_ synthesis archive parts)
      (do [! phase.monad]
        [parts (list.each' ! (synthesis archive) parts)]
        (in [provenance.dummy {synthesis.#Extension name (flat_text_composite name parts)}])))))

(the .public bundle
  Bundle
  (`` (|> ///.empty
          (,, (template.with [,name]
                [(..with (template.name [extension/lux._] [,name])
                   (template.name [.._] [,name]))]

                [..text_composite]
                )))))
