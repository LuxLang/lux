... This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
... If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.

(.using
 [library
  [lux (.except)
   [abstract
    ["[0]" monad (.only do)]]
   [data
    ["[0]" text]
    [collection
     ["[0]" list (.use "[1]#[0]" monad)]
     ["[0]" dictionary]]]
   [macro
    ["[0]" template]]
   [meta
    ["[0]" provenance]
    ["[0]" name]]]]
 ["[0]" /// (.only)
  [///
   ["[0]" phase]
   ["[0]" synthesis (.only Handler Bundle)]]])

(the .public synthesis
  (-> Text
      Text)
  (|>> (text.suffix "|synthesis")))

(the translation
  (-> Text
      Text)
  (text.replaced (synthesis "") "|translation"))

(the .public (install name anonymous)
  (-> Text (-> Text Handler)
      (-> Bundle Bundle))
  (dictionary.has name (anonymous name)))

(the (flat_text_composite expected)
  (-> Name (List synthesis.Term)
      (List synthesis.Term))
  (|>> (list#each (function (_ it)
                    (when it
                      [@ {synthesis.#Extension actual parameters}]
                      (if (name.= expected actual)
                        parameters
                        (list it))

                      _
                      (list it))))
       list#conjoint))

(the (text::composite self)
  (-> Text
      Handler)
  (let [translation [.prelude (translation self)]]
    (function (_ synthesis archive parts)
      (do [! phase.monad]
        [parts (monad.each ! (synthesis archive) (list.as_stack parts))]
        (in [provenance.dummy {synthesis.#Extension translation (flat_text_composite translation (list.of_stack parts))}])))))

(the .public bundle
  Bundle
  (`` (|> ///.empty
          (,, (template.with [<default> <handler>]
                [(..install (let [[_ proper] (name <default>)]
                              (synthesis proper))
                            <handler>)]

                [.text_composite# ..text::composite]
                )))))
