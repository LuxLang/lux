... This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
... If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.

... https://en.wikipedia.org/wiki/Physics
(.using
 [library
  [lux (.except Change)
   [math
    [number
     [/64
      ["/" decimal]]]
    [geometry
     ["[0]" circle]]]
   [macro
    ["[0]" template]]
   ["[0]" function (.only)
    [predicate (.only Predicate)]]
   [abstract
    [equivalence (.only Equivalence)]]]])

... https://en.wikipedia.org/wiki/Scalar_(physics)
(every .public Scalar
  Decimal)

... https://en.wikipedia.org/wiki/Dimension
(every .public Dimension
  Scalar)

... https://en.wikipedia.org/wiki/Time
(every .public Time
  Dimension)

(every .public (Constant dimension)
  dimension)

(every .public (Variable dimension)
  (-> Time
      (Constant dimension)))

... https://en.wikipedia.org/wiki/Position_(geometry)
(every .public Position
  Dimension)

(every .public (Change it)
  (-> it
      it))

(the .public stasis
  Change
  function.identity)

(the .public (change initial final)
  (-> Dimension Dimension
      (Change Dimension))
  (/.+ (/.- initial final)))

(the .public value
  (-> (Change Dimension)
      Dimension)
  (function.of /.zero))

(every .public Interval
  (Change Time))

(the .public interval
  ..change)

... https://en.wikipedia.org/wiki/Displacement_(geometry)
(every .public Displacement
  (Change Position))

(the .public displacement
  ..change)

... https://en.wikipedia.org/wiki/Velocity
(every .public Velocity
  Scalar)

(the .public (average_velocity interval displacement)
  (-> Interval Displacement
      Velocity)
  (/./ (..value interval)
       (..value displacement)))

... https://en.wikipedia.org/wiki/Acceleration
(every .public Acceleration
  Scalar)

(the .public (average_acceleration interval change_in_velocity)
  (-> Interval (Change Velocity)
      Acceleration)
  (/./ (..value interval)
       (..value change_in_velocity)))

(the .public (velocity acceleration initial)
  (-> Acceleration Velocity
      (Variable Velocity))
  (|>> (/.x acceleration)
       (/.+ initial)))

(the (mean left right)
  (-> Scalar Scalar
      Scalar)
  (/./ +2.0
       (/.+ left right)))

(the .public (position acceleration initial_velocity initial)
  (-> Acceleration Velocity Position
      (Variable Position))
  (function (_ time)
    (let [velocity (mean initial_velocity
                         (..velocity acceleration initial_velocity time))]
      (|> time
          (/.x velocity)
          (/.+ initial)))))

... https://en.wikipedia.org/wiki/Euclidean_vector
(every .public Vector
  (Record
   [#forward/backward Dimension
    #left/right Dimension]))

(the .public equivalence
  (Equivalence Vector)
  (implementation
   (the (= reference it)
     (and (/.= (its #forward/backward reference)
               (its #forward/backward it))
          (/.= (its #left/right reference)
               (its #left/right it))))))

(alias [=]
       ..equivalence)

(the .public origin
  Vector
  [#forward/backward /.zero
   #left/right /.zero])

(template.with [,vector ,scalar]
  [(the .public (,vector origin it)
     (-> Vector
         (.Change Vector))
     [#forward/backward (,scalar (its #forward/backward origin)
                                 (its #forward/backward it))
      #left/right (,scalar (its #left/right origin)
                           (its #left/right it))])]

  [[+ /.+]
   [- /.-]])

(the .public opposite
  (.Change Vector)
  (|>> (revised #forward/backward /.opposite)
       (revised #left/right /.opposite)))

(template.with [,vector ,scalar]
  [(the .public (,vector scale)
     (-> Scalar
         (.Change Vector))
     (|>> (revised #forward/backward (,scalar scale))
          (revised #left/right (,scalar scale))))]

  [[x /.x]
   [/ /./]])

(every .public Orientation
  Scalar)

(the (square it)
  (.Change Dimension)
  (/.x it it))

... https://en.wikipedia.org/wiki/Magnitude_(mathematics)
(the .public (magnitude it)
  (-> Vector
      Scalar)
  (/.root_2 (/.+ (square (its #forward/backward it))
                 (square (its #left/right it)))))

... https://en.wikipedia.org/wiki/Orientation_(geometry)
(the .public (orientation it)
  (-> Vector
      Orientation)
  (circle.arc_tangent_2 (its #forward/backward it)
                        (its #left/right it)))

(the .public (polar magnitude orientation)
  (-> Scalar Orientation
      Vector)
  (|> [#forward/backward (circle.co_sine orientation)
       #left/right (circle.sine orientation)]
      (x magnitude)))

(the .public (approximately? margin_of_error standard value)
  (-> Scalar Vector
      (Predicate Vector))
  (|> value
      (- standard)
      magnitude
      (/.<= margin_of_error)))

(the .public (distance from to)
  (-> Vector Vector
      Scalar)
  (magnitude (- from to)))
