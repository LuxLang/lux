... This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
... If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.

(.require
 [library
  [lux (.except with)
   [abstract
    [equivalence (.only Equivalence)]]]])

(def .public equivalence
  (Equivalence Location)
  (implementation
   (def (= reference subject)
     (and (.text_=# (the .#module reference) (the .#module subject))
          (.i64_=# (the .#line reference) (the .#line subject))
          (.i64_=# (the .#column reference) (the .#column subject))))))

(def .public dummy
  Location
  [.#module ""
   .#line   0
   .#column 0])

(def .public here
  (macro (_ tokens compiler)
    (when tokens
      {.#End}
      (let [location (the .#location compiler)]
        {.#Right [compiler
                  (list (` (.is .Location
                                [.#module (, [..dummy {.#Text (the .#module location)}])
                                 .#line (, [..dummy {.#Nat (the .#line location)}])
                                 .#column (, [..dummy {.#Nat (the .#column location)}])])))]})

      _
      {.#Left ((.in_module# .prelude wrong_syntax_error) (symbol ..here))})))

(def .public (format it)
  (-> Location Text)
  (let [separator ","
        [file line column] it]
    (.text_composite# "@"
                      ((.in_module# .prelude .text#encoded) file) separator
                      ((.in_module# .prelude .nat#encoded) line) separator
                      ((.in_module# .prelude .nat#encoded) column))))

(def \n
  (.int_char# +10))

(def .public (with location error)
  (-> Location Text Text)
  (.text_composite# (..format location) \n
                    error))
