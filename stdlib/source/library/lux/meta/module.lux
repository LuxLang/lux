... This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
... If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.

(.using
 [library
  [lux (.except all)
   [abstract
    [monad (.only do)]]
   [control
    ["[0]" try]]
   [data
    ["[0]" text (.use "[1]#[0]" monoid)]
    [collection
     [list
      ["[0]" property]]]]]]
 ["[0]" // (.only)
  ["[0]" location]])

(every .public Name
  Text)

(the .public runtime
  Name
  "")

(the .public (by_name name)
  (-> Name
      (Meta Module))
  (function (_ lux)
    (when (property.value name (its .#modules lux))
      {try.#Success module}
      {try.#Success [lux module]}

      failure
      {try.#Failure (.all text#composite "Unknown module: " name)})))

(the .public no_current
  Error
  (location.with (location.here)
    "No current module."))

(the current_name
  (Meta Name)
  (function (_ lux)
    (when (its .#current_module lux)
      {.#Some current_module}
      {try.#Success [lux current_module]}

      _
      {try.#Failure ..no_current})))

(the .public current
  (Meta [Name Module])
  (do //.monad
    [name ..current_name
     module (..by_name name)]
    (in [name module])))

(the .public (exists? module)
  (-> Name
      (Meta Bit))
  (function (_ lux)
    {try.#Success [lux (when (property.value module (its .#modules lux))
                         {try.#Success _}
                         true
                         
                         failure
                         false)]}))

(the .public all
  (Meta (List [Name Module]))
  (function (_ lux)
    (|> lux
        (its .#modules)
        [lux]
        {try.#Success})))
