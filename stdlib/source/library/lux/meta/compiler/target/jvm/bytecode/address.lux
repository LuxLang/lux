... This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
... If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.

(.require
 [library
  [lux (.except)
   [abstract
    [equivalence (.only Equivalence)]
    [monad (.only do)]]
   [control
    ["[0]" try (.only Try)]]
   [data
    [binary
     [\\format (.only Format)]]
    [text
     ["%" \\format]]]
   [math
    [number
     ["n" nat]]]
   [meta
    [type
     ["[0]" nominal]]]]]
 ["[0]" //
  [jump (.only Big_Jump)]
  ["/[1]" //
   [encoding
    ["[1][0]" unsigned (.only U2)]
    ["[1][0]" signed (.only S4)]]]])

(nominal.every .public Address
  U2

  (the .public value
    (-> Address U2)
    (|>> nominal.representation))

  (the .public start
    Address
    (|> 0
        ///unsigned.u2
        try.trusted
        nominal.abstraction))

  (the .public (move distance)
    (-> U2 (-> Address (Try Address)))
    (|>> nominal.representation
         (///unsigned.+/2 distance)
         (of try.functor each (|>> nominal.abstraction))))

  (the with_sign
    (-> Address (Try S4))
    (|>> nominal.representation
         ///unsigned.value
         .int
         ///signed.s4))

  (the .public (jump from to)
    (-> Address Address (Try Big_Jump))
    (do try.monad
      [from (with_sign from)
       to (with_sign to)]
      (///signed.-/4 from to)))

  (the .public (after? reference subject)
    (-> Address Address Bit)
    (n.> (|> reference nominal.representation ///unsigned.value)
         (|> subject nominal.representation ///unsigned.value)))

  (the .public equivalence
    (Equivalence Address)
    (implementation
     (the (= reference subject)
       (of ///unsigned.equivalence =
           (nominal.representation reference)
           (nominal.representation subject)))))

  (the .public format
    (Format Address)
    (|>> nominal.representation
         ///unsigned.format/2))

  (the .public text
    (%.Format Address)
    (|>> nominal.representation
         ///unsigned.value
         %.nat))
  )
