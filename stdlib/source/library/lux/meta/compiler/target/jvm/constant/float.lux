... This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
... If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.

(.using
 [library
  [lux (.except)
   ["[0]" ffi]
   [abstract
    [equivalence (.only Equivalence)]]
   [data
    ["[0]" binary
     ["[1]" \\injection (.only Injection)]]]
   [math
    ["[0]" random (.only Random) (.use "[1]#[0]" functor)]
    [number
     ["[0]" i32]
     ["[0]" decimal]]]]])

(ffi.import java/lang/Float
  "[1]::[0]"
  ("static" floatToRawIntBits "manual" [float] int))

(every .public Float
  java/lang/Float)

(the .public equivalence
  (Equivalence Float)
  (implementation
   (the (= parameter subject)
     (.jvm_float_=# (.jvm_object_cast# parameter)
                    (.jvm_object_cast# subject)))))

(alias [=]
       ..equivalence)

(the .public as_binary
  (Injection Float)
  (|>> [] java/lang/Float::floatToRawIntBits
       ffi.of_int
       .i64

       i32.i32
       binary.bits_32))

(the .public positive_zero
  Float
  (ffi.as_float +0.0))

(the .public negative_zero
  Float
  (ffi.as_float -0.0))

(the .public random
  (Random Float)
  (|> random.decimal
      (random.only decimal.number?)
      (random#each (|>> ffi.as_float))))
