... This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
... If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.

(.using
 [library
  [lux (.except)
   [abstract
    ["[0]" equivalence (.only Equivalence)]]
   [data
    [binary
     [\\injection (.only Injection)]]]
   [math
    ["[0]" random (.only Random) (.use "[1]#[0]" functor)]
    [number
     ["n" natural]]]
   [type
    ["[0]" nominal]]]]
 ["[0]" //
  [encoding
   ["[1]" unsigned (.only U2)]]])

(the .public length
  //.bytes/2)

(nominal.every .public (Index of)
  U2

  (the .public index
    (for_any (_ of)
      (-> U2
          (Index of)))
    (|>> nominal.abstraction))

  (the .public value
    (-> (Index Any)
        U2)
    (|>> nominal.representation))

  (the .public equivalence
    (for_any (_ of)
      (Equivalence (Index of)))
    (by equivalence.functor each
        ..value
        //.equivalence))

  (alias [=]
         ..equivalence)

  (the .public injection
    (for_any (_ of)
      (Injection (Index of)))
    (|>> nominal.representation
         //.injection/2))
  )

(the .public random
  (for_any (_ of)
    (Random (Index of)))
  (let [maximum (//.value //.maximum/2)]
    (|> random.natural
        (random#each (n.% (++ maximum)))
        (random.one //.u2)
        (random#each ..index))))
