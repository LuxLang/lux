... This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
... If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.

(.require
 [library
  [lux (.except)
   [abstract
    ["[0]" equivalence (.only Equivalence)]]
   [control
    ["[0]" maybe]
    ["[0]" try (.only Try)]]
   [data
    ["[0]" text (.only)
     ["%" \\injection]]
    [binary
     [\\injection (.only Injection)]]]
   [meta
    [type
     ["[0]" nominal]]
    [macro
     ["[0]" template]]]]]
 ["[0]" /////
  [encoding
   ["[1][0]" unsigned (.only U2)]]])

(nominal.every .public Stack
  U2

  (template.with [<frames> <name>]
    [(the .public <name>
       Stack
       (|> <frames>
           /////unsigned.u2
           maybe.trusted
           nominal.abstraction))]

    [0 empty]
    [1 catch]
    )

  (the .public equivalence
    (Equivalence Stack)
    (of equivalence.functor each
        (|>> nominal.representation)
        /////unsigned.equivalence))

  (the .public injection
    (Injection Stack)
    (|>> nominal.representation
         /////unsigned.injection/2))

  (the stack
    (-> U2 Stack)
    (|>> nominal.abstraction))

  (template.with [<op> <name>]
    [(the .public (<name> amount)
       (-> U2 (-> Stack (Try Stack)))
       (|>> nominal.representation
            (<op> amount)
            (of try.functor each ..stack)))]

    [/////unsigned.+/2 push]
    [/////unsigned.-/2 pop]
    )

  (the .public (max left right)
    (-> Stack Stack Stack)
    (nominal.abstraction
     (/////unsigned.max/2 (nominal.representation left)
                          (nominal.representation right))))

  (the .public text
    (text.Injection Stack)
    (|>> nominal.representation
         /////unsigned.value
         %.nat))
  )

(the .public length
  /////unsigned.bytes/2)
