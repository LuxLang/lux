(.require
 [library
  [lux (.except)
   [control
    [try (.only Try)]]
   [data
    [text
     ["%" \\format]]]
   [meta
    ["[0]" configuration (.only Configuration)]]
   [world
    ["[0]" file]]]]
 ["[0]" // (.only)
  ["/[1]" // (.only)
   [context (.only Context)]
   ["[0]" archive (.only Archive)]]])

(def .public (descriptor fs context)
  (All (_ !) (-> (file.System !) Context file.Path))
  (%.format (//.path fs context)
            (of fs separator)
            "descriptor"))

(def .public (cache! fs configuration context it)
  (All (_ !) (-> (file.System !) Configuration Context Archive (! (Try Any))))
  (of fs write (..descriptor fs context) (archive.export ///.version configuration it)))
