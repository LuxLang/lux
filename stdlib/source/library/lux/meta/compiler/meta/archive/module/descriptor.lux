... This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
... If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.

(.using
 [library
  [lux (.except Module)
   [abstract
    [equivalence (.only Equivalence)]]
   [control
    ["<>" projection]]
   [data
    ["[0]" product]
    ["[0]" text]
    ["[0]" binary
     ["[0]" \\injection (.only Injection)]
     ["<[1]>" \\projection (.only Projection)]]
    [collection
     ["[0]" set (.only Set)]]]
   [math
    [number
     ["[0]" natural]]]
   [macro
    ["[0]" template]]
   [world
    [file (.only Path)]]]])

(every .public Module
  Text)

(the .public runtime
  Module
  "")

(every .public Descriptor
  (Record
   [#name Module
    #file Path
    #hash Natural
    #state Module_State
    #references (Set Module)]))

(the module_state_equivalence
  (Equivalence Module_State)
  (implementation
   (the (= left right)
     (`` (when [left right]
           (,, (template.with [<tag>]
                 [[{<tag>} {<tag>}]
                  true]

                 [.#Active]
                 [.#Compiled]
                 [.#Cached]))

           _
           false)))))

(the .public equivalence
  (Equivalence Descriptor)
  (all product.equivalence
       text.equivalence
       text.equivalence
       natural.equivalence
       ..module_state_equivalence
       set.equivalence
       ))

(alias [=]
       ..equivalence)

(the .public injection
  (Injection Descriptor)
  (all \\injection.and
       \\injection.text
       \\injection.text
       \\injection.natural
       \\injection.any
       (\\injection.set \\injection.text)
       ))

(the .public projection
  (Projection Descriptor)
  (all <>.and
       <binary>.text
       <binary>.text
       <binary>.natural
       (by <>.monad in {.#Cached})
       (<binary>.set text.hash <binary>.text)
       ))
