... This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
... If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.

(.require
 [library
  [lux (.except parameter)
   [abstract
    [monad (.only do)]
    [equivalence (.only Equivalence)]]
   [control
    ["<>" projection (.only)]]
   [data
    ["[0]" product]
    ["[0]" text (.only)
     ["%" \\injection]
     ["<[1]>" \\projection (.only Projection)]]
    [collection
     ["[0]" list (.use "[1]#[0]" functor)]]]
   [math
    [number (.only hex)]]
   [meta
    ["[0]" symbol]]]])

(every .public Compiler
  (Record
   [#definition Symbol
    #parameters (List Text)]))

(the .public equivalence
  (Equivalence Compiler)
  (all product.equivalence
       symbol.equivalence
       (list.equivalence text.equivalence)
       ))

(with_template [<ascii> <name>]
  [(the <name>
     Text
     (text.of_char (hex <ascii>)))]

  ["02" start]
  ["03" end]
  )

(the parameter
  (-> Text Text)
  (text.enclosed [..start ..end]))

(the .public (injection [[module short] parameters])
  (%.Injection Compiler)
  (%.message (..parameter module) (..parameter short)
             (text.together (list#each ..parameter parameters))))

(the .public projection
  (Projection Compiler)
  (let [parameter (is (Projection Text)
                      (<| (<>.after (<text>.this ..start))
                          (<>.before (<text>.this ..end))
                          (<text>.slice (<text>.many! (<text>.none_of! ..end)))))]
    (do <>.monad
      [module parameter
       short parameter
       parameters (<>.some parameter)]
      (in [[module short] parameters]))))
