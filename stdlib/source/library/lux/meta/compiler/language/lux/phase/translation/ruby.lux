... This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
... If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.

(.require
 [library
  [lux (.except)
   [abstract
    [monad (.only do)]]
   [control
    ["[0]" exception]]
   [meta
    [macro
     ["[0]" template]]
    [compiler
     [target
      ["_" ruby]]]]]]
 ["[0]" /
  [runtime (.only Phase Phase!)]
  ["[1][0]" primitive]
  ["[1][0]" structure]
  ["[1][0]" reference]
  ["[1][0]" function]
  ["[1][0]" when]
  ["[1][0]" loop]
  ["/[1]" //
   ["[1][0]" reference]
   ["/[1]" //
    ["[1][0]" extension (.only)
     [translation
      [ruby
       ["[1]/[0]" common]]]]
    ["/[1]" //
     [analysis (.only)]
     ["[0]" phase (.use "[1]#[0]" monad)]
     ["[1][0]" synthesis]
     ["//[1]" ///
      [reference (.only)
       [variable (.only)]]]]]]])

(exception.the .public cannot_recur_as_an_expression)

(the .public (expression extender lux)
  (-> ///extension.Extender Lux
      Phase)
  (function (expression archive synthesis)
    (`` (when synthesis
          (,, (template.with [<tag> <translator>]
                [(<tag> @ value)
                 (phase#in (<translator> value))]

                [////synthesis.bit  /primitive.bit]
                [////synthesis.i64  /primitive.i64]
                [////synthesis.f64  /primitive.f64]
                [////synthesis.text /primitive.text]))

          (,, (template.with [<tag> <translator>]
                [(<tag> @ value)
                 (<translator> expression archive value)]

                [////synthesis.variant /structure.variant]
                [////synthesis.tuple /structure.tuple]
                
                [////synthesis.exec /when.exec]
                [////synthesis.let /when.let]
                [////synthesis.if /when.if]
                [////synthesis.its /when.get]
                
                [////synthesis.apply /function.apply]))

          (,, (template.with [<tag> <translator>]
                [(<tag> @ value)
                 (<translator> ///extension/common.statement expression archive value)]

                [////synthesis.when /when.when]
                [////synthesis.scope /loop.scope]
                [////synthesis.abstraction /function.function]))

          (////synthesis.again @ _)
          (phase.except ..cannot_recur_as_an_expression [])

          [@ {////synthesis.#Reference value}]
          (//reference.reference /reference.system archive value)

          [@ {////synthesis.#Extension [name parameters]}]
          (///extension.application extender lux expression archive .Translation name parameters
                                    (|>>)
                                    (function (_ _) {.#None}))))))
