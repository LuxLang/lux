... This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
... If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.

(.require
 [library
  [lux (.except Type type)
   [data
    [collection
     ["[0]" list (.use "[1]#[0]" functor)]
     ["[0]" sequence]]]
   [meta
    [compiler
     [target
      [jvm
       ["_" bytecode (.only Bytecode)]
       ["[0]" modifier (.only Modifier) (.use "[1]#[0]" monoid)]
       ["[0]" field (.only Field)]
       [type (.only Type)
        [category (.only Value Class)]]
       [constant
        [pool (.only Resource)]]]]]]]]
 ["[0]" ////
  ["[1][0]" type]
  ["[1][0]" reference]
  [//////
   [reference
    [variable (.only Register)]]]])

(def .public type ////type.value)

(def .public (get class name)
  (-> (Type Class) Text (Bytecode Any))
  (all _.composite
       ////reference.this
       (_.getfield class name ..type)
       ))

(def .public (put naming class register value)
  (-> (-> Register Text) (Type Class) Register (Bytecode Any) (Bytecode Any))
  (all _.composite
       ////reference.this
       value
       (_.putfield class (naming register) ..type)))

(def modifier
  (Modifier Field)
  (all modifier#composite
       field.private
       field.final
       ))

(def .public (variable name type)
  (-> Text (Type Value) (Resource Field))
  (field.field ..modifier name false type (sequence.sequence)))

(def .public (variables naming amount)
  (-> (-> Register Text) Nat (List (Resource Field)))
  (|> amount
      list.indices
      (list#each (function (_ register)
                   (..variable (naming register) ..type)))))
