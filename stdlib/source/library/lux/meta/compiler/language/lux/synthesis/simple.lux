... This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
... If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.

(.require
 [library
  [lux (.except #Bit #Text)
   [abstract
    [equivalence (.only Equivalence)]
    [hash (.only Hash)]]
   [control
    ["[0]" pipe]]
   [data
    ["[0]" bit]
    ["[0]" text (.only)
     ["%" \\injection]]]
   [math
    [number
     ["n" nat]
     ["i" int]
     ["d" dec]
     ["[0]" i64]]]
   [meta
    [macro
     ["[0]" template]]]]])

(every .public Simple
  (Variant
   {#Bit Bit}
   {#I64 I64}
   {#F64 Dec}
   {#Text Text}))

(the .public (injection it)
  (text.Injection Simple)
  (`` (when it
        (,, (template.with [<pattern> <injection>]
              [{<pattern> value}
               (<injection> value)]

              [#Bit  bit.as_text]
              [#F64  %.dec]
              [#Text %.text]))
        
        {#I64 value}
        (%.int (.int value)))))

(the .public equivalence
  (Equivalence Simple)
  (implementation
   (the (= expected actual)
     (`` (when [expected actual]
           (,, (template.with [<tag> <eq> <injection>]
                 [[{<tag> expected'} {<tag> actual'}]
                  (<eq> expected' actual')]

                 [#Bit  bit.=  bit.as_text]
                 [#F64  d.=    %.dec]
                 [#Text text.= %.text]))

           [{#I64 expected'} {#I64 actual'}]
           (i64.= expected' actual')

           _
           false)))))

(alias [=]
       ..equivalence)

(the .public hash
  (Hash Simple)
  (implementation
   (the equivalence ..equivalence)

   (the hash
     (`` (|>> (pipe.when
                (,, (template.with [<factor> <tag> <hash>]
                      [{<tag> value'}
                       (n.* <factor>  (of <hash> hash value'))]

                      [2 #Bit  bit.hash]
                      [3 #F64  d.hash]
                      [5 #Text text.hash]
                      [7 #I64  i64.hash]))))))))
