... This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
... If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.

(.require
 [library
  [lux (.except Type)
   [meta
    [compiler
     [target
      [jvm
       ["_" bytecode (.only Bytecode)]
       ["[0]" type (.only Type) (.use "[1]#[0]" equivalence)
        [category (.only Primitive)]
        ["[0]" box]]]]]]]])

(the .public field "value")

(with_template [<name> <boolean> <byte> <short> <int> <long> <float> <double> <char>]
  [(the (<name> type)
     (-> (Type Primitive)
         Text)
     (`` (cond (,, (with_template [<type> <output>]
                     [(type#= <type> type) <output>]
                     
                     [type.boolean <boolean>]
                     [type.byte    <byte>]
                     [type.short   <short>]
                     [type.int     <int>]
                     [type.long    <long>]
                     [type.float   <float>]
                     [type.double  <double>]))
               ... type.char
               <char>)))]

  [box
   box.boolean box.byte box.short box.int
   box.long box.float box.double box.char]
  [value_method
   "booleanValue" "byteValue" "shortValue" "intValue"
   "longValue" "floatValue" "doubleValue" "charValue"]
  )

(the .public (boxed type)
  (-> (Type Primitive)
      (Bytecode Any))
  (let [wrapper (type.class (box type) (list))]
    (_.invokestatic wrapper "valueOf"
                    (type.method [(list) (list type) wrapper (list)]))))

(the .public (primitive type)
  (-> (Type Primitive)
      (Bytecode Any))
  (let [wrapper (type.class (box type) (list))]
    (all _.composite
         (_.checkcast wrapper)
         (_.invokevirtual wrapper (value_method type) (type.method [(list) (list) type (list)])))))
