... This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
... If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.

(.require
 [library
  [lux (.except Pattern nat int rev)
   [abstract
    [equivalence (.only Equivalence)]]
   [data
    [text
     ["%" \\format]]]
   [math
    [number
     ["n" nat]]]]]
 ["[0]" //
  ["[1][0]" simple (.only Simple)]
  ["[1][0]" complex (.only Complex)]
  [////
   [reference
    [register (.only Register)]
    ["[1][0]" variable]]]])

(type .public Pattern
  (Rec Pattern
    (.Variant
     {#Simple Simple}
     {#Complex (Complex Pattern)}
     {#Bind Register})))

(def .public equivalence
  (Equivalence Pattern)
  (implementation
   (def (= reference sample)
     (when [reference sample]
       [{#Simple reference} {#Simple sample}]
       (of //simple.equivalence = reference sample)
       
       [{#Complex reference} {#Complex sample}]
       (of (//complex.equivalence =) = reference sample)

       [{#Bind reference} {#Bind sample}]
       (n.= reference sample)

       _
       false))))

(def .public (format it)
  (%.Format Pattern)
  (when it
    {#Simple it}
    (//simple.format it)
    
    {#Complex it}
    (//complex.format format it)
    
    {#Bind it}
    (//variable.format {//variable.#Local it})))

(with_template [<name> <tag>]
  [(def .public <name>
     (template (<name> content)
       [(.<| {..#Complex}
             <tag>
             content)]))]

  [variant {//complex.#Variant}]
  [tuple   {//complex.#Tuple}]
  )

(def .public unit
  (template (unit)
    [{..#Simple {//simple.#Unit}}]))

(with_template [<name> <tag>]
  [(def .public <name>
     (template (<name> content)
       [{..#Simple {<tag> content}}]))]
  
  [bit  //simple.#Bit]
  [nat  //simple.#Nat]
  [int  //simple.#Int]
  [rev  //simple.#Rev]
  [frac //simple.#Frac]
  [text //simple.#Text]
  )

(def .public bind
  (template (bind register)
    [{..#Bind register}]))
