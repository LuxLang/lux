... This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
... If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.

(.require
 [library
  [lux (.except)
   [abstract
    [monad (.only do)]]
   [control
    ["[0]" try (.only Try)]
    ["[0]" exception (.only Exception)]]
   [data
    [text
     ["%" \\injection]]]
   ["[0]" meta (.only)
    ["[0]" code]]]]
 [///
  ["[0]" phase]])

(exception.the .public (expansion_failed [module macro inputs error])
  (Exception [Text Symbol (List Code) Text])
  (exception.report
   (list ["Macro" (%.symbol macro)]
         ["Inputs" (exception.listing (code.relative module) inputs)]
         ["Error" error])))

(exception.the .public (must_have_single_expansion [module macro inputs outputs])
  (Exception [Text Symbol (List Code) (List Code)])
  (exception.report
   (list ["Macro" (%.symbol macro)]
         ["Inputs" (exception.listing (code.relative module) inputs)]
         ["Outputs" (exception.listing (code.relative module) outputs)])))

(every .public Expander
  (-> Macro (List Code) Lux
      (Try (Try [Lux (List Code)]))))

(the .public (expansion expander name macro inputs)
  (-> Expander Symbol Macro (List Code)
      (Meta (List Code)))
  (function (_ state)
    (do try.monad
      [output (expander macro inputs state)]
      (when output
        {try.#Failure error}
        ((is (Meta (List Code))
             (do meta.monad
               [here meta.current_module_name]
               (meta.failure (exception.error ..expansion_failed [here name inputs error]))))
         state)

        _
        output))))

(the .public (single_expansion expander name macro inputs)
  (-> Expander Symbol Macro (List Code)
      (Meta Code))
  (do [! meta.monad]
    [expansion (..expansion expander name macro inputs)]
    (when expansion
      (list single)
      (in single)

      _
      (do !
        [here meta.current_module_name]
        (meta.failure (exception.error ..must_have_single_expansion [here name inputs expansion]))))))
