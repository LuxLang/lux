... This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
... If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.

(.require
 [library
  [lux (.except)
   [abstract
    ["[0]" monad (.only do)]]
   [control
    ["|" pipe]
    ["<>" parser]
    ["[0]" try]
    ["[0]" function]]
   [data
    ["[0]" product]
    [collection
     ["[0]" list (.use "[1]#[0]" monad)]
     ["[0]" dictionary]]]
   [math
    [number
     ["f" frac]
     ["[0]" i32]]]
   [meta
    [compiler
     [target
      ["_" c++ (.only)
       ["[0]" type]]]]]]]
 ["[0]" /////
  ["[0]" extension]
  [translation
   [extension (.only Nullary Unary Binary Trinary Variadic
                     nullary unary binary trinary variadic)]
   [c++
    ["[0]" runtime (.only Operation Phase Bundle Handler)]]]
  [//
   ["[0]" phase]
   ["[0]" synthesis
    ["<[1]>" \\parser (.only Parser)]]
   [///
    [meta
     [archive (.only Archive)]]]]])

(def .public (custom [parser handler])
  (All (_ of)
    (-> [(Parser of)
         (-> Phase Archive of (Operation _.Expression))]
        Handler))
  (function (_ phase archive input)
    (when (<synthesis>.result parser input)
      {try.#Success input'}
      (handler phase archive input')

      {try.#Failure error}
      (phase.failure error))))

(def text::composite
  (Variadic _.Expression)
  (|>> (|.when
         (list)
         runtime.unit

         (list single)
         single

         it
         (|> it
             (list#each (|>> (runtime.host_value runtime.text_type)
                             _.at))
             runtime.text_composite)
         )))

(def with_text_extensions
  (-> Bundle
      Bundle)
  (|>> (dictionary.has "text_composite#|translation" (variadic ..text::composite))))

(def .public bundle
  Bundle
  (|> extension.empty
      with_text_extensions
      ))
