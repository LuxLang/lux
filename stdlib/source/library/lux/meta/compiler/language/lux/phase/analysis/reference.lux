(.require
 [library
  [lux (.except Analysis)
   [abstract
    [monad (.only do)]]
   ["[0]" meta (.only)
    ["[0]" code]]]]
 ["[0]" ///
  [//
   ["/" analysis (.only Analysis Operation Phase Extender)
    ["[0]" scope]]
   [///
    ["[0]" phase]
    [meta
     [archive (.only Archive)]]]]])

(def .public (reference extender analysis archive quoted_module it)
  (-> Extender Phase Archive Text Symbol (Operation Analysis))
  (when it
    ["" short]
    (do [! phase.monad]
      [?var (scope.variable short)]
      (when ?var
        {.#Some _}
        (/.delegated extender analysis archive (symbol .local#) (list (code.symbol it)))

        {.#None}
        (do !
          [this_module meta.current_module_name]
          (/.delegated extender analysis archive (symbol .global#) (list (code.text quoted_module) (code.symbol [this_module short]))))))

    _
    (/.delegated extender analysis archive (symbol .global#) (list (code.text quoted_module) (code.symbol it)))))
