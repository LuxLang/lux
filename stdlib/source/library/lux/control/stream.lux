... This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
... If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.

(.using
 [library
  [lux (.except only)
   [abstract
    [functor (.only Functor)
     ["//" effect]]
    ["[0]" monad (.only Monad)
     ["/" free]]]
   ["[0]" function (.only)
    [predicate (.only Predicate)]]
   [data
    [collection
     ["[0]" list]
     ["[0]" sequence (.only Sequence)]]]]])

... https://en.wikipedia.org/wiki/Iterator
... https://en.wikipedia.org/wiki/Generator_(computer_programming)
... https://en.wikipedia.org/wiki/Stream_(computing)
(every .public (Effect it)
  (//.Effect [it] []))

(every .public (Stream yield)
  (/.Free (..Effect yield)))

(the .public monad
  (for_any (_ yield)
    (Monad (Stream yield)))
  (/.monad //.functor))

(the .public (each on it)
  (for_any (_ _0 _1 state it)
    (-> (-> _0 _1) (Stream _0 it)
        (Stream _1 it)))
  (when it
    {/.#Impure [item after]}
    {/.#Impure [(on item) (|>> after (each on))]}

    {/.#Pure it}
    {/.#Pure it}))

(the .public (only ? it)
  (for_any (_ yield it)
    (-> (Predicate yield) (Stream yield it)
        (Stream yield it)))
  (when it
    {/.#Impure [item after]}
    (if (? item)
      {/.#Impure [item (|>> after (only ?))]}
      (only ? (after [])))

    {/.#Pure it}
    {/.#Pure it}))

(the .public (mix step state it)
  (for_any (_ yield state it)
    (-> (-> yield state state) state (Stream yield it)
        [state it]))
  (when it
    {/.#Impure [item after]}
    (mix step (step item state) (after []))

    {/.#Pure it}
    [state it]))

(the .public sequence
  (for_any (_ yield it)
    (-> (Stream yield it)
        [(Sequence yield) it]))
  (mix sequence.suffix
       sequence.empty))

(the .public (one it)
  (for_any (_ it)
    (-> it
        (Stream it Any)))
  {/.#Impure [[it] (function.constant {/.#Pure []})]})

(the .public many
  (for_any (_ it)
    (-> (List it)
        (Stream it Any)))
  (list.each' ..monad ..one))
