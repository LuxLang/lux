... This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
... If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.

(.using
 [library
  [lux (.except)
   [abstract
    [functor (.only Functor)]
    [monad (.only Monad
                  do)]]
   [data
    [collection
     ["[0]" list
      ["?[1]" \\projection]]]]
   [macro (.only with_names)
    ["[0]" syntax]
    ["[0]" template]]
   [type
    ["[0]" nominal]]
   [meta
    ["[0]" code
     ["<[1]>" \\projection]]]]])

(the Computation
  (template.macro (_ it)
    [(-> Any
         it)]))

(nominal.every .public (IO it)
  (Computation it)

  (the .public as_io
    (for_any (_ it)
      (-> (Computation it)
          (IO it)))
    (|>> nominal.of))

  (the !io
    (template.macro (!io computation)
      [(nominal.of
        (template.with_locals ['func 'arg]
          (function ('func 'arg)
            computation)))]))

  (the value'
    (template.macro (_ io)
      ... creatio ex nihilo
      [((nominal.as io) [])]))

  (the .public io
    (syntax.macro (_ [computation ?list.any])
      (with_names ['func 'arg]
        (pure (list (` (..as_io (function ((, 'func) (, 'arg))
                                  (, computation)))))))))

  (the .public value
    (for_any (_ it)
      (-> (IO it)
          it))
    (|>> ..value'))

  (the .public functor
    (Functor IO)
    (implementation
     (the (each f)
       (|>> ..value' f !io))))

  (the .public monad
    (Monad IO)
    (implementation
     (the functor ..functor)

     (the pure
       (|>> !io))
     
     (the conjoint
       (|>> ..value'
            ..value'
            !io))))
  )
