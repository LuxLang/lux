... This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
... If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.

(.require
 [library
  [lux (.except)
   ["[0]" debug]
   [control
    [function
     ["[0]" mixin (.only Mixin)]]]
   [meta
    [macro
     [template (.only with_locals)]]]]])

(the Partial
  Mixin)

... https://en.wikipedia.org/wiki/Method_(computer_programming)
(every .public (Method state input output)
  (Record
   [#complete (-> [state input]
                  output)
    #partial (Partial [state input]
                      output)]))

(the .public (method partial)
  (All (_ state input output)
    (-> (Partial [state input] output)
        (Method state input output)))
  [#complete (mixin.fixed partial)
   #partial partial])

(every .public (Class interface)
  (Ex (_ state)
    (interface state)))

... https://en.wikipedia.org/wiki/Object-oriented_programming
(every .public (Object class)
  (Ex (_ state)
    [state (class state)]))

(the .public (new class state)
  (All (_ class state)
    (-> (class state) state
        (Object class state)))
  [state class])

(the .public (class [state class])
  (All (_ class state)
    (-> (Object class state)
        (class state)))
  class)

(the .public on
  (with_locals ['state 'class]
    (template (_ <method> <input> <it>)
      [(let [['state 'class] <it>]
         ((its [<method> ..#complete] 'class) ['state <input>]))])))

... https://en.wikipedia.org/wiki/Method_overriding
(the (override' revision partial class)
  (All (_ class state input output)
    (-> (-> (-> (Method state input output)
                (Method state input output))
            (-> (class state)
                (class state)))
        (Partial [state input] output)
        (-> (class state)
            (class state))))
  (revision (function (_ method)
              (let [partial (mixin.mixed partial (its #partial method))]
                [#complete (mixin.fixed partial)
                 #partial partial]))
            class))

(the .public override
  (with_locals ['method 'partial]
    (template (_ <method> <partial> <class>)
      [((debug.private ..override') (.revised <method>) <partial> <class>)])))
