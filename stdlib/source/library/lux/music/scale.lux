... This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
... If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.

(.require
 [library
  [lux (.except)
   [abstract
    [equivalence (.only Equivalence)]
    [hash (.only Hash)]]
   [control
    ["[0]" try (.only Try)]
    ["[0]" exception (.only Exception)]]
   [data
    [text
     ["%" \\format]]
    [collection
     ["[0]" list (.use "[1]#[0]" mix)]
     ["[0]" array
      ["[1]" \\unsafe (.only Array)]]]]
   [math
    [number
     ["n" nat]]]
   [meta
    [macro
     ["[0]" template]]
    [type
     ["[0]" nominal]]]]]
 [//
  ["[0]" interval (.only Interval)]])

(exception.def .public (not_an_octave [it])
  (Exception (List Interval))
  (exception.report
   (list ["Intervals" (exception.listing %.nat it)])))

(exception.def .public (has_perfect_unison [it])
  (Exception (List Interval))
  (exception.report
   (list ["Intervals" (exception.listing %.nat it)])))

... https://en.wikipedia.org/wiki/Scale_(music)
(nominal.def .public Scale
  (Array Interval)

  (def .public intervals
    (-> Scale
        (List Interval))
    (|>> nominal.representation
         (array.list {.#None})))

  (def .public (scale intervals)
    (-> (List Interval)
        (Try Scale))
    (if (|> intervals
            (list#mix n.+ interval.perfect_unison)
            (n.= interval.octave))
      (if (list.every? (n.> interval.perfect_unison) intervals)
        {try.#Success (nominal.abstraction (array.of_list intervals))}
        (exception.except ..has_perfect_unison [intervals]))
      (exception.except ..not_an_octave [intervals])))

  (def .public equivalence
    (Equivalence Scale)
    (implementation
     (def (= reference it)
       (array.= n.equivalence
                (nominal.representation reference)
                (nominal.representation it)))))

  (def .public hash
    (Hash Scale)
    (implementation
     (def equivalence ..equivalence)
     
     (def hash
       (|>> nominal.representation
            (array.list {.#None})
            (of (list.hash n.hash) hash)))))
  )

(with_template [<intervals> <name>]
  [(def .public <name>
     Scale
     (|> (`` (list (,, (template.spliced <intervals>))))
         ..scale
         try.trusted))]

  ... https://en.wikipedia.org/wiki/Chromatic_scale
  [[1 1 1 1 1 1 1 1 1 1 1 1] chromatic]

  ... https://en.wikipedia.org/wiki/Pentatonic_scale
  [[2 2 3 2 3] major_pentatonic]
  [[2 3 2 3 2] suspended_pentatonic]
  [[3 2 3 2 2] blues_minor]
  [[2 3 2 2 3] blues_major]
  [[3 2 2 3 2] minor_pentatonic]

  ... https://en.wikipedia.org/wiki/Hexatonic_scale
  [[2 2 2 2 2 2] whole_tone] ... https://en.wikipedia.org/wiki/Whole-tone_scale

  ... https://en.wikipedia.org/wiki/Heptatonic_scale
  [[2 2 1 2 2 2 1] major] ... https://en.wikipedia.org/wiki/Major_scale
  [[2 1 2 2 1 2 2] minor] ... https://en.wikipedia.org/wiki/Minor_scale
  [[1 3 1 1 2 3 1] persian] ... https://en.wikipedia.org/wiki/Persian_scale
  
  ... https://en.wikipedia.org/wiki/Octatonic_scale
  [[2 1 2 1 2 1 2 1] octatonic]
  )

(alias [egyptian]
       ..suspended_pentatonic)
