... This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
... If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.

(.require
 [library
  [lux (.except static)
   [abstract
    [monad (.only do)]]
   [control
    ["?" projection]
    ["[0]" try]
    ["[0]" exception (.only Exception)]]
   [data
    ["[0]" text (.only)
     ["%" \\injection]]]
   [math
    [number (.only hex)]
    ["[0]" random (.only Random)]]
   ["[0]" meta (.only)
    ["[0]" code (.only)
     ["?[1]" \\projection (.only Projection)]]
    [macro
     ["[0]" syntax]]]]])

(exception.the .public (failure test)
  (Exception Code)
  (exception.report
   (list ["Test" (%.code test)])))

(every .public Test
  (Random Bit))

(the pcg_32_magic_inc
  (hex "FEDCBA9876543210"))

(the ?static
  (Projection [(Maybe Nat)
               Code])
  (all ?.either
       (do ?.monad
         [seed ?code.nat
          term ?code.any]
         (in [{.#Some seed} term]))
       (do ?.monad
         [term ?code.any]
         (in [{.#None} term]))
       ))

(the .public static
  (syntax.macro (_ [[seed term] ?static])
    (do [! meta.monad]
      [test (meta.eval Test term)
       seed (when seed
              {.#Some seed}
              (in seed)

              _
              meta.seed)
       .let [[_ success?] (random.value random.pcg_32
                                        [random.#increase ..pcg_32_magic_inc
                                         random.#seed seed]
                                        (as Test test))]]
      (if success?
        (in (list))
        (meta.failure (exception.error ..failure [term]))))))

(the .public dynamic
  (syntax.macro (_ [test ?code.any])
    (do [! meta.monad]
      [error_message (meta.try (meta.failure (exception.error ..failure [test])))]
      (in (list (` (is Any
                       (if (is Bit (, test))
                         []
                         (panic! (, (code.text (when error_message
                                                 {try.#Failure error}
                                                 error
                                                 
                                                 {try.#Success _}
                                                 ""))))))))))))
