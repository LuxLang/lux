(.require
 [library
  [lux (.except Type Label type)
   [data
    [collection
     ["[0]" list]]]
   [math
    [number
     ["n" nat]]]
   [target
    [jvm
     ["_" bytecode (.only Label Bytecode)]
     ["[0]" modifier (.only Modifier) (.use "[1]#[0]" monoid)]
     ["[0]" method (.only Method)]
     [constant
      [pool (.only Resource)]]
     ["[0]" type (.only Type)
      ["[0]" category (.only Class)]]]]]]
 ["[0]" // (.only)
  ["//[1]" ///
   ["[0]" runtime]
   ["[1][0]" type]
   [//////
    [arity (.only Arity)]
    [meta
     [archive
      ["[0]" unit]]]]]])

(def .public name "impl")

(def .public (type :it: arity)
  (-> (Type Class) Arity (Type category.Method))
  (type.method [(list)
                (list.partial :it: (list.repeated arity ////type.value))
                ////type.value
                (list)]))

(def modifier
  (all modifier#composite
       method.static
       //.modifier
       ))

(def .public (method :it: arity @begin body)
  (-> (Type Class) Arity Label (Bytecode Any) (Resource Method))
  (method.method ..modifier
                 ..name
                 #0 (..type :it: arity)
                 (list)
                 {.#Some (all _.composite
                              (_.set_label @begin)
                              body
                              (_.when_continuous _.areturn)
                              )}))

(def .public (call :it: arity)
  (-> (Type Class) Arity (Bytecode Any))
  (_.invokestatic :it: ..name (..type :it: arity)))
