(.using
 [library
  [lux "*"
   [abstract
    [equivalence {"+" Equivalence}]
    [hash {"+" Hash}]]
   [data
    ["[0]" product]
    ["[0]" bit]
    [text
     ["%" format]]]
   [math
    [number
     ["[0]" nat]]]]])

(type: .public Side
  (Record
   [#lefts Nat
    #right? Bit]))

(def: .public (format it)
  (%.Format Side)
  (%.format "{" (%.nat (the #lefts it)) " " (%.bit (the #right? it)) "}"))

(def: .public hash
  (Hash Side)
  (all product.hash
       nat.hash
       bit.hash
       ))

(def: .public equivalence
  (Equivalence Side)
  (# ..hash equivalence))
