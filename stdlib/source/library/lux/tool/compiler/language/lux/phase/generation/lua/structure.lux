(.using
 [library
  [lux (.except Tuple Variant)
   [abstract
    ["[0]" monad (.only do)]]
   [target
    ["_" lua (.only Expression)]]]]
 ["[0]" //
  ["[1][0]" runtime (.only Operation Phase Generator)]
  ["[1][0]" primitive]
  ["///[1]" ////
   ["[1][0]" synthesis (.only Synthesis)]
   [analysis
    [complex (.only Variant Tuple)]]
   ["//[1]" ///
    ["[1][0]" phase (.open: "[1]#[0]" monad)]]]])

(def .public (tuple phase archive elemsS+)
  (Generator (Tuple Synthesis))
  (case elemsS+
    {.#End}
    (///////phase#in (//primitive.text /////synthesis.unit))

    {.#Item singletonS {.#End}}
    (phase archive singletonS)

    _
    (|> elemsS+
        (monad.each ///////phase.monad (phase archive))
        (///////phase#each _.array))))

(def .public (variant phase archive [lefts right? valueS])
  (Generator (Variant Synthesis))
  (///////phase#each (//runtime.variant lefts right?)
                     (phase archive valueS)))
