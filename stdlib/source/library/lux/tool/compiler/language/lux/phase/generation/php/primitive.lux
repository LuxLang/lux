(.using
 [library
  [lux (.except i64)
   [math
    [number
     ["[0]" frac]]]
   [target
    ["_" php (.only Literal Expression)]]]]
 ["[0]" //
  ["[1][0]" runtime]])

(def: .public bit
  (-> Bit Literal)
  _.bool)

(def: .public (i64 value)
  (-> (I64 Any) Expression)
  (let [h32 (|> value //runtime.high .int _.int)
        l32 (|> value //runtime.low .int _.int)]
    (|> h32
        (_.bit_shl (_.int +32))
        (_.bit_or l32))))

(def: .public f64
  (-> Frac Literal)
  _.float)

(def: .public text
  (-> Text Literal)
  _.string)
