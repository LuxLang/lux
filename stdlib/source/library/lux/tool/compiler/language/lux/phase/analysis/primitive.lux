(.using
 [library
  [lux {"-" nat int rev}
   [abstract
    monad]]]
 ["[0]" // "_"
  ["[1][0]" type]
  ["/[1]" // "_"
   [//
    ["/" analysis {"+" Analysis Operation}
     ["[1][0]" primitive]]
    [///
     ["[1]" phase]]]]])

(template [<name> <type> <tag>]
  [(def: .public (<name> value)
     (-> <type> (Operation Analysis))
     (do ///.monad
       [_ (//type.infer <type>)]
       (in {/.#Primitive {<tag> value}})))]

  [bit  .Bit  /primitive.#Bit]
  [nat  .Nat  /primitive.#Nat]
  [int  .Int  /primitive.#Int]
  [rev  .Rev  /primitive.#Rev]
  [frac .Frac /primitive.#Frac]
  [text .Text /primitive.#Text]
  )

(def: .public unit
  (Operation Analysis)
  (do ///.monad
    [_ (//type.infer .Any)]
    (in {/.#Primitive {/primitive.#Unit}})))
