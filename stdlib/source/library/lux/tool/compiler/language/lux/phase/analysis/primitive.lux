(.module:
  [library
   [lux {"-" [nat int rev]}
    [abstract
     monad]]]
  ["[0]" // "_"
   ["[1][0]" type]
   ["/[1]" // "_"
    [//
     ["/" analysis {"+" [Analysis Operation]}]
     [///
      ["[1]" phase]]]]])

(template [<name> <type> <tag>]
  [(def: .public (<name> value)
     (-> <type> (Operation Analysis))
     (do ///.monad
       [_ (//type.infer <type>)]
       (in {/.#Primitive {<tag> value}})))]

  [bit  .Bit  /.#Bit]
  [nat  .Nat  /.#Nat]
  [int  .Int  /.#Int]
  [rev  .Rev  /.#Rev]
  [frac .Frac /.#Frac]
  [text .Text /.#Text]
  )

(def: .public unit
  (Operation Analysis)
  (do ///.monad
    [_ (//type.infer .Any)]
    (in {/.#Primitive {/.#Unit}})))
