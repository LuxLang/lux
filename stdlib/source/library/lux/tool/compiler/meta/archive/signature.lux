(.module:
  [library
   [lux "*"
    [abstract
     [equivalence {"+" [Equivalence]}]]
    [control
     ["<>" parser
      ["<b>" binary {"+" [Parser]}]]]
    [data
     ["[0]" product]
     ["[0]" name]
     ["[0]" text
      ["%" format {"+" [format]}]]
     [format
      ["[0]" binary {"+" [Writer]}]]]
    [math
     [number
      ["[0]" nat]]]]]
  [////
   [version {"+" [Version]}]])

(type: .public Signature
  (Record
   [#name Name
    #version Version]))

(def: .public equivalence
  (Equivalence Signature)
  (product.equivalence name.equivalence nat.equivalence))

(def: .public (description signature)
  (-> Signature Text)
  (format (%.name (value@ #name signature)) " " (%.nat (value@ #version signature))))

(def: .public writer
  (Writer Signature)
  (binary.and (binary.and binary.text binary.text)
              binary.nat))

(def: .public parser
  (Parser Signature)
  (<>.and (<>.and <b>.text <b>.text)
          <b>.nat))
