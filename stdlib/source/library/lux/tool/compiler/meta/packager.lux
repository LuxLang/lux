(.module:
  [library
   [lux "*"
    [control
     [try {"+" [Try]}]]
    [data
     [binary {"+" [Binary]}]
     [collection
      [dictionary {"+" [Dictionary]}]
      ["[0]" row]
      ["[0]" list ("[1]\[0]" functor)]]]
    [world
     ["[0]" file]]]]
  [//
   [cache
    ["[0]" dependency]]
   ["[0]" archive {"+" [Archive]}
    ["[0]" descriptor]
    ["[0]" artifact]]
   [//
    [language
     [lux
      [generation {"+" [Context]}]]]]])

(type: .public Packager
  (-> (Dictionary file.Path Binary)
      Archive
      Context
      (Try Binary)))

(type: .public Order
  (List [archive.ID (List artifact.ID)]))

(def: .public order
  (-> dependency.Order Order)
  (list\each (function (_ [module [module_id [descriptor document]]])
               (|> descriptor
                   (value@ descriptor.#registry)
                   artifact.artifacts
                   row.list
                   (list\each (|>> (value@ artifact.#id)))
                   [module_id]))))
