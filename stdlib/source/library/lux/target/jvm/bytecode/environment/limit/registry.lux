(.using
 [library
  [lux (.except Type for static has)
   [abstract
    ["[0]" equivalence (.only Equivalence)]]
   [control
    ["[0]" try (.only Try) (.open: "[1]#[0]" functor)]]
   [data
    [binary
     [\\format (.only Writer)]]
    [collection
     ["[0]" list (.open: "[1]#[0]" functor mix)]]]
   [math
    [number
     ["n" nat]]]
   [type
    [primitive (.except)]]]]
 ["[0]" /////
  [encoding
   ["[1][0]" unsigned (.only U1 U2)]]
  ["[1][0]" type (.only Type)
   [category (.only Method)]
   ["[1]/[0]" parser]]])

(type: .public Register
  U1)

(def: normal 1)
(def: wide 2)

(primitive .public Registry
  U2

  (def: .public registry
    (-> U2 Registry)
    (|>> abstraction))

  (def: (minimal type)
    (-> (Type Method) Nat)
    (let [[type_variables inputs output exceptions] (/////type/parser.method type)]
      (|> inputs
          (list#each (function (_ input)
                       (if (or (same? /////type.long input)
                               (same? /////type.double input))
                         ..wide
                         ..normal)))
          (list#mix n.+ 0))))

  (with_template [<start> <name>]
    [(def: .public <name>
       (-> (Type Method) (Try Registry))
       (|>> ..minimal
            (n.+ <start>)
            /////unsigned.u2
            (try#each ..registry)))]

    [0 static]
    [1 virtual]
    )

  (def: .public equivalence
    (Equivalence Registry)
    (at equivalence.functor each
        (|>> representation)
        /////unsigned.equivalence))

  (def: .public writer
    (Writer Registry)
    (|>> representation /////unsigned.writer/2))

  (def: .public (has needed)
    (-> Registry Registry Registry)
    (|>> representation
         (/////unsigned.max/2 (representation needed))
         abstraction))

  (with_template [<name> <extra>]
    [(def: .public <name>
       (-> Register Registry)
       (let [extra (|> <extra> /////unsigned.u2 try.trusted)]
         (|>> /////unsigned.lifted/2
              (/////unsigned.+/2 extra)
              try.trusted
              abstraction)))]

    [for ..normal]
    [for_wide ..wide]
    )
  )

(def: .public length
  /////unsigned.bytes/2)
