... This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
... If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.

(.using
 [library
  [lux (.except)
   [abstract
    ["[0]" equality (.only Equality)]]
   [data
    [binary
     [\\injection (.only Injection)]]]
   [math
    ["[0]" random (.only Random) (.use "[1]:[0]" functor)]
    [number
     ["[0]" /16
      ["[1]" natural]]
     [/64
      ["n" natural]]]]
   [type
    ["[0]" nominal]]]])

(the .public length
  /16.size)

(the Reification /16.Number)

(nominal.every .public (Index it)
  Reification

  (the .public index
    (for_any (_ it)
      (-> Reification
          (Index it)))
    (|>> nominal.of))

  (the .public value
    (-> (Index Any)
        Reification)
    (|>> nominal.as))

  (the .public equality
    (for_any (_ it)
      (Equality (Index it)))
    (by equality.functor each
        ..value
        /16.equality))

  (alias [=]
         ..equality)

  (the .public as_binary
    (for_any (_ it)
      (Injection (Index it)))
    (|>> nominal.as
         /16.as_binary))
  )

(the .public random
  (for_any (_ it)
    (Random (Index it)))
  (let [limit (++ (/16.as /16.maximum))]
    (random:each (|>> (n.% limit)
                      /16.of
                      ..index)
                 random.natural)))
