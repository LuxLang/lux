(.using
 [library
  [lux (.except)
   [abstract
    ["[0]" equivalence (.only Equivalence)]]
   [data
    [format
     [binary (.only Writer)]]]
   [type
    [primitive (.except)]]]]
 ["[0]" //
  [encoding
   ["[1][0]" unsigned (.only U2)]]])

(def: .public length
  //unsigned.bytes/2)

(primitive: .public (Index kind)
  U2

  (def: .public index
    (All (_ kind) (-> U2 (Index kind)))
    (|>> abstraction))

  (def: .public value
    (-> (Index Any) U2)
    (|>> representation))

  (def: .public equivalence
    (All (_ kind) (Equivalence (Index kind)))
    (at equivalence.functor each
        ..value
        //unsigned.equivalence))

  (def: .public writer
    (All (_ kind) (Writer (Index kind)))
    (|>> representation //unsigned.writer/2))
  )
