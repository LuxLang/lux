(.module:
  [library
   [lux #*
    [abstract
     ["." equivalence (#+ Equivalence)]]
    [data
     [format
      [binary (#+ Writer)]]]
    [type
     abstract]]]
  ["." // #_
   [encoding
    ["#." unsigned (#+ U2)]]])

(def: .public length
  //unsigned.bytes/2)

(abstract: .public (Index kind)
  {}
  
  U2

  (def: .public index
    (All [kind] (-> U2 (Index kind)))
    (|>> :abstraction))

  (def: .public value
    (-> (Index Any) U2)
    (|>> :representation))

  (def: .public equivalence
    (All [kind] (Equivalence (Index kind)))
    (\ equivalence.functor each
       ..value
       //unsigned.equivalence))

  (def: .public writer
    (All [kind] (Writer (Index kind)))
    (|>> :representation //unsigned.writer/2))
  )
