... This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
... If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.

(.using
 [library
  [lux (.except)
   ["[0]" ffi]
   [abstract
    [equality (.only Equality)]]
   [data
    ["[0]" binary (.only)
     ["[1]I" \\injection (.only Injection)]]]
   [math
    ["[0]" random (.only Random) (.use "[1]:[0]" functor)]
    [number
     [/64
      ["[0]" decimal]]]]]])

(ffi.the java/lang/Float
  "[1]:[0]"
  ("static" floatToRawIntBits "manual" [float] int))

(every .public Float
  java/lang/Float)

(the .public as_binary
  (Injection Float)
  (|>> [] java/lang/Float:floatToRawIntBits
       ffi.of_int
       binaryI.bits_32))

(the .public equality
  (Equality Float)
  (implementation
   (the (= reference it)
     (binary.= (binaryI.value ..as_binary reference)
               (binaryI.value ..as_binary it)))))

(alias [=]
       ..equality)

(the .public positive_zero
  Float
  (ffi.as_float +0.0))

(the .public negative_zero
  Float
  (ffi.as_float -0.0))

(the .public not_a_number
  Float
  (ffi.as_float decimal.not_a_number))

(the .public random
  (Random Float)
  (random:each (|>> ffi.as_float) random.decimal))
