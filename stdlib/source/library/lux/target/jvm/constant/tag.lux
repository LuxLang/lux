(.using
 [library
  [lux "*"
   [abstract
    [equivalence {"+" Equivalence}]]
   [control
    ["[0]" try]]
   [data
    [format
     [binary {"+" Writer}]]]
   [type
    [abstract "*"]]]]
 ["[0]" /// "_"
  [encoding
   ["[1][0]" unsigned {"+" U1} ("u1//[0]" equivalence)]]])

(abstract: .public Tag
  U1

  (implementation: .public equivalence
    (Equivalence Tag)
    (def: (= reference sample)
      (u1//= (representation reference)
             (representation sample))))

  (template [<code> <name>]
    [(def: .public <name>
       Tag
       (|> <code> ///unsigned.u1 try.trusted abstraction))]

    [01 utf8]
    [03 integer]
    [04 float]
    [05 long]
    [06 double]
    [07 class]
    [08 string]
    [09 field]
    [10 method]
    [11 interface_method]
    [12 name_and_type]
    [15 method_handle]
    [16 method_type]
    [18 invoke_dynamic]
    )

  (def: .public writer
    (Writer Tag)
    (|>> representation ///unsigned.writer/1))
  )
