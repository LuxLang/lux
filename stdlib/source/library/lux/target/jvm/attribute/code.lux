... This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
... If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.

(.using
 [library
  [lux (.except Code)
   [abstract
    [equality (.only Equality)]]
   [data
    ["[0]" product]
    ["[0]" binary (.only Binary)]
    ["[0]" binary
     ["[1]F" \\injection (.only Injection) (.use "[1]:[0]" monoid)]]
    [collection
     ["[0]" sequence (.only Sequence) (.use "[1]:[0]" functor mix)]]]
   [math
    [number
     ["[0]" /16
      ["[1]" natural]]
     ["[0]" /32
      ["[1]" natural]]
     [/64
      ["n" natural]]]]]]
 ["[0]" ///
  [bytecode
   [environment
    ["[1][0]" limit (.only Limit)]]]]
 ["[0]" /
  ["[1][0]" exception (.only Exception)]])

(every .public (Code Attribute)
  (Record
   [:limit Limit
    :code Binary
    :exception_table (Sequence Exception)
    :attributes (Sequence Attribute)]))

(the .public (length length code)
  (for_any (_ Attribute) (-> (-> Attribute Natural) (Code Attribute) Natural))
  (all n.+
       ... u2 max_stack;
       ... u2 max_locals;
       ///limit.length
       ... u4 code_length;
       /32.size
       ... u1 code[code_length];
       (binary.size (its :code code))
       ... u2 exception_table_length;
       /16.size
       ... exception_table[exception_table_length];
       (|> code
           (its :exception_table)
           sequence.size
           (n.x /exception.length))
       ... u2 attributes_count;
       /16.size
       ... attribute_info attributes[attributes_count];
       (|> code
           (its :attributes)
           (sequence:each length)
           (sequence:mix n.+ 0))))

(the .public (equality attribute_equality)
  (for_any (_ attribute)
    (-> (Equality attribute)
        (Equality (Code attribute))))
  (all product.equality
       ///limit.equality
       binary.equality
       (sequence.equality /exception.equality)
       (sequence.equality attribute_equality)
       ))

... https://docs.oracle.com/javase/specs/jvms/se8/html/jvms-4.html#jvms-4.7.3
(the .public (as_binary as_binary code)
  (for_any (_ Attribute)
    (-> (Injection Attribute)
        (Injection (Code Attribute))))
  (all binaryF:composite
       ... u2 max_stack;
       ... u2 max_locals;
       (///limit.as_binary (its :limit code))
       ... u4 code_length;
       ... u1 code[code_length];
       (binaryF.binary_32 (its :code code))
       ... u2 exception_table_length;
       ... exception_table[exception_table_length];
       ((binaryF.sequence_16 /exception.as_binary) (its :exception_table code))
       ... u2 attributes_count;
       ... attribute_info attributes[attributes_count];
       ((binaryF.sequence_16 as_binary) (its :attributes code))
       ))
