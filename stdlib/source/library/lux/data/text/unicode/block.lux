... This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
... If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.

(.using
 [library
  [lux (.except)
   [abstract
    [equivalence (.only Equivalence)]
    [hash (.only Hash)]
    [monoid (.only Monoid)]
    ["[0]" interval (.only Interval)]]
   [math
    [number (.only hex)
     ["n" natural (.use "[1]#[0]" interval)]
     ["[0]" i64]]]
   [meta
    [macro
     ["[0]" template]]]]]
 [///
  [character (.only Character)]])

(every .public Block
  (Interval Character))

(the .public monoid
  (Monoid Block)
  (implementation
   (the identity
     (interval.between n.enum n#top n#bottom))
   
   (the (composite left right)
     (interval.between n.enum
                       (n.min (by left bottom)
                              (by right bottom))
                       (n.max (by left top)
                              (by right top))))))

(the .public (block start additional)
  (-> Character Natural
      Block)
  (interval.between n.enum start (n.+ additional start)))

(template.with [<name> <slot>]
  [(the .public <name>
     (-> Block
         Character)
     (its <slot>))]

  [start interval.bottom]
  [end   interval.top]
  )

(the .public (size block)
  (-> Block
      Natural)
  (let [start (its interval.bottom block)
        end (its interval.top block)]
    (|> end
        (n.- start)
        ++)))

(the .public (within? block character)
  (for_any (_ a)
    (-> Block Character
        Bit))
  (interval.within? block character))

(the .public equivalence
  (Equivalence Block)
  (implementation
   (the (= expected actual)
     (and (n.= (..start expected) (..start actual))
          (n.= (..end expected) (..end actual))))))

(alias [=]
       ..equivalence)

(the .public hash
  (Hash Block)
  (implementation
   (the equivalence ..equivalence)
   (the (hash value)
     (i64.or (i64.left_shifted 32 (..start value))
             (..end value)))))

(template.with [<start> <end> <name>]
  [(the .public <name>
     Block
     (let [start (hex <start>)
           end (hex <end>)]
       (..block start (n.- start end))))]

  ... Normal blocks
  ["0000" "007F" basic_latin]
  ["00A0" "00FF" latin_1_supplement]
  ["0100" "017F" latin_extended_a]
  ["0180" "024F" latin_extended_b]
  ["0250" "02AF" ipa_extensions]
  ["02B0" "02FF" spacing_modifier_letters]
  ["0300" "036F" combining_diacritical_marks]
  ["0370" "03FF" greek_and_coptic]
  ["0400" "04FF" cyrillic]
  ["0500" "052F" cyrillic_supplementary]
  ["0530" "058F" armenian]
  ["0590" "05FF" hebrew]
  ["0600" "06FF" arabic]
  ["0700" "074F" syriac]
  ["0780" "07BF" thaana]
  ["0900" "097F" devanagari]
  ["0980" "09FF" bengali]
  ["0A00" "0A7F" gurmukhi]
  ["0A80" "0AFF" gujarati]
  ["0B00" "0B7F" oriya]
  ["0B80" "0BFF" tamil]
  ["0C00" "0C7F" telugu]
  ["0C80" "0CFF" kannada]
  ["0D00" "0D7F" malayalam]
  ["0D80" "0DFF" sinhala]
  ["0E00" "0E7F" thai]
  ["0E80" "0EFF" lao]
  ["0F00" "0FFF" tibetan]
  ["1000" "109F" myanmar]
  ["10A0" "10FF" georgian]
  ["1100" "11FF" hangul_jamo]
  ["1200" "137F" ethiopic]
  ["13A0" "13FF" cherokee]
  ["1400" "167F" unified_canadian_aboriginal_syllabics]
  ["1680" "169F" ogham]
  ["16A0" "16FF" runic]
  ["1700" "171F" tagalog]
  ["1720" "173F" hanunoo]
  ["1740" "175F" buhid]
  ["1760" "177F" tagbanwa]
  ["1780" "17FF" khmer]
  ["1800" "18AF" mongolian]
  ["1900" "194F" limbu]
  ["1950" "197F" tai_le]
  ["19E0" "19FF" khmer_symbols]
  ["1D00" "1D7F" phonetic_extensions]
  ["1E00" "1EFF" latin_extended_additional]
  ["1F00" "1FFF" greek_extended]
  ["2000" "206F" general_punctuation]
  ["2070" "209F" superscripts_and_subscripts]
  ["20A0" "20CF" currency_symbols]
  ["20D0" "20FF" combining_diacritical_marks_for_symbols]
  ["2100" "214F" letterlike_symbols]
  ["2150" "218F" number_forms]
  ["2190" "21FF" arrows]
  ["2200" "22FF" mathematical_operators]
  ["2300" "23FF" miscellaneous_technical]
  ["2400" "243F" control_pictures]
  ["2440" "245F" optical_character_recognition]
  ["2460" "24FF" enclosed_alphanumerics]
  ["2500" "257F" box_drawing]
  ["2580" "259F" block_elements]
  ["25A0" "25FF" geometric_shapes]
  ["2600" "26FF" miscellaneous_symbols]
  ["2700" "27BF" dingbats]
  ["27C0" "27EF" miscellaneous_mathematical_symbols_a]
  ["27F0" "27FF" supplemental_arrows_a]
  ["2800" "28FF" braille_patterns]
  ["2900" "297F" supplemental_arrows_b]
  ["2980" "29FF" miscellaneous_mathematical_symbols_b]
  ["2A00" "2AFF" supplemental_mathematical_operators]
  ["2B00" "2BFF" miscellaneous_symbols_and_arrows]
  ["2E80" "2EFF" cjk_radicals_supplement]
  ["2F00" "2FDF" kangxi_radicals]
  ["2FF0" "2FFF" ideographic_description_characters]
  ["3000" "303F" cjk_symbols_and_punctuation]
  ["3040" "309F" hiragana]
  ["30A0" "30FF" katakana]
  ["3100" "312F" bopomofo]
  ["3130" "318F" hangul_compatibility_jamo]
  ["3190" "319F" kanbun]
  ["31A0" "31BF" bopomofo_extended]
  ["31F0" "31FF" katakana_phonetic_extensions]
  ["3200" "32FF" enclosed_cjk_letters_and_months]
  ["3300" "33FF" cjk_compatibility]
  ["3400" "4DBF" cjk_unified_ideographs_extension_a]
  ["4DC0" "4DFF" yijing_hexagram_symbols]
  ["4E00" "9FFF" cjk_unified_ideographs]
  ["A000" "A48F" yi_syllables]
  ["A490" "A4CF" yi_radicals]
  ["AC00" "D7AF" hangul_syllables]
  ["D800" "DB7F" high_surrogates]
  ["DB80" "DBFF" high_private_use_surrogates]
  ["DC00" "DFFF" low_surrogates]
  ["E000" "F8FF" private_use_area]
  ["F900" "FAFF" cjk_compatibility_ideographs]
  ["FB00" "FB4F" alphabetic_presentation_forms]
  ["FB50" "FDFF" arabic_presentation_forms_a]
  ["FE00" "FE0F" variation_selectors]
  ["FE20" "FE2F" combining_half_marks]
  ["FE30" "FE4F" cjk_compatibility_forms]
  ["FE50" "FE6F" small_form_variants]
  ["FE70" "FEFF" arabic_presentation_forms_b]
  ["FF00" "FFEF" halfwidth_and_fullwidth_forms]
  ["FFF0" "FFFF" specials]
  
  ... ["10000" "1007F" linear_b_syllabary]
  ... ["10080" "100FF" linear_b_ideograms]
  ... ["10100" "1013F" aegean_numbers]
  ... ["10300" "1032F" old_italic]
  ... ["10330" "1034F" gothic]
  ... ["10380" "1039F" ugaritic]
  ... ["10400" "1044F" deseret]
  ... ["10450" "1047F" shavian]
  ... ["10480" "104AF" osmanya]
  ... ["10800" "1083F" cypriot_syllabary]
  ... ["1D000" "1D0FF" byzantine_musical_symbols]
  ... ["1D100" "1D1FF" musical_symbols]
  ... ["1D300" "1D35F" tai_xuan_jing_symbols]
  ... ["1D400" "1D7FF" mathematical_alphanumeric_symbols]
  ... ["20000" "2A6DF" cjk_unified_ideographs_extension_b]
  ... ["2F800" "2FA1F" cjk_compatibility_ideographs_supplement]
  ... ["E0000" "E007F" tags]

  ... Specialized blocks
  ["0030" "0039" numeric]
  ["0041" "005A" upper_case]
  ["0061" "007A" lower_case]
  )
