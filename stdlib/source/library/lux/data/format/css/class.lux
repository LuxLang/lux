(.using
 [library
  [lux "*"
   ["[0]" meta]
   [abstract
    [monad {"+" do}]]
   [data
    ["[0]" text ("[1]#[0]" hash)
     ["%" format {"+" format}]]]
   [macro
    [syntax {"+" syntax:}]
    ["[0]" code]]
   [type
    [primitive "*"]]]])

(primitive: .public Class
  Text

  (def: .public class
    (-> Class Text)
    (|>> representation))

  (def: .public custom
    (-> Text Class)
    (|>> abstraction))

  (syntax: .public (generic [])
    (do meta.monad
      [module meta.current_module_name
       class meta.seed]
      (in (list (` (..custom (~ (code.text (format "c" (%.nat_16 class)
                                                   "_" (%.nat_16 (text#hash module)))))))))))
  )
