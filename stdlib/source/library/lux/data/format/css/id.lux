(.using
 [library
  [lux "*"
   ["[0]" meta]
   [abstract
    [monad {"+" do}]]
   [data
    ["[0]" text ("[1]#[0]" hash)
     ["%" format {"+" format}]]]
   [macro
    [syntax {"+" syntax:}]
    ["[0]" code]]
   [type
    abstract]]])

(abstract: .public ID
  Text

  (def: .public id
    (-> ID Text)
    (|>> :representation))

  (def: .public custom
    (-> Text ID)
    (|>> :abstraction))

  (syntax: .public (generic [])
    (do meta.monad
      [module meta.current_module_name
       id meta.seed]
      (in (list (` (..custom (~ (code.text (format "i" (%.nat/16 id)
                                                   "_" (%.nat/16 (text#hash module)))))))))))
  )
