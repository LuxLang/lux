... This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
... If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.

(.using
 [library
  [lux (.except macro
                its revised has
                as
                when)]])

(the macro
  (<| (.in_module# .prelude)
      .template#macro))

(the with_template
  (<| (.in_module# .prelude)
      .with_template))

(the Its
  (macro (_ context focus)
    [(-> context
         focus)]))

(the Has
  (macro (_ context focus)
    [(-> [focus context]
         context)]))

(every .public (Lens context focus)
  (Record
   [#its (Its context focus)
    #has (Has context focus)]))

(the .public (lens its has)
  (for_any (_ context focus)
    (-> (Its context focus) (Has context focus)
        (Lens context focus)))
  [#its its
   #has has])

(the .public its
  (for_any (_ context focus)
    (-> (Lens context focus)
        (Its context focus)))
  (.its #its))

(the .public (has lens value context)
  (for_any (_ context focus)
    (-> (Lens context focus) focus
        (Change context)))
  (by lens #has [value context]))

(the .public (revised lens change context)
  (for_any (_ context focus)
    (-> (Lens context focus) (Change focus)
        (Change context)))
  (by lens #has [(change (its lens context)) context]))

(the .public (composite outer inner)
  (for_any (_ outermost middle innermost)
    (-> (Lens outermost middle) (Lens middle innermost)
        (Lens outermost innermost)))
  [#its (|>> (its outer)
             (its inner))
   #has (function (_ [focus context])
          (revised outer (has inner focus) context))])

(the As
  (macro (_ it alternative)
    [(-> it
         alternative)]))

(the Of
  (macro (_ it alternative)
    [(-> alternative
         it)]))

(every .public (View it alternative)
  (Record
   [#as (As it alternative)
    #of (Of it alternative)]))

(the .public (view as of)
  (for_any (_ it alternative)
    (-> (As it alternative) (Of it alternative)
        (View it alternative)))
  [#as as
   #of of])

(with_template [,name ,type ,tag]
  [(the .public ,name
     (for_any (_ it alternative)
       (-> (View it alternative)
           (,type it alternative)))
     (.its ,tag))]

  [as As #as]
  [of Of #of]
  )

(the When
  (macro (_ context case)
    [(-> context
         (Or context case))]))

(the Some
  (macro (_ context case)
    [(-> case
         context)]))

(every .public (Prism context case)
  (Record
   [#when (When context case)
    #some (Some context case)]))

(the .public (prism when some)
  (for_any (_ context case)
    (-> (When context case) (Some context case)
        (Prism context case)))
  [#when when
   #some some])

(with_template [,name ,type ,tag]
  [(the .public ,name
     (for_any (_ context case)
       (-> (Prism context case)
           (,type context case)))
     (.its ,tag))]

  [when When #when]
  [some Some #some]
  )
