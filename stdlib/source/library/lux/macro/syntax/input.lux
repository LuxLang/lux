(.module:
  [library
   [lux "*"
    [abstract
     [equivalence {"+" [Equivalence]}]]
    [control
     ["<>" parser
      ["<[0]>" code {"+" [Parser]}]]]
    [data
     ["[0]" product]]
    [macro
     ["[0]" code]]]])

(type: .public Input
  (Record
   [#binding Code
    #type Code]))

(def: .public equivalence
  (Equivalence Input)
  ($_ product.equivalence
      code.equivalence
      code.equivalence
      ))

(def: .public (format value)
  (-> Input Code)
  (code.record
   (list [(value@ #binding value)
          (value@ #type value)])))

(def: .public parser
  (Parser Input)
  (<code>.record
   ($_ <>.and
       <code>.any
       <code>.any
       )))
