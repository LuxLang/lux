(.module:
  [library
   [lux "*"
    [abstract
     [monad {"+" [do]}]]
    [control
     ["<>" parser
      ["<[0]>" code {"+" [Parser]}]]]]])

(def: .public default_policy
  Code
  (` .private))

(def: policy
  (Parser Code)
  (do [! <>.monad]
    [candiate <code>.next]
    (case candiate
      [_ {.#Identifier ["" _]}]
      (in default_policy)
      
      (^or [_ {.#Bit _}]
           [_ {.#Identifier _}])
      (do !
        [_ <code>.any]
        (in candiate))
      
      _
      (in default_policy))))

(def: .public parser
  (All (_ a) (-> (Parser a) (Parser [Code a])))
  (<>.and ..policy))
