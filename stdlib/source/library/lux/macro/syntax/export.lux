(.using
 [library
  [lux (.full)
   [abstract
    [monad (.only do)]]
   [control
    ["<>" parser (.only)
     ["<[0]>" code (.only Parser)]]]
   [macro
    ["^" pattern]]]])

(def: .public default_policy
  Code
  (` .private))

(def: policy
  (Parser Code)
  (do [! <>.monad]
    [candidate <code>.next]
    (case candidate
      [_ {.#Symbol ["" _]}]
      (in default_policy)
      
      (^.or [_ {.#Bit _}]
            [_ {.#Symbol _}])
      (do !
        [_ <code>.any]
        (in candidate))
      
      _
      (in default_policy))))

(def: .public parser
  (All (_ a) (-> (Parser a) (Parser [Code a])))
  (<>.and ..policy))
