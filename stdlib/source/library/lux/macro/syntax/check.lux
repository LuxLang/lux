(.using
  [library
   [lux "*"
    ["[0]" meta]
    [abstract
     [equivalence {"+" Equivalence}]
     [monad {"+" do}]]
    [control
     ["[0]" exception {"+" exception:}]
     ["<>" parser
      ["<[0]>" code {"+" Parser}]]]
    [data
     ["[0]" product]]
    [macro
     ["[0]" code]]]])

(def: extension
  "lux check")

(type: .public Check
  (Record
   [#type Code
    #value Code]))

(def: .public equivalence
  (Equivalence Check)
  ($_ product.equivalence
      code.equivalence
      code.equivalence
      ))

(def: .public (format (^open "_[0]"))
  (-> Check Code)
  (` ((~ (code.text ..extension))
      (~ _#type)
      (~ _#value))))

(def: .public parser
  (Parser Check)
  (<| <code>.form
      (<>.after (<code>.text! ..extension))
      (<>.and <code>.any
              <code>.any)))
