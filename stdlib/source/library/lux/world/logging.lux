... This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
... If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.

(.require
 [library
  [lux (.except with)
   [abstract
    [monad (.only Monad do)]]
   [control
    ["[0]" try (.only Try)]]
   [data
    [color
     ["[0]" terminal]]
    [text
     ["%" \\format]]]
   [world
    ["[0]" console (.only Console)]
    [time
     [instant (.only Instant)]]]]])

(type .public (Logger !)
  (Interface
   (is (-> Text
           (! (Try Any)))
       log)))

(with_template [<prefix> <name> <foreground>]
  [(def .public (<name> message it)
     (All (_ !)
       (-> Text (Logger !)
           (! (Try Any))))
     (of it log (terminal.with <foreground>
                  (%.format <prefix> message))))]

  ["[ERROR]   " error terminal.red_foreground]
  ["[WARNING] " warn terminal.yellow_foreground]
  ["[INFO]    " info terminal.white_foreground]
  ["[DEBUG]   " debug terminal.cyan_foreground]
  )

(def .public (with scope it)
  (All (_ !)
    (-> (-> Text Text)
        (-> (Logger !) (Logger !))))
  (implementation
   (def log
     (|>> scope
          (of it log)))))

(def .public (timed ! now it)
  (All (_ !)
    (-> (Monad !) (-> Any (! Instant))
        (-> (Logger !) (Logger !))))
  (implementation
   (def (log message)
     (do !
       [now (now [])]
       (of it log (%.format (terminal.with terminal.green_foreground
                              (%.format "[" (%.instant now) "]"))
                            " "
                            message))))))

(def .public (console it)
  (All (_ !)
    (-> (Console !)
        (Logger !)))
  (implementation
   (def (log message)
     (console.write_line message it))))
