(.using
  [library
   [lux "*"
    [control
     [try {"+" Try}]
     [concurrency
      [frp {"+" Channel}]]
     [parser
      ["[0]" environment {"+" Environment}]]]
    [data
     [binary {"+" Binary}]]]]
  [// {"+" URL}
   [uri {"+" URI}]])

(type: .public Version
  Text)

(type: .public Method
  (Variant
   {#Post}
   {#Get}
   {#Put}
   {#Patch}
   {#Delete}
   {#Head}
   {#Connect}
   {#Options}
   {#Trace}))

(type: .public Port
  Nat)

(type: .public Status
  Nat)

(type: .public Headers
  Environment)

(def: .public empty
  Headers
  environment.empty)

(type: .public Header
  (-> Headers Headers))

(type: .public (Body !)
  (-> (Maybe Nat) (! (Try [Nat Binary]))))

(type: .public Scheme
  (Variant
   {#HTTP}
   {#HTTPS}))

(type: .public Address
  (Record
   [#port Port
    #host Text]))

(type: .public Identification
  (Record
   [#local  Address
    #remote Address]))

(type: .public Protocol
  (Record
   [#version Version
    #scheme  Scheme]))

(type: .public Resource
  (Record
   [#method Method
    #uri    URI]))

(type: .public (Message !)
  (Record
   [#headers Headers
    #body    (Body !)]))

(type: .public (Request !)
  [Identification Protocol Resource (Message !)])

(type: .public (Response !)
  [Status (Message !)])

(type: .public (Server !)
  (-> (Request !) (! (Response !))))
