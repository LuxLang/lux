... This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
... If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.

(.using
 [library
  [lux (.except #version text)
   [abstract
    [monad (.only Monad)]]
   [error
    ["[0]" try]]
   [data
    ["[0]" binary (.only Binary)]
    [text
     [encoding
      ["[0]" utf8 (.use "[1]#[0]" binary)]]]
    [format
     ["[0]" json (.only JSON) (.use "[1]#[0]" format)]]]
   [macro
    ["[0]" template]]]]
 ["[0]" // (.only Method Body)
  ["[0]" version (.only Version)]
  ["[0]" header (.only Header)]
  ["/[1]" // (.only Address)
   ["[0]" mime]
   [uri (.only URI)
    ["[0]" scheme (.only Scheme)]
    ["[0]" query (.only Query) (.use "[1]#[0]" text)]]]])

(every .public Identification
  (Record
   [#local Address
    #remote Address]))

(every .public Protocol
  (Record
   [#version Version
    #scheme Scheme]))

(every .public Resource
  (Record
   [#method Method
    #uri URI]))

(every .public (Request !)
  (Record
   [#identification Identification
    #protocol Protocol
    #resource Resource
    #message (//.Message !)]))

(the (body ! it)
  (for_any (_ !)
    (-> (Monad !) Binary
        (//.Body !)))
  (function (_ _)
    (by ! pure {try.#Success [(binary.size it) it]})))

(the .public (utf8 ! it)
  (for_any (_ !)
    (-> (Monad !) Text
        (Request !)))
  [#identification [#local [///.#host ""
                            ///.#port 0]
                    #remote [///.#host ""
                             ///.#port 0]]
   #protocol [#version version.v1_1
              #scheme scheme.http]
   #resource [#method {//.#Post}
              #uri ""]
   #message [//.#headers (|> header.empty
                             (header.has header.content_type mime.utf_8))
             //.#body (body ! (utf8#as it))]])

(the .public text ..utf8)

(the .public (json ! it)
  (for_any (_ !)
    (-> (Monad !) JSON
        (Request !)))
  [#identification [#local [///.#host ""
                            ///.#port 0]
                    #remote [///.#host ""
                             ///.#port 0]]
   #protocol [#version version.v1_1
              #scheme scheme.http]
   #resource [#method {//.#Post}
              #uri ""]
   #message [//.#headers (|> header.empty
                             (header.has header.content_type mime.json))
             //.#body (body ! (utf8#as (json#as it)))]])

(the .public (form ! it)
  (for_any (_ !)
    (-> (Monad !) Query
        (Request !)))
  [#identification [#local [///.#host ""
                            ///.#port 0]
                    #remote [///.#host ""
                             ///.#port 0]]
   #protocol [#version version.v1_1
              #scheme scheme.http]
   #resource [#method {//.#Post}
              #uri ""]
   #message [//.#headers (|> header.empty
                             (header.has header.content_type mime.form))
             //.#body (body ! (utf8#as (query#as it)))]])

(template.with [<name> <scheme>]
  [(the .public <name>
     (for_any (_ !)
       (-> (Request !)
           (Request !)))
     (|>> (has [#protocol #scheme] <scheme>)))]

  [[http scheme.http]
   [https scheme.https]])

(template.with [<name> <method>]
  [(the .public <name>
     (for_any (_ !)
       (-> (Request !)
           (Request !)))
     (has [#resource #method] {<method>}))]

  [[post //.#Post]
   [get //.#Get]
   [put //.#Put]
   [patch //.#Patch]
   [delete //.#Delete]
   [head //.#Head]
   [connect //.#Connect]
   [options //.#Options]
   [trace //.#Trace]])

(the .public (uri it)
  (for_any (_ !)
    (-> URI (Request !)
        (Request !)))
  (|>> (has [#resource #uri] it)))

(the .public (with_header it value)
  (for_any (_ ! it)
    (-> (Header it) it (Request !)
        (Request !)))
  (|>> (revised [#message //.#headers] (header.has it value))))
