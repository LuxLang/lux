(.require
 [library
  [lux (.except list)
   ["$" documentation]
   [data
    ["[0]" text (.only \n)
     ["%" \\format (.only format)]]]
   [macro
    ["[0]" template]]]]
 [\\library
  ["[0]" /]]
 ["[0]" /
  ["[1][0]" finger]
  ["[1][0]" zipper]])

(.def .public documentation
  (.List $.Module)
  ($.module /._
            ""
            [($.default /.equivalence)
             ($.default /.functor)
             ($.default /.mix)

             ($.documentation (/.Tree it)
               "A generic tree data-structure.")

             ($.documentation /.flat
               "All the leaf values of the tree, in order."
               [(flat tree)])

             ($.documentation /.leaf
               ""
               [(leaf value)])

             ($.documentation /.branch
               ""
               [(branch value children)])

             ($.documentation /.tree
               "Tree literals."
               [(is (Tree Nat)
                    (tree 12
                          {34 {}
                              56 {}
                              78 {90 {}}}))])]
            [/finger.documentation
             /zipper.documentation]))
