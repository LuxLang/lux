(.require
 [library
  [lux (.except)
   ["$" documentation]
   [data
    [collection
     ["[0]" list]]]]]
 [\\library
  ["[0]" /]]
 ["[0]" /
  ["[1][0]" priority]])

(def .public documentation
  (List $.Documentation)
  (list.partial ($.module /._
                          "")

                ($.definition /.empty)
                ($.definition /.size)
                ($.definition /.empty?)
                ($.definition /.equivalence)
                ($.definition /.functor)

                ($.definition (/.Queue it)
                  "A first-in, first-out sequential data-structure.")

                ($.definition /.of_list
                  ""
                  ($.example (of_list entries)))

                ($.definition /.list
                  ""
                  ($.example (list queue)))

                ($.definition /.front
                  "Yields the first value in the queue, if any.")

                ($.definition /.member?
                  ""
                  ($.example (member? equivalence queue member)))

                ($.definition /.next
                  ""
                  ($.example (next queue)))

                ($.definition /.end
                  ""
                  ($.example (end val queue)))

                /priority.documentation
                ))
