(.require
 [library
  [lux (.except list)
   ["$" documentation]]]
 [\\library
  ["[0]" /]]
 ["[0]" /
  ["[1][0]" priority]])

(.def .public documentation
  (.List $.Module)
  ($.module /._
            ""
            [($.default /.empty)
             ($.default /.size)
             ($.default /.empty?)
             ($.default /.equivalence)
             ($.default /.functor)

             ($.definition (/.Queue it)
               "A first-in, first-out sequential data-structure.")

             ($.definition /.of_list
               ""
               [(of_list entries)])

             ($.definition /.list
               ""
               [(list queue)])

             ($.definition /.front
               "Yields the first value in the queue, if any.")

             ($.definition /.member?
               ""
               [(member? equivalence queue member)])

             ($.definition /.next
               ""
               [(next queue)])

             ($.definition /.end
               ""
               [(end val queue)])]
            [/priority.documentation]))
