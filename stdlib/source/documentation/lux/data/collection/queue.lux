(.require
 [library
  [lux (.except list)
   ["$" documentation]
   [data
    ["[0]" text (.only \n)
     ["%" \\format (.only format)]]]
   [macro
    ["[0]" code]
    ["[0]" template]]]]
 [\\library
  ["[0]" /]]
 ["[0]" /
  ["[1][0]" priority]])

(.def .public documentation
  (.List $.Module)
  ($.module /._
            ""
            [($.default /.empty)
             ($.default /.size)
             ($.default /.empty?)
             ($.default /.equivalence)
             ($.default /.functor)

             ($.documentation (/.Queue it)
               "A first-in, first-out sequential data-structure.")

             ($.documentation /.of_list
               ""
               [(of_list entries)])

             ($.documentation /.list
               ""
               [(list queue)])

             ($.documentation /.front
               "Yields the first value in the queue, if any.")

             ($.documentation /.member?
               ""
               [(member? equivalence queue member)])

             ($.documentation /.next
               ""
               [(next queue)])

             ($.documentation /.end
               ""
               [(end val queue)])]
            [/priority.documentation]))
