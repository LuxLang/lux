(.module:
  [library
   [lux (#- list)
    ["$" documentation (#+ documentation:)]
    [control
     ["<>" parser
      ["<.>" code]]]
    [data
     ["." text (#+ \n)
      ["%" format (#+ format)]]]
    [macro
     [syntax (#+ syntax:)]
     ["." code]
     ["." template]]]]
  [\\library
   ["." /]]
  ["." / #_
   ["#." priority]])

(documentation: /.Queue
  "A first-in, first-out sequential data-structure.")

(documentation: /.of_list
  ""
  [(of_list entries)])

(documentation: /.list
  ""
  [(list queue)])

(documentation: /.front
  "Yields the first value in the queue, if any.")

(documentation: /.member?
  ""
  [(member? equivalence queue member)])

(documentation: /.next
  ""
  [(next queue)])

(documentation: /.end
  ""
  [(end val queue)])

(.def: .public documentation
  (.List $.Module)
  ($.module /._
            ""
            [..Queue
             ..of_list
             ..list
             ..front
             ..member?
             ..next
             ..end
             ($.default /.empty)
             ($.default /.size)
             ($.default /.empty?)
             ($.default /.equivalence)
             ($.default /.functor)]
            [/priority.documentation]))
