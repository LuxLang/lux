(.require
 [library
  [lux (.except)
   ["$" documentation]
   [data
    [text (.only \n)
     ["%" \\format (.only format)]]]
   [macro
    ["[0]" template]]]]
 [\\library
  ["[0]" /]])

(.def .public documentation
  (.List $.Module)
  ($.module /._
            ""
            [($.default /.no)
             ($.default /.yes)
             ($.default /.off)
             ($.default /.on)
             ($.default /.equivalence)
             ($.default /.hash)
             ($.default /.disjunction)
             ($.default /.conjunction)
             ($.default /.codec)

             ($.documentation /.complement
               (format "Generates the complement of a predicate."
                       \n "That is a predicate that returns the oposite of the original predicate."))]
            []))
