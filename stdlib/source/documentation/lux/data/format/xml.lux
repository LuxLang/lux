(.require
 [library
  [lux (.except)
   ["$" documentation]
   [data
    [text (.only \n)
     ["%" \\format (.only format)]]]]]
 ["[0]" \\parser]
 [\\library
  ["[0]" /]])

(.def \\parser
  (.List $.Module)
  ($.module \\parser._
            ""
            [($.default \\parser.empty_input)
             ($.default \\parser.unexpected_input)
             ($.default \\parser.wrong_tag)
             ($.default \\parser.unknown_attribute)
             ($.default \\parser.unconsumed_inputs)
             ($.default \\parser.nowhere)

             ($.definition (\\parser.Parser it)
               "A parser of XML-encoded data.")

             ($.definition \\parser.result
               (format "Applies a parser against a stream of XML documents."
                       \n "Verifies that all of the inputs are consumed by the parser.")
               [(result parser documents)])

             ($.definition \\parser.text
               "Yields text from a text node.")

             ($.definition \\parser.tag
               "Yields the tag from the next node.")

             ($.definition \\parser.attribute
               "Yields the value of an attribute in the current node."
               [(attribute name)])

             ($.definition \\parser.node
               "Parses the contents of the next node if the tag matches."
               [(node expected parser)])

             ($.definition \\parser.any
               "Yields the next node.")

             ($.definition \\parser.somewhere
               "Applies the parser somewhere among the remaining inputs; instead of demanding that the parser succeeds against the immediate inputs."
               [(somewhere parser)])]
            []))

(.def .public documentation
  (.List $.Module)
  ($.module /._
            ""
            [($.default /.Tag)
             ($.default /.Attribute)
             ($.default /.Attrs)
             ($.default /.XML)
             ($.default /.codec)
             ($.default /.equivalence)

             ($.definition /.attributes
               "An empty set of XML attributes.")

             ($.definition /.tag
               "The text format of a XML tag."
               [(tag name)])

             ($.definition /.attribute
               "The text format of a XML attribute.")]
            [..\\parser]))
