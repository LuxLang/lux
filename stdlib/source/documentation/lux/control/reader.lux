(.require
 [library
  [lux (.except local)
   ["$" documentation]
   [data
    [text (.only \n)
     ["%" \\format (.only format)]]]]]
 [\\library
  ["[0]" /]])

(.def .public documentation
  (.List $.Module)
  ($.module /._
            ""
            [($.default /.functor)
             ($.default /.apply)
             ($.default /.monad)

             ($.documentation (/.Reader environment it)
               "Computations that have access to some environmental value.")

             ($.documentation /.read
               "Get the environment.")

             ($.documentation /.local
               "Run computation with a locally-modified environment."
               [(local change proc)])

             ($.documentation /.result
               "Executes the reader against the given environment."
               [(result env proc)])

             ($.documentation /.with
               "Monad transformer for Reader."
               [(with monad)])

             ($.documentation /.lifted
               "Lift monadic values to the Reader wrapper.")]
            []))
