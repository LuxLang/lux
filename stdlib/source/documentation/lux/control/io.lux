(.module:
  [library
   [lux (#- if loop)
    ["$" documentation (#+ documentation:)]
    [data
     [text (#+ \n)
      ["%" format (#+ format)]]]
    [macro
     ["." template]]]]
  [\\library
   ["." /]])

(documentation: /.IO
  "A type that represents synchronous, effectful computations that may interact with the outside world.")

(documentation: /.io
  (format "Delays the evaluation of an expression, by wrapping it in an IO 'thunk'."
          \n "Great for wrapping effectful computations (which will not be performed until the IO is 'run!').")
  [(io (exec
         (log! msg)
         "Some value..."))])

(documentation: /.run!
  "A way to execute IO computations and perform their side-effects.")

(.def: .public documentation
  (.List $.Module)
  ($.module /._
            ""
            [..IO
             ..io
             ..run!
             ($.default /.functor)
             ($.default /.apply)
             ($.default /.monad)]
            []))
