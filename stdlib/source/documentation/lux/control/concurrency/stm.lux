... This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
... If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.

(.using
 [library
  [lux (.except)
   ["$" documentation]
   [data
    [text (.only \n)
     ["%" \\injection]]]]]
 [\\library
  ["[0]" /]])

(the .public documentation
  (.List $.Documentation)
  (list ($.module /._
                  "")

        ($.definition /.read)
        ($.definition /.write)
        ($.definition /.functor)
        ($.definition /.apply)
        ($.definition /.monad)

        ($.definition (/.Var it)
          "A mutable cell containing a value, and observers that will be alerted of any change to it.")

        ($.definition /.var
          "Creates a new STM var, with a default value."
          ($.example (' (var value))))

        ($.definition /.changes
          "Creates a channel that will receive all changes to the value of the given var."
          ($.example (' (changes target))))

        ($.definition (/.STM it)
          "A computation which updates a transaction and produces a value.")

        ($.definition /.update
          "Update a var's value, and return a tuple with the old and the new values."
          ($.example (' (update function var))))

        ($.definition /.commit!
          (%.message "Commits a transaction and returns its result (asynchronously)."
                     \n "Note that a transaction may be re-run an indeterminate number of times if other transactions involving the same variables successfully commit first."
                     \n "For this reason, it's important to note that transactions must be free from side-effects, such as I/O.")
          ($.example (' (commit! procedure))))
        ))
