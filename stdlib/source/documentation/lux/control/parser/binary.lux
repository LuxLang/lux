(.using
 [library
  [lux {"-" list}
   ["$" documentation {"+" documentation:}]
   [data
    [text {"+" \n}
     ["%" format {"+" format}]]]
   [macro
    ["[0]" template]]]]
 [\\library
  ["[0]" /]])

(documentation: /.Offset
  "An offset for reading within binary data.")

(documentation: (/.Parser it)
  "A parser for raw binary data.")

(documentation: /.result
  "Runs a parser and checks that all the binary data was read by it."
  [(result parser input)])

(documentation: /.end?
  "Checks whether there is no more data to read.")

(documentation: /.offset
  "The current offset (i.e. how much data has been read).")

(documentation: /.remaining
  "How much of the data remains to be read.")

(documentation: /.Size
  "The size of a chunk of data within a binary array.")

(documentation: /.rec
  "Tie the knot for a recursive parser.")

(documentation: /.any
  "Does no parsing, and just returns a dummy value.")

(documentation: /.segment
  "Parses a chunk of data of a given size."
  [(segment size)])

(template [<size> <name>]
  [(documentation: <name>
     (format "Parses a block of data prefixed with a size that is " (%.nat <size>) " bytes long."))]

  [08 /.binary_8]
  [16 /.binary_16]
  [32 /.binary_32]
  [64 /.binary_64]
  )

(template [<size> <name>]
  [(documentation: <name>
     (format "Parses a block of (UTF-8 encoded) text prefixed with a size that is " (%.nat <size>) " bytes long."))]

  [08 /.utf8_8]
  [16 /.utf8_16]
  [32 /.utf8_32]
  [64 /.utf8_64]
  )

(template [<size> <name>]
  [(documentation: <name>
     (format "Parses a sequence of values prefixed with a size that is " (%.nat <size>) " bytes long."))]

  [08 /.sequence_8]
  [16 /.sequence_16]
  [32 /.sequence_32]
  [64 /.sequence_64]
  )

(documentation: /.list
  "Parses an arbitrarily long list of values."
  [(list value)])

(documentation: /.set
  ""
  [(set hash value)])

(.def: .public documentation
  (.List $.Module)
  ($.module /._
            ""
            [..Offset
             ..Parser
             ..result
             ..end?
             ..offset
             ..remaining
             ..Size
             ..rec
             ..any
             ..segment

             ..binary_8
             ..binary_16
             ..binary_32
             ..binary_64
             
             ..utf8_8
             ..utf8_16
             ..utf8_32
             ..utf8_64
             
             ..sequence_8
             ..sequence_16
             ..sequence_32
             ..sequence_64
             
             ..list
             ..set
             ($.default /.binary_was_not_fully_read)
             ($.default /.size_8)
             ($.default /.size_16)
             ($.default /.size_32)
             ($.default /.size_64)
             ($.default /.bits_8)
             ($.default /.bits_16)
             ($.default /.bits_32)
             ($.default /.bits_64)
             ($.default /.nat)
             ($.default /.int)
             ($.default /.rev)
             ($.default /.frac)
             ($.default /.invalid_tag)
             ($.default /.or)
             ($.default /.not_a_bit)
             ($.default /.bit)
             ($.default /.text)
             ($.default /.maybe)
             ($.default /.set_elements_are_not_unique)
             ($.default /.symbol)
             ($.default /.type)
             ($.default /.location)
             ($.default /.code)]
            []))
