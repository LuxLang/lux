(.require
 [library
  [lux (.except nat int rev)
   ["$" documentation]
   [data
    [text
     ["%" \\format (.only format)]]
    [collection
     ["[0]" list]]]]]
 [\\library
  ["[0]" /]])

(`` (.def .public documentation
      (.List $.Module)
      ($.module /._
                ""
                [(,, (with_template [<name> <type>]
                       [($.documentation <name>
                          (%.code (' (<name>
                                      (is <type>
                                          (value generating expression))))))]

                       [/.nat .Nat]
                       [/.int .Int]
                       [/.rev .Rev]
                       [/.frac .Frac]
                       [/.text .Text]
                       ))

                 ($.documentation /.literal
                   ""
                   [(/.literal
                     (is (-> ??? Code)
                         format)
                     (is ???
                         (value generating expression)))])

                 (,, (with_template [<name> <type>]
                       [($.documentation <name>
                          (%.code (' (is <type>
                                         (<name>)))))]

                       [/.random_nat .Nat]
                       [/.random_int .Int]
                       [/.random_rev .Rev]
                       [/.random_frac .Frac]
                       ))

                 ($.documentation /.random
                   ""
                   [(/.random
                     (is (-> ??? Code)
                         format)
                     (is (Random ???)
                         (random data generator)))])]
                [])))
