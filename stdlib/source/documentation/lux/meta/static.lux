(.require
 [library
  [lux (.except)
   ["$" documentation]
   [data
    [text
     ["%" \\format (.only format)]]
    [collection
     ["[0]" list]]]]]
 [\\library
  ["[0]" /]])

(`` (def .public documentation
      (List $.Documentation)
      (list ($.module /._
                      "")

            (,, (with_template [<name> <type>]
                  [($.definition <name>
                     (%.code (' (<name>
                                 (is <type>
                                     (value generating expression))))))]

                  [/.nat .Nat]
                  [/.int .Int]
                  [/.rev .Rev]
                  [/.frac .Frac]
                  [/.text .Text]
                  ))

            ($.definition /.literal
              ""
              [(/.literal
                (is (-> ??? Code)
                    format)
                (is ???
                    (value generating expression)))])

            (,, (with_template [<name> <type>]
                  [($.definition <name>
                     (%.code (' (is <type>
                                    (<name>)))))]

                  [/.random_nat .Nat]
                  [/.random_int .Int]
                  [/.random_rev .Rev]
                  [/.random_frac .Frac]
                  ))

            ($.definition /.random
              ""
              [(/.random
                (is (-> ??? Code)
                    format)
                (is (Random ???)
                    (random data generator)))])
            )))
