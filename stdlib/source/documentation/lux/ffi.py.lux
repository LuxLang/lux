(.require
 [library
  [lux (.except int char type)
   ["$" documentation (.only documentation:)]
   [data
    ["[0]" text (.only \n)
     ["%" \\format (.only format)]]]
   [macro
    ["[0]" template]]]]
 [\\library
  ["[0]" /]])

(documentation: /.import
  "Easily import types, methods, functions and constants."
  [(import os
     "[1]::[0]"
     ("static" F_OK Integer)
     ("static" R_OK Integer)
     ("static" W_OK Integer)
     ("static" X_OK Integer)

     ("static" mkdir [String] "io" "try" "?" Any)
     ("static" access [String Integer] "io" "try" Boolean)
     ("static" remove [String] "io" "try" "?" Any)
     ("static" rmdir [String] "io" "try" "?" Any)
     ("static" rename [String String] "io" "try" "?" Any)
     ("static" listdir [String] "io" "try" (Array String)))

   (import os/path
     "[1]::[0]"
     ("static" isfile [String] "io" "try" Boolean)
     ("static" isdir [String] "io" "try" Boolean)
     ("static" sep String)
     ("static" getsize [String] "io" "try" Integer)
     ("static" getmtime [String] "io" "try" Float))])

(documentation: /.lambda
  (format "Allows defining closures/anonymous-functions in the form that Python expects."
          \n "This is useful for adapting Lux functions for usage by Python code.")
  [(is ..Function
       (lambda [left right]
               (do_something (as Foo left)
                             (as Bar right))))])

(.def .public documentation
  (.List $.Module)
  ($.module /._
            ""
            [..import
             ..lambda
             ($.default (/.Object brand))
             ($.default /.None)
             ($.default /.Dict)
             ($.default /.Function)
             ($.default /.Boolean)
             ($.default /.Integer)
             ($.default /.Float)
             ($.default /.String)]
            []))
