(.module:
  [library
   [lux (#- int char type :as)
    ["$" documentation (#+ documentation:)]
    [data
     ["." text (#+ \n)
      ["%" format (#+ format)]]]
    [macro
     ["." template]]]]
  [\\library
   ["." /]])

(documentation: /.import:
  "Easily import types, methods, functions and constants."
  [(import: Stat
     ["#::."
      (executable? [] Bit)
      (size Int)])

   (import: File "as" RubyFile
     ["#::."
      ("static" SEPARATOR ..String)
      ("static" open [Path ..String] "io" "try" RubyFile)
      ("static" stat [Path] "io" "try" Stat)
      ("static" delete [Path] "io" "try" Int)
      ("static" file? [Path] "io" "try" Bit)
      ("static" directory? [Path] "io" "try" Bit)

      (read [] "io" "try" Binary)
      (write [Binary] "io" "try" Int)
      (flush [] "io" "try" "?" Any)
      (close [] "io" "try" "?" Any)])])

(.def: .public documentation
  (.List $.Module)
  ($.module /._
            ""
            [..import:
             ($.default (/.Object brand))
             ($.default /.Nil)
             ($.default /.Function)
             ($.default /.Function)
             ($.default /.Integer)
             ($.default /.Float)
             ($.default /.String)]
            []))
