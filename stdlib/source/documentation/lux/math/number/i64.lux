... This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
... If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.

(.using
 [library
  [lux (.except)
   ["$" documentation]
   [meta
    [macro
     ["[0]" template]]]]]
 [\\library
  ["[0]" /]])

(`` (the .public documentation
      (List $.Documentation)
      (list ($.module /._
                      "")

            ($.definition /.bits_per_byte)
            ($.definition /.bytes_per_i64)
            ($.definition /.width)
            ($.definition /.false)
            ($.definition /.true)
            ($.definition /.equivalence)
            ($.definition /.hash)
            ($.definition /.disjunction)
            ($.definition /.conjunction)
            ($.definition /.reversed)
            ($.definition /.left_rotated)
            ($.definition /.right_rotated)

            (,, (template.with [<name> <doc>]
                  [($.definition <name>
                     <doc>)]

                  [[/.or "Bitwise or."]
                   [/.xor "Bitwise xor."]
                   [/.and "Bitwise and."]
                   
                   [/.<< "Bitwise left-shift."]
                   [/.>> "Unsigned/logic bitwise right-shift."]]
                  ))

            ($.definition /.Mask
              "A pattern of bits that can be imposed on I64 values.")

            ($.definition /.bit
              "A mask with only a specific bit set."
              ($.example (' (bit position))))

            ($.definition /.sign
              "A mask for the sign bit of ints.")

            ($.definition /.not
              "Bitwise negation.")

            ($.definition /.mask
              "Mask a block of bits of the specified size."
              ($.example (' (mask amount_of_bits))))

            ($.definition /.ones
              "Count the number of 1s in a bit-map."
              ($.example (' (ones it))))

            (,, (template.with [<name> <doc>]
                  [($.definition <name>
                     <doc>)]

                  [[/.zero "Clear bit at the given index."]
                   [/.one "Set bit at given index."]
                   [/.flipped "Flip bit at given index."]]
                  ))

            ($.definition /.one?
              ""
              ($.example (' (one? index input))))

            ($.definition /.zero?
              ""
              ($.example (' (zero? index input))))

            ($.definition /.region
              "A mask for a block of bits of the given size, starting at the given offset."
              ($.example (' (region offset size))))

            ($.definition (/.Sub width)
              "A sub-space of I64 with a reduce amount of bits.")

            ($.definition /.sub
              "Given a width in the interval (0,64), yields an implementation for integers of that width."
              ($.example (' (sub width))))
            )))
