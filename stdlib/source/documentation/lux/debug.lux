(.require
 [library
  [lux (.except)
   ["$" documentation]
   [data
    ["[0]" text (.only \n)
     ["%" \\format (.only format)]]]]]
 [\\library
  ["[0]" /]])

(def .public documentation
  (.List $.Documentation)
  (list ($.module /._
                  "")

        ($.definition /.cannot_represent_value)
        ($.definition /.type_hole)
        ($.definition /.unknown_local_binding)

        ($.definition /.inspection
          "A best-effort attempt to generate a textual representation of a value, without knowing its type."
          ($.example (inspection value)))

        ($.definition /.representation
          "A best-effort attempt to generate a textual representation of a value, while knowing its type."
          ($.example (representation type value)))

        ($.definition /.private
          "Allows access to un-exported definitions in other modules."

          ($.comment "Module A")
          ($.example (def .private (secret_definition input)
                       (-> ??? ???)
                       (foo (bar (baz input)))))
          
          ($.comment "Module B")
          ($.example ((/.private secret_definition) my_input)))

        ($.definition /.log!
          "Prints/writes a message to standard output."
          ($.example (log! message)))

        ($.definition /.hole
          (format "A typed 'hole'."
                  \n "Reveals the type expected of the expression that should go in the hole.")
          ($.example (is (-> Nat Text)
                         (function (_ number)
                           (hole))))
          ($.comment "=>")
          ($.example .Text))

        ($.definition /.here
          "Shows the names and values of local bindings available around the call to 'here'."

          ($.example (let [foo 123
                           bar +456
                           baz +789.0]
                       (is Any
                           (here))))
          ($.comment "=>")
          ($.comment "foo: +123")
          ($.comment "bar: +456")
          ($.comment "baz: +789.0")
          ($.example [])
          
          ($.comment "Can optionally be given a list of definitions to focus on.")
          ($.comment "These definitions to focus on can include custom format to represent the values.")
          ($.example (let [foo 123
                           bar +456
                           baz +789.0]
                       (is Any
                           (here [foo %.nat] baz))))
          ($.comment "=>")
          ($.comment "foo: 123")
          ($.comment "baz: +789.0")
          ($.example []))
        ))
