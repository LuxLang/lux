(.module:
  [library
   [lux #*
    ["_" test (#+ Test)]
    [abstract
     [monad (#+ do)]]
    [math
     ["." random (#+ Random)]
     [number
      ["n" nat]]]]]
  [\\library
   ["." /]])

(def: #export (spec (^open "\.") random)
  (All [a] (-> (/.Hash a) (Random a) Test))
  (do random.monad
    [parameter random
     subject random]
    (_.cover [/.Hash]
             (if (\= parameter subject)
               (n.= (\hash parameter) (\hash subject))
               true))))
