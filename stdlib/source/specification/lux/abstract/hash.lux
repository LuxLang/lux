(.require
 [library
  [lux (.except)
   [abstract
    [monad (.only do)]]
   [math
    ["[0]" random (.only Random)]
    [number
     ["n" nat]]]
   [test
    ["_" property (.only Test)]]]]
 [\\library
  ["[0]" /]])

(def .public (spec (open "_#[0]") random)
  (All (_ a) (-> (/.Hash a) (Random a) Test))
  (do random.monad
    [parameter random
     subject random]
    (_.coverage [/.Hash]
      (if (_#= parameter subject)
        (n.= (_#hash parameter) (_#hash subject))
        true))))
