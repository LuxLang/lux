(.require
 [library
  [lux (.except)
   [abstract
    [monad (.only do)]
    [functor
     [\\test (.only Injection Comparison)]]]
   [math
    ["[0]" random]
    [number
     ["n" nat]]]
   [test
    ["_" property (.only Test)]]]]
 [\\library
  ["[0]" /]])

(def .public (spec injection comparison (open "/#[0]"))
  (All (_ f) (-> (Injection f) (Comparison f) (/.Mix f) Test))
  (do random.monad
    [subject random.nat
     parameter random.nat]
    (<| (_.for [/.Mix])
        (_.coverage [/.mix]
          (n.= (/#mix n.+ parameter (injection subject))
               (n.+ parameter subject))))))
