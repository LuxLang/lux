##  Copyright (c) Eduardo Julian. All rights reserved.
##  This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
##  If a copy of the MPL was not distributed with this file,
##  You can obtain one at http://mozilla.org/MPL/2.0/.

(;module:
  lux
  (lux (codata [io])
       (control monad
                comonad)
       (data identity
             [text "Text/" Monoid<Text>]))
  lux/test)

(test: "lux/data/identity exports"
  (all (match "yololol" (:: Functor<Identity> map (Text/append "yolo") "lol"))
       
       (match "yolo" (:: Applicative<Identity> wrap "yolo"))
       (match "yololol" (let [(^open) Applicative<Identity>]
                          (apply (wrap (Text/append "yolo")) (wrap "lol"))))
       
       (match "yololol"
              (do Monad<Identity>
                [f (wrap Text/append)
                 a (wrap "yolo")
                 b (wrap "lol")]
                (wrap (f a b))))
       
       (match "yololol" (:: CoMonad<Identity> unwrap "yololol"))
       (match "yololol"
              (be CoMonad<Identity>
                [f Text/append
                 a "yolo"
                 b "lol"]
                (f a b)))
       ))
