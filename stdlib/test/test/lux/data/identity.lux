##  Copyright (c) Eduardo Julian. All rights reserved.
##  This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
##  If a copy of the MPL was not distributed with this file,
##  You can obtain one at http://mozilla.org/MPL/2.0/.

(;module:
  lux
  (lux (codata [io])
       (control monad
                comonad)
       (data ["&" identity]
             [text "Text/" Monoid<Text> Eq<Text>]))
  lux/test)

(test: "Identity"
  (let [(^open "&/") &;Monad<Identity>
        (^open "&/") &;CoMonad<Identity>]
    ($_ seq
        (assert "Functor does not affect values."
                (Text/= "yololol" (&/map (Text/append "yolo") "lol")))
        
        (assert "Applicative does not affect values."
                (and (Text/= "yolo" (&/wrap "yolo"))
                     (Text/= "yololol" (&/apply (&/wrap (Text/append "yolo")) (&/wrap "lol")))))
        
        (assert "Monad does not affect values."
                (Text/= "yololol" (do &;Monad<Identity>
                                    [f (wrap Text/append)
                                     a (wrap "yolo")
                                     b (wrap "lol")]
                                    (wrap (f a b)))))
        
        (assert "CoMonad does not affect values."
                (and (Text/= "yololol" (&/unwrap "yololol"))
                     (Text/= "yololol" (be &;CoMonad<Identity>
                                         [f Text/append
                                          a "yolo"
                                          b "lol"]
                                         (f a b)))))
        )))
