(;module:
  lux
  (lux [io]
       (control monad
                pipe)
       (data text/format
             ["&" error]))
  lux/test)

(test: "Errors"
  (let [(^open "&/") &;Monad<Error>]
    ($_ seq
        (assert "Functor correctly handles both cases."
                (and (|> (: (&;Error Int) (#&;Success 10))
                         (&/map i.inc)
                         (case> (#&;Success 11) true _ false))

                     (|> (: (&;Error Int) (#&;Error "YOLO"))
                         (&/map i.inc)
                         (case> (#&;Error "YOLO") true _ false))
                     ))
        
        (assert "Applicative correctly handles both cases."
                (and (|> (&/wrap 20)
                         (case> (#&;Success 20) true _ false))
                     (|> (&/apply (&/wrap i.inc) (&/wrap 10))
                         (case> (#&;Success 11) true _ false))
                     (|> (&/apply (&/wrap i.inc) (#&;Error "YOLO"))
                         (case> (#&;Error "YOLO") true _ false))))
        
        (assert "Monad correctly handles both cases."
                (and (|> (do &;Monad<Error>
                           [f (wrap i.+)
                            a (wrap 10)
                            b (wrap 20)]
                           (wrap (f a b)))
                         (case> (#&;Success 30) true _ false))
                     (|> (do &;Monad<Error>
                           [f (wrap i.+)
                            a (#&;Error "YOLO")
                            b (wrap 20)]
                           (wrap (f a b)))
                         (case> (#&;Error "YOLO") true _ false))
                     ))
        )))

(test: "Monad transformer"
  (let [lift (&;lift-error io;Monad<IO>)
        (^open "io/") io;Monad<IO>]
    (assert "Can add error functionality to any monad."
            (|> (io;run (do (&;ErrorT io;Monad<IO>)
                          [a (lift (io/wrap 123))
                           b (wrap 456)]
                          (wrap (i.+ a b))))
                (case> (#&;Success 579) true
                       _ false)))))
