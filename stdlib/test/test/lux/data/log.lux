##  Copyright (c) Eduardo Julian. All rights reserved.
##  This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
##  If a copy of the MPL was not distributed with this file,
##  You can obtain one at http://mozilla.org/MPL/2.0/.

(;module:
  lux
  (lux (codata [io])
       (control monad)
       (data ["&" log]
             [text "Text/" Monoid<Text> Eq<Text>]
             [number]
             [product])
       (codata function))
  lux/test)

(test: "Logs"
  (let [(^open "&/") (&;Monad<Log> text;Monoid<Text>)]
    ($_ seq
        (assert "Functor respects Log."
                (i.= 11 (product;right (&/map i.inc ["" 10]))))
        
        (assert "Applicative respects Log."
                (and (i.= 20 (product;right (&/wrap 20)))
                     (i.= 30 (product;right (&/apply (&/wrap (i.+ 10)) (&/wrap 20))))))
        
        (assert "Monad respects Log."
                (i.= 30 (product;right (do (&;Monad<Log> text;Monoid<Text>)
                                         [f (wrap i.+)
                                          a (wrap 10)
                                          b (wrap 20)]
                                         (wrap (f a b))))))
        
        (assert "Can log any value."
                (Text/= "YOLO" (product;left (&;log "YOLO"))))
        )))
