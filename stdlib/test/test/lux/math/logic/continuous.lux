(.module:
  [lux #*
   [control
    [monad (#+ do)]]
   [io]
   [math
    ["r" random]
    [logic
     ["&" continuous]]]]
  lux/test)

(context: "Operations"
  (<| (times +100)
      (do @
        [left r.rev
         right r.rev]
        ($_ seq
            (test "AND is the minimum."
                  (let [result (&.~and left right)]
                    (and (r/<= left result)
                         (r/<= right result))))

            (test "OR is the maximum."
                  (let [result (&.~or left right)]
                    (and (r/>= left result)
                         (r/>= right result))))

            (test "Double negation results in the original value."
                  (r/= left (&.~not (&.~not left))))

            (test "Every value is equivalent to itself."
                  (and (r/>= left
                             (&.~= left left))
                       (r/>= right
                             (&.~= right right))))
            ))))
