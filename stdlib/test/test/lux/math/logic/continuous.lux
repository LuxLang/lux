(.module:
  lux
  (lux [io]
       (control [monad #+ do Monad])
       ["r" math/random]
       ["&" math/logic/continuous])
  lux/test)

(context: "Operations"
  (<| (times +100)
      (do @
        [left r.deg
         right r.deg]
        ($_ seq
            (test "AND is the minimum."
                  (let [result (&.~and left right)]
                    (and (d/<= left result)
                         (d/<= right result))))

            (test "OR is the maximum."
                  (let [result (&.~or left right)]
                    (and (d/>= left result)
                         (d/>= right result))))

            (test "Double negation results in the original value."
                  (d/= left (&.~not (&.~not left))))

            (test "Every value is equivalent to itself."
                  (and (d/>= left
                             (&.~= left left))
                       (d/>= right
                             (&.~= right right))))
            ))))
