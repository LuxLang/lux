(;module:
  lux
  (lux (control monad)
       (data [text "Text/" Monoid<Text>]
             text/format
             [number])
       (codata function
               io))
  lux/test)

(test: "lux/codata/io exports"
  (test-all (match "YOLO" (run (io "YOLO")))
            (match 11 (run (:: Functor<IO> map i.inc (io 10))))
            (match 10 (run (:: Applicative<IO> wrap 10)))
            (match 30 (run (let [(^open) Applicative<IO>]
                             (apply (wrap (i.+ 10)) (wrap 20)))))
            (match 30 (run (do Monad<IO>
                             [f (wrap i.+)
                              x (wrap 10)
                              y (wrap 20)]
                             (wrap (f x y)))))))
