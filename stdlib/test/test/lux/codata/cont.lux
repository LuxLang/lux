##  Copyright (c) Eduardo Julian. All rights reserved.
##  This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
##  If a copy of the MPL was not distributed with this file,
##  You can obtain one at http://mozilla.org/MPL/2.0/.

(;module:
  lux
  (lux [io]
       (control monad)
       (data [text "Text/" Monoid<Text>]
             text/format
             [number]
             [product])
       (codata function
               ["&" cont])
       ["R" random]
       pipe)
  lux/test)

(test: "Continuations"
  [sample R;nat
   #let [(^open "&/") &;Monad<Cont>]]
  ($_ seq
      (assert "Can run continuations to compute their values."
              (n.= sample (&;run (&;@lazy sample))))

      (assert "Can use functor."
              (n.= (n.inc sample) (&;run (&/map n.inc (&;@lazy sample)))))

      (assert "Can use applicative."
              (n.= (n.inc sample) (&;run (&/apply (&/wrap n.inc) (&/wrap sample)))))

      (assert "Can use monad."
              (n.= (n.inc sample) (&;run (do &;Monad<Cont>
                                           [func (wrap n.inc)
                                            arg (wrap sample)]
                                           (wrap (func arg))))))

      ## (assert "Can access current continuation."
      ##         (n.= (n.dec sample) (&;run (do &;Monad<Cont>
      ##                                      [func (wrap n.inc)
      ##                                       _ (&;call/cc (lambda [k] (k (n.dec sample))))
      ##                                       arg (wrap sample)]
      ##                                      (wrap (func arg))))))
      ))
