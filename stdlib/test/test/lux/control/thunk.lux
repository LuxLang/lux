(;module:
  lux
  (lux [io]
       (control ["M" monad #+ do Monad]
                ["&" thunk])
       ["R" math/random])
  lux/test)

(context: "Thunks"
  [left R;nat
   right R;nat
   #let [thunk (&;freeze (n.* left right))
         expected (n.* left right)]]
  ($_ seq
      (test "Thunking does not alter the expected value."
            (n.= expected
                 (&;thaw thunk)))
      (test "Thunks only evaluate once."
            (and (not (is expected
                          (&;thaw thunk)))
                 (is (&;thaw thunk)
                     (&;thaw thunk))))
      ))
