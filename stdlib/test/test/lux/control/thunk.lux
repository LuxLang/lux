(;module:
  lux
  (lux [io]
       (control monad
                ["&" thunk])
       ["R" math/random])
  lux/test)

(test: "Thunks"
  [left R;nat
   right R;nat
   #let [thunk (&;freeze (n.* left right))
         expected (n.* left right)]]
  ($_ seq
      (assert "Thunking does not alter the expected value."
              (n.= expected
                   (&;thaw thunk)))
      (assert "Thunks only evaluate once."
              (and (not (is expected
                            (&;thaw thunk)))
                   (is (&;thaw thunk)
                       (&;thaw thunk))))
      ))
