(.module:
  [lux #*
   [control
    ["/" equivalence]
    [monad (#+ do)]]
   [math
    ["r" random]]
   test])

(def: #export (spec Equivalence<a> generator)
  (All [a] (-> (/.Equivalence a) (r.Random a) Test))
  (do r.Monad<Random>
    [sample generator
     another generator]
    ($_ seq
        (test "Equivalence is reflexive."
              (:: Equivalence<a> = sample sample))
        (test "Equivalence is symmetric."
              (if (:: Equivalence<a> = sample another)
                (:: Equivalence<a> = another sample)
                #1)))))
