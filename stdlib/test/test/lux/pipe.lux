(;module:
  lux
  (lux (codata [io])
       (control monad)
       (data text/format
             [number]
             [product]
             identity)
       (codata function)
       pipe)
  lux/test)

(test: "lux/pipe exports"
  (test-all (match 1 (|> 20
                         (i.* 3)
                         (i.+ 4)
                         (_> 0 i.inc)))
            (match 10 (|> 5
                          (@> [(i.+ @ @)])))
            (match 15 (|> 5
                          (?> [i.even?] [(i.* 2)]
                              [i.odd?] [(i.* 3)]
                              [(_> -1)])))
            (match 15 (|> 5
                          (?> [i.even?] [(i.* 2)]
                              [i.odd?] [(i.* 3)])))
            (match 10 (|> 1
                          (!> [(i.< 10)]
                              [i.inc])))
            (match 20 (|> 5
                          (%> Monad<Identity>
                              [(i.* 3)]
                              [(i.+ 4)]
                              [i.inc])))
            (match "five" (|> 5
                              (case> 0 "zero"
                                     1 "one"
                                     2 "two"
                                     3 "three"
                                     4 "four"
                                     5 "five"
                                     6 "six"
                                     7 "seven"
                                     8 "eight"
                                     9 "nine"
                                     _ "???")))
            ))
