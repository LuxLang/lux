(;module:
  lux
  (lux (codata [io])
       (control monad)
       (data [text "Text/" Monoid<Text>]
             text/format
             [number]
             (struct [list "List/" Fold<List> Functor<List>])
             [product])
       (codata function)
       math)
  lux/test)

(test: "lux/math exports"
  (test-all (match 1.0 (cos 0.0))
            (match -1.0 (cos (/. 2.0 tau)))
            ## (match 0.0 (cos (/. 4.0 tau)))
            ## (match 0.0 (cos (*. (/. 4.0 3.0) tau)))

            (match 1.0 (sin (/. 4.0 tau)))
            (match -1.0 (sin (*. (/. 4.0 3.0) tau)))
            ## (match 0.0 (sin 0.0))
            ## (match 0.0 (sin (/. 2.0 tau)))

            (match 4 (ceil 3.75))
            (match 3 (floor 3.75))
            (match 4 (round 3.75))
            (match 3 (round 3.25))

            (match 3.0 (cbrt 27.0))
            (match 4.0 (sqrt 16.0))

            (match 90.0 (degrees (/. 4.0 tau)))
            (match true (=. tau (radians (degrees tau))))

            (match 9 (gcd 450 27))
            (match 40 (lcm 10 8))

            (match 27 (infix 27))
            (match 9 (infix [27 gcd 450]))
            (match 9 (infix [(* 3 9) gcd 450]))
            (match true (infix [#and 27 < 450 < 2000]))
            (match true (infix [#and 27 < 450 > 200]))
            (match true (infix [[27 < 450] and [200 < 2000]]))
            ))
