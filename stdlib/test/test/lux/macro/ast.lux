##  Copyright (c) Eduardo Julian. All rights reserved.
##  This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
##  If a copy of the MPL was not distributed with this file,
##  You can obtain one at http://mozilla.org/MPL/2.0/.

(;module:
  lux
  (lux (codata [io])
       (codata function)
       (control monad)
       (data [text "T/" Eq<Text>]
             text/format
             [number])
       (math ["R" random])
       pipe
       (macro ["&" ast]))
  lux/test)

(test: "AST"
  (let% [<tests> (do-template [<expr> <text>]
                   [(assert (format "Can produce AST node: " <text>)
                            (and (T/= <text> (&;to-text <expr>))
                                 (:: &;Eq<AST> = <expr> <expr>)))]

                   [(&;bool true)                                 "true"]
                   [(&;bool false)                                "false"]
                   [(&;int 123)                                   "123"]
                   [(&;real 123.0)                                "123.0"]
                   [(&;char #"\n")                                "#\"\\n\""]
                   [(&;text "\n")                                 "\"\\n\""]
                   [(&;tag ["yolo" "lol"])                        "#yolo;lol"]
                   [(&;symbol ["yolo" "lol"])                     "yolo;lol"]
                   [(&;form (list (&;bool true) (&;int 123)))     "(true 123)"]
                   [(&;tuple (list (&;bool true) (&;int 123)))    "[true 123]"]
                   [(&;record (list [(&;bool true) (&;int 123)])) "{true 123}"]
                   [(&;local-tag "lol")                           "#lol"]
                   [(&;local-symbol "lol")                        "lol"]
                   )]
    ($_ seq <tests>)))
