(;module:
  lux
  (lux [io]
       (control [monad #+ do Monad]
                [functor]
                [eq #+ Eq]
                [state])
       (data text/format
             [bool]
             [number]
             [text]
             [identity])
       ["r" math/random]
       [macro]
       (macro [poly #+ derived:]
              ["&" poly/functor]))
  lux/test)

## [Utils]
(derived: (&;Functor<?> ;Maybe))

(derived: (&;Functor<?> ;List))

(derived: (&;Functor<?> state;State))

(derived: (&;Functor<?> identity;Identity))

## [Tests]
(context: "Functor polytypism."
  (test "" true))
