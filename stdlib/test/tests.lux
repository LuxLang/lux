##  Copyright (c) Eduardo Julian. All rights reserved.
##  This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
##  If a copy of the MPL was not distributed with this file,
##  You can obtain one at http://mozilla.org/MPL/2.0/.

(;module:
  lux
  (lux (control monad)
       (codata [io])
       (concurrency [promise])
       [cli #+ program:]
       [test])
  (test lux
        (lux ["_;" cli]
             (data [bit]
                   [bool]
                   [char]
                   [error]
                   [ident]
                   [identity]
                   [log]
                   [maybe]
                   [number]
                   [product]
                   [sum]
                   [text]
                   (error [exception])
                   (format [json])
                   (struct [array]
                           [dict]
                           [list]
                           [queue]
                           [set]
                           [stack]
                           [tree]
                           [vector]
                           [zipper]
                           )
                   (text [format])
                   )
             ## (codata ["_;" io]
             ##         [env]
             ##         [state]
             ##         (struct [stream]))
             ## (macro [ast]
             ##        [syntax])
             ## [type]
             ## (concurrency ["_;" promise]
             ##              [frp]
             ##              [stm]
             ##              [actor]
             ##              )
             ## [host]
             ## [math]
             ## [pipe]
             ## [lexer]
             ## [regex]
             ## (data (format [json]))
             )
        )
  ## (lux ## (codata [cont])
  ##      ## (data (struct [stack]
  ##      ##               [tree]
  ##      ##               [zipper])
  ##      ##       (error exception))
  ##      ## (concurrency [atom])
  ##      ## [macro]
  ##      ## (macro [template]
  ##      ##        [poly]
  ##      ##        (poly ["poly_;" eq]
  ##      ##              ["poly_;" text-encoder]
  ##      ##              ["poly_;" functor]))
  ##      ## (math [ratio]
  ##      ##       [complex]
  ##      ##       [random])
  ##      ## (type [check] [auto])
  ##      ## (control [effect])
  ##      ["_;" lexer]
  ##      ["_;" regex]
  ##      (data (format ["_;" json]))
  ##      )
  )

## [Program]
(program: args
  (test;run))
