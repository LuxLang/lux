(.module:
  [library
   [lux (#- or and)
    [data
     ["." text
      ["%" format (#+ format)]]
     [collection
      ["." list ("#\." functor)]]]]])

(def: #export (quote text)
  (-> Text Text)
  (format text.double_quote text text.double_quote))

(def: #export (block content)
  (-> Text Text)
  (format content text.new_line text.new_line))

(def: #export (plural singular)
  (-> Text Text)
  (format singular "(s)"))

(def: #export (sentence content)
  (-> Text Text)
  (format content "."))

(def: #export paragraph
  (-> (List Text) Text)
  (|>> (list\map ..sentence)
       (text.join_with text.new_line)))

(template [<name> <word>]
  [(def: #export <name>
     (-> (List Text) Text)
     ## https://en.wikipedia.org/wiki/Serial_comma
     (text.join_with (format ", " <word> " ")))]

  [or     "or"]
  [and    "and"]
  [and/or "and/or"]
  )

(type: #export Section
  {#title Text
   #content Text})

(def: #export (section value)
  (-> Section Text)
  (format (..block (get@ #title value))
          (get@ #content value)))
